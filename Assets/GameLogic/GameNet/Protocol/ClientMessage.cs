// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: client_message.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Msg.ClientMessage {

  /// <summary>Holder for reflection information generated from client_message.proto</summary>
  public static partial class ClientMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for client_message.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRjbGllbnRfbWVzc2FnZS5wcm90bxISbXNnLmNsaWVudF9tZXNzYWdlIlEK",
            "EEMyU19URVNUX0NPTU1BTkQSCwoDY21kGAEgASgJEgwKBGFyZ3MYAiADKAki",
            "IgoJRVByb3RvY29sEggKBE5vbmUQABILCgdQcm90b0lEEAEiMgoMQzJTSGVh",
            "cnRiZWF0IiIKCUVQcm90b2NvbBIICgROb25lEAASCwoHUHJvdG9JRBACIkMK",
            "DFMyQ0hlYXJ0YmVhdBIPCgdTeXNUaW1lGAEgASgFIiIKCUVQcm90b2NvbBII",
            "CgROb25lEAASCwoHUHJvdG9JRBADIm0KEkMyU1JlZ2lzdGVyUmVxdWVzdBIP",
            "CgdBY2NvdW50GAEgASgJEhAKCFBhc3N3b3JkGAIgASgJEg8KB0lzR3Vlc3QY",
            "AyABKAgiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEOgHIm4K",
            "E1MyQ1JlZ2lzdGVyUmVzcG9uc2USDwoHQWNjb3VudBgBIAEoCRIQCghQYXNz",
            "d29yZBgCIAEoCRIPCgdJc0d1ZXN0GAMgASgIIiMKCUVQcm90b2NvbBIICgRO",
            "b25lEAASDAoHUHJvdG9JRBDpByK2AQodQzJTR3Vlc3RCaW5kTmV3QWNjb3Vu",
            "dFJlcXVlc3QSEAoIU2VydmVySWQYASABKAUSDwoHQWNjb3VudBgCIAEoCRIQ",
            "CghQYXNzd29yZBgDIAEoCRISCgpOZXdBY2NvdW50GAQgASgJEhMKC05ld1Bh",
            "c3N3b3JkGAUgASgJEhIKCk5ld0NoYW5uZWwYBiABKAkiIwoJRVByb3RvY29s",
            "EggKBE5vbmUQABIMCgdQcm90b0lEEOsHIqUBCh5TMkNHdWVzdEJpbmROZXdB",
            "Y2NvdW50UmVzcG9uc2USEAoIU2VydmVySWQYASABKAUSDwoHQWNjb3VudBgC",
            "IAEoCRISCgpOZXdBY2NvdW50GAMgASgJEhMKC05ld1Bhc3N3b3JkGAQgASgJ",
            "EhIKCk5ld0NoYW5uZWwYBSABKAkiIwoJRVByb3RvY29sEggKBE5vbmUQABIM",
            "CgdQcm90b0lEEOwHInkKGkMyU1NldExvZ2luUGFzc3dvcmRSZXF1ZXN0Eg8K",
            "B0FjY291bnQYASABKAkSEAoIUGFzc3dvcmQYAiABKAkSEwoLTmV3UGFzc3dv",
            "cmQYAyABKAkiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEO0H",
            "InoKG1MyQ1NldExvZ2luUGFzc3dvcmRSZXNwb25zZRIPCgdBY2NvdW50GAEg",
            "ASgJEhAKCFBhc3N3b3JkGAIgASgJEhMKC05ld1Bhc3N3b3JkGAMgASgJIiMK",
            "CUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDuByJmCg9DMlNMb2dp",
            "blJlcXVlc3QSCwoDQWNjGAEgASgJEhAKCFBhc3N3b3JkGAIgASgJEg8KB0No",
            "YW5uZWwYAyABKAkiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lE",
            "EMwIIjIKClNlcnZlckluZm8SCgoCSWQYASABKAUSDAoETmFtZRgCIAEoCRIK",
            "CgJJUBgDIAEoCSJiChFBY2NvdW50UGxheWVySW5mbxIQCghTZXJ2ZXJJZBgB",
            "IAEoBRISCgpQbGF5ZXJOYW1lGAIgASgJEhMKC1BsYXllckxldmVsGAMgASgF",
            "EhIKClBsYXllckhlYWQYBCABKAUixQEKEFMyQ0xvZ2luUmVzcG9uc2USCwoD",
            "QWNjGAEgASgJEg0KBVRva2VuGAIgASgJEg8KB0NoYW5uZWwYAyABKAkSOQoK",
            "UGxheWVySW5mbxgEIAEoCzIlLm1zZy5jbGllbnRfbWVzc2FnZS5BY2NvdW50",
            "UGxheWVySW5mbxIOCgZHYW1lSVAYBSABKAkSFAoMQm91bmRBY2NvdW50GAYg",
            "ASgJIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDOCCI5ChJT",
            "MkNPdGhlclBsYWNlTG9naW4iIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQ",
            "cm90b0lEEM8IIkcKE0MyU0VudGVyR2FtZVJlcXVlc3QSCwoDQWNjGAEgASgJ",
            "IiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDWCCJaChRTMkNF",
            "bnRlckdhbWVSZXNwb25zZRILCgNBY2MYASABKAkSEAoIUGxheWVySWQYAiAB",
            "KAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEENcIIkEKGlMy",
            "Q0VudGVyR2FtZUNvbXBsZXRlTm90aWZ5IiMKCUVQcm90b2NvbBIICgROb25l",
            "EAASDAoHUHJvdG9JRBDYCCI6ChNDMlNMZWF2ZUdhbWVSZXF1ZXN0IiMKCUVQ",
            "cm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDZCCI7ChRTMkNMZWF2ZUdh",
            "bWVSZXNwb25zZSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQ",
            "2ggiOwoUQzJTUGxheWVySW5mb1JlcXVlc3QiIwoJRVByb3RvY29sEggKBE5v",
            "bmUQABIMCgdQcm90b0lEEP4IIvwDChVTMkNQbGF5ZXJJbmZvUmVzcG9uc2US",
            "DQoFTGV2ZWwYASABKAUSCwoDRXhwGAIgASgFEgwKBEdvbGQYAyABKAUSDwoH",
            "RGlhbW9uZBgEIAEoBRIMCgRIZWFkGAUgASgFEhAKCFZpcExldmVsGAYgASgF",
            "EgwKBE5hbWUYByABKAkSDwoHU3lzVGltZRgIIAEoBRITCgtDdXJNYXhTdGFn",
            "ZRgJIAEoBRIZChFDdXJVbmxvY2tNYXhTdGFnZRgKIAEoBRIQCghDaGFybVZh",
            "bBgLIAEoBRIMCgRTdGFyGAwgASgFEgsKA1phbhgNIAEoBRIPCgdDYXRGb29k",
            "GA4gASgFEg4KBlNwaXJpdBgPIAEoBRIUCgxGcmllbmRQb2ludHMYECABKAUS",
            "EQoJU291bFN0b25lGBEgASgFEhIKCkNoYXJtTWV0YWwYEiABKAUSGQoRSGlz",
            "dG9yaWNhbE1heFN0YXIYEyABKAUSFQoNQ2hhbmdlTmFtZU51bRgUIAEoBRIZ",
            "ChFDaGFuZ2VOYW1lRnJlZU51bRgVIAEoBRIdChVDaGFuZ2VOYW1lQ29zdERp",
            "YW1vbmQYFiABKAUSHQoVTmV4dFN0YW1pbmFSZW1haW5TZWNzGBcgASgFIiMK",
            "CUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBD/CCJSChpDMlNQbGF5",
            "ZXJDaGFuZ2VOYW1lUmVxdWVzdBIPCgdOZXdOYW1lGAEgASgJIiMKCUVQcm90",
            "b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBCACSJTChtTMkNQbGF5ZXJDaGFu",
            "Z2VOYW1lUmVzcG9uc2USDwoHTmV3TmFtZRgBIAEoCSIjCglFUHJvdG9jb2wS",
            "CAoETm9uZRAAEgwKB1Byb3RvSUQQgQkiUgoaQzJTUGxheWVyQ2hhbmdlSGVh",
            "ZFJlcXVlc3QSDwoHTmV3SGVhZBgBIAEoBSIjCglFUHJvdG9jb2wSCAoETm9u",
            "ZRAAEgwKB1Byb3RvSUQQggkiUwobUzJDUGxheWVyQ2hhbmdlSGVhZFJlc3Bv",
            "bnNlEg8KB05ld0hlYWQYASABKAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIM",
            "CgdQcm90b0lEEIMJIjoKE0MyU1JlY29ubmVjdFJlcXVlc3QiIwoJRVByb3Rv",
            "Y29sEggKBE5vbmUQABIMCgdQcm90b0lEEIgJIk0KFFMyQ1JlY29ubmVjdFJl",
            "c3BvbnNlEhAKCE5ld1Rva2VuGAEgASgJIiMKCUVQcm90b2NvbBIICgROb25l",
            "EAASDAoHUHJvdG9JRBCJCSIsCgtDMlNfT05FX01TRxIPCgdNc2dDb2RlGAEg",
            "ASgFEgwKBERhdGEYAiABKAwiTwoMQzJTX01TR19EQVRBEg0KBVRva2VuGAEg",
            "ASgJEjAKB01zZ0xpc3QYAiADKAsyHy5tc2cuY2xpZW50X21lc3NhZ2UuQzJT",
            "X09ORV9NU0ciPwoLUzJDX09ORV9NU0cSDwoHTXNnQ29kZRgBIAEoBRIRCglF",
            "cnJvckNvZGUYAiABKAUSDAoERGF0YRgDIAEoDCJACgxTMkNfTVNHX0RBVEES",
            "MAoHTXNnTGlzdBgBIAMoCzIfLm1zZy5jbGllbnRfbWVzc2FnZS5TMkNfT05F",
            "X01TRyIgCgVJZE51bRIKCgJJZBgBIAEoBRILCgNOdW0YAiABKAUiagoISXRl",
            "bUluZm8SEQoJSXRlbUNmZ0lkGAEgASgFEg8KB0l0ZW1OdW0YAiABKAUSFQoN",
            "UmVtYWluU2Vjb25kcxgDIAEoBSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwK",
            "B1Byb3RvSUQQsAki+gEKB0NhdEluZm8SCgoCSWQYASABKAUSEAoIQ2F0Q2Zn",
            "SWQYAiABKAUSCwoDRXhwGAMgASgFEg0KBUxldmVsGAQgASgFEgwKBFN0YXIY",
            "BSABKAUSDAoETmljaxgGIAEoCRISCgpTa2lsbExldmVsGAcgASgFEg4KBkxv",
            "Y2tlZBgIIAEoCBITCgtDb2luQWJpbGl0eRgJIAEoBRIWCg5FeHBsb3JlQWJp",
            "bGl0eRgKIAEoBRIUCgxNYXRjaEFiaWxpdHkYCyABKAUSDQoFU3RhdGUYDCAB",
            "KAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEELEJIkwKDEJ1",
            "aWxkaW5nSW5mbxIKCgJJZBgBIAEoBRINCgVDZmdJZBgCIAEoBRIJCgFYGAMg",
            "ASgFEgkKAVkYBCABKAUSCwoDRGlyGAUgASgFIlQKEURlcG90QnVpbGRpbmdJ",
            "bmZvEg0KBUNmZ0lkGAEgASgFEgsKA051bRgCIAEoBSIjCglFUHJvdG9jb2wS",
            "CAoETm9uZRAAEgwKB1Byb3RvSUQQsgkiYAoMUmVzb3VyY2VJbmZvEhQKDFJl",
            "c291cmNlVHlwZRgBIAEoBRIVCg1SZXNvdXJjZVZhbHVlGAIgASgFIiMKCUVQ",
            "cm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBCzCSIZCghBcmVhSW5mbxIN",
            "CgVDZmdJZBgBIAEoBSI8CglTdGFnZUluZm8SDwoHU3RhZ2VJZBgBIAEoBRIM",
            "CgRTdGFyGAIgASgFEhAKCFRvcFNjb3JlGAMgASgFImYKElMyQ0l0ZW1zSW5m",
            "b1VwZGF0ZRIrCgVJdGVtcxgBIAMoCzIcLm1zZy5jbGllbnRfbWVzc2FnZS5J",
            "dGVtSW5mbyIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQkE4i",
            "qwEKEVMyQ0NhdHNJbmZvVXBkYXRlEiwKB0FkZENhdHMYASADKAsyGy5tc2cu",
            "Y2xpZW50X21lc3NhZ2UuQ2F0SW5mbxIvCgpVcGRhdGVDYXRzGAIgAygLMhsu",
            "bXNnLmNsaWVudF9tZXNzYWdlLkNhdEluZm8SEgoKUmVtb3ZlQ2F0cxgDIAMo",
            "BSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQkU4iyQEKFlMy",
            "Q0J1aWxkaW5nc0luZm9VcGRhdGUSNgoMQWRkQnVpbGRpbmdzGAEgAygLMiAu",
            "bXNnLmNsaWVudF9tZXNzYWdlLkJ1aWxkaW5nSW5mbxI5Cg9VcGRhdGVCdWls",
            "ZGluZ3MYAiADKAsyIC5tc2cuY2xpZW50X21lc3NhZ2UuQnVpbGRpbmdJbmZv",
            "EhcKD1JlbW92ZUJ1aWxkaW5ncxgDIAMoBSIjCglFUHJvdG9jb2wSCAoETm9u",
            "ZRAAEgwKB1Byb3RvSUQQkk4iewoaUzJDRGVwb3RCdWlsZGluZ0luZm9VcGRh",
            "dGUSOAoJQnVpbGRpbmdzGAEgAygLMiUubXNnLmNsaWVudF9tZXNzYWdlLkRl",
            "cG90QnVpbGRpbmdJbmZvIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJv",
            "dG9JRBCTTiLyAQoKQzJTR2V0SW5mbxIMCgRCYXNlGAEgASgIEgwKBEl0ZW0Y",
            "AiABKAgSCwoDQ2F0GAMgASgIEhAKCEJ1aWxkaW5nGAQgASgIEgwKBEFyZWEY",
            "BSABKAgSDQoFU3RhZ2UYBiABKAgSFQoNRGVwb3RCdWlsZGluZxgHIAEoCBIP",
            "CgdGb3JtdWxhGAggASgIEg0KBUd1aWRlGAkgASgIEhAKCENhdEhvdXNlGAog",
            "ASgIEhAKCFdvcmtTaG9wGAsgASgIEgwKBEZhcm0YDCABKAgiIwoJRVByb3Rv",
            "Y29sEggKBE5vbmUQABIMCgdQcm90b0lEEJROIjYKD0MyU0dldEl0ZW1JbmZv",
            "cyIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQl04iYwoPUzJD",
            "R2V0SXRlbUluZm9zEisKBUl0ZW1zGAEgAygLMhwubXNnLmNsaWVudF9tZXNz",
            "YWdlLkl0ZW1JbmZvIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9J",
            "RBCYTiI6ChNDMlNHZXRCdWlsZGluZ0luZm9zIiMKCUVQcm90b2NvbBIICgRO",
            "b25lEAASDAoHUHJvdG9JRBCZTiJsChNTMkNHZXRCdWlsZGluZ0luZm9zEjAK",
            "BkJ1aWxkcxgBIAMoCzIgLm1zZy5jbGllbnRfbWVzc2FnZS5CdWlsZGluZ0lu",
            "Zm8iIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEJpOIj8KGEMy",
            "U0dldERlcG90QnVpbGRpbmdJbmZvcyIjCglFUHJvdG9jb2wSCAoETm9uZRAA",
            "EgwKB1Byb3RvSUQQm04iewoYUzJDR2V0RGVwb3RCdWlsZGluZ0luZm9zEjoK",
            "C0RlcG90QnVpbGRzGAEgAygLMiUubXNnLmNsaWVudF9tZXNzYWdlLkRlcG90",
            "QnVpbGRpbmdJbmZvIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9J",
            "RBCcTiI1Cg5DMlNHZXRDYXRJbmZvcyIjCglFUHJvdG9jb2wSCAoETm9uZRAA",
            "EgwKB1Byb3RvSUQQnU4iYAoOUzJDR2V0Q2F0SW5mb3MSKQoEQ2F0cxgBIAMo",
            "CzIbLm1zZy5jbGllbnRfbWVzc2FnZS5DYXRJbmZvIiMKCUVQcm90b2NvbBII",
            "CgROb25lEAASDAoHUHJvdG9JRBCeTiI3ChBDMlNHZXRBcmVhc0luZm9zIiMK",
            "CUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBCfTiJkChBTMkNHZXRB",
            "cmVhc0luZm9zEisKBUFyZWFzGAEgAygLMhwubXNnLmNsaWVudF9tZXNzYWdl",
            "LkFyZWFJbmZvIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBCg",
            "TiI3ChBDMlNHZXRTdGFnZUluZm9zIiMKCUVQcm90b2NvbBIICgROb25lEAAS",
            "DAoHUHJvdG9JRBChTiLHAQoQUzJDR2V0U3RhZ2VJbmZvcxItCgZTdGFnZXMY",
            "ASADKAsyHS5tc2cuY2xpZW50X21lc3NhZ2UuU3RhZ2VJbmZvEhMKC0N1ck1h",
            "eFN0YWdlGAIgASgFEhkKEUN1clVubG9ja01heFN0YWdlGAMgASgFEhUKDVVu",
            "bG9ja0xlZnRTZWMYBCABKAUSGAoQQ3VyVW5sb2NrU3RhZ2VJZBgFIAEoBSIj",
            "CglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQok4iMQoKQzJTR2V0",
            "Q29pbiIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQo04iPwoK",
            "UzJDR2V0Q29pbhIMCgRDb2luGAEgASgFIiMKCUVQcm90b2NvbBIICgROb25l",
            "EAASDAoHUHJvdG9JRBCkTiI0Cg1DMlNHZXREaWFtb25kIiMKCUVQcm90b2Nv",
            "bBIICgROb25lEAASDAoHUHJvdG9JRBClTiJFCg1TMkNHZXREaWFtb25kEg8K",
            "B0RpYW1vbmQYASABKAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90",
            "b0lEEKZOIjUKDkMyU0dldENoYXJtVmFsIiMKCUVQcm90b2NvbBIICgROb25l",
            "EAASDAoHUHJvdG9JRBCnTiJHCg5TMkNHZXRDaGFybVZhbBIQCghDaGFybVZh",
            "bBgBIAEoBSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQqE4i",
            "MAoJQzJTR2V0WmFuIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9J",
            "RBCpTiI9CglTMkNHZXRaYW4SCwoDWmFuGAEgASgFIiMKCUVQcm90b2NvbBII",
            "CgROb25lEAASDAoHUHJvdG9JRBCqTiI0Cg1DMlNHZXRDYXRGb29kIiMKCUVQ",
            "cm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBCrTiJFCg1TMkNHZXRDYXRG",
            "b29kEg8KB0NhdEZvb2QYASABKAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIM",
            "CgdQcm90b0lEEKxOIjMKDEMyU0dldFNwaXJpdCIjCglFUHJvdG9jb2wSCAoE",
            "Tm9uZRAAEgwKB1Byb3RvSUQQrU4iQwoMUzJDR2V0U3Bpcml0Eg4KBlNwaXJp",
            "dBgBIAEoBSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQrk4i",
            "nwEKDEMyU1N0YWdlUGFzcxIPCgdTdGFnZUlkGAEgASgFEg0KBVN0YXJzGAIg",
            "ASgFEg0KBVNjb3JlGAMgASgFEisKBUl0ZW1zGAQgAygLMhwubXNnLmNsaWVu",
            "dF9tZXNzYWdlLkl0ZW1JbmZvEg4KBlJlc3VsdBgFIAEoBSIjCglFUHJvdG9j",
            "b2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQ9E4iWwoPUGxheWVyU3RhZ2VJbmZv",
            "EhAKCFBsYXllcklkGAEgASgFEg0KBVNjb3JlGAIgASgFEgwKBE5hbWUYAyAB",
            "KAkSCwoDTHZsGAQgASgFEgwKBEhlYWQYBSABKAUinQQKDFMyQ1N0YWdlUGFz",
            "cxIPCgdTdGFnZUlkGAEgASgFEg0KBVN0YXJzGAIgASgFEg0KBVNjb3JlGAMg",
            "ASgFEhAKCFRvcFNjb3JlGAQgASgFEi4KCFVzZUl0ZW1zGAUgAygLMhwubXNn",
            "LmNsaWVudF9tZXNzYWdlLkl0ZW1JbmZvEg8KB0dldENvaW4YBiABKAUSLgoI",
            "R2V0SXRlbXMYByADKAsyHC5tc2cuY2xpZW50X21lc3NhZ2UuSXRlbUluZm8S",
            "OAoLRnJpZW5kSXRlbXMYCSADKAsyIy5tc2cuY2xpZW50X21lc3NhZ2UuUGxh",
            "eWVyU3RhZ2VJbmZvEiwKB0dldENhdHMYCiADKAsyGy5tc2cuY2xpZW50X21l",
            "c3NhZ2UuQ2F0SW5mbxI7CgxHZXRCdWlsZGluZ3MYCyADKAsyJS5tc2cuY2xp",
            "ZW50X21lc3NhZ2UuRGVwb3RCdWlsZGluZ0luZm8SDgoGUmVzdWx0GAwgASgF",
            "EjMKDUdldEl0ZW1zRmlyc3QYDSADKAsyHC5tc2cuY2xpZW50X21lc3NhZ2Uu",
            "SXRlbUluZm8SMwoNR2V0SXRlbXMzU3RhchgOIAMoCzIcLm1zZy5jbGllbnRf",
            "bWVzc2FnZS5JdGVtSW5mbxIXCg9DYXRFeHRyYUFkZENvaW4YDyABKAUiIwoJ",
            "RVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEPVOInEKEEMyU0NoYXB0",
            "ZXJVbmxvY2sSEgoKVW5Mb2NrVHlwZRgBIAEoBRIRCglDaGFwdGVySWQYAiAB",
            "KAUSEQoJRnJpZW5kSWRzGAMgAygFIiMKCUVQcm90b2NvbBIICgROb25lEAAS",
            "DAoHUHJvdG9JRBD2TiJkChBTMkNDaGFwdGVyVW5sb2NrEhEKCUNoYXB0ZXJJ",
            "ZBgBIAEoBRIYChBNYXhVbmxvY2tTdGFnZUlkGAIgASgFIiMKCUVQcm90b2Nv",
            "bBIICgROb25lEAASDAoHUHJvdG9JRBD3TiI7ChRDMlNHZXRDdXJIZWxwUmVx",
            "UElkcyIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQ+E4iSQoU",
            "UzJDUmV0Q3VySGVscFJlcVBJZHMSDAoEUElkcxgBIAMoBSIjCglFUHJvdG9j",
            "b2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQ+U4iVQoYUzJDUmV0RGF5SGVscFVu",
            "bG9ja0NvdW50EhQKDEhlbHBPdGhlck51bRgBIAEoBSIjCglFUHJvdG9jb2wS",
            "CAoETm9uZRAAEgwKB1Byb3RvSUQQ+k4iZQoNQzJTU3RhZ2VCZWdpbhIPCgdT",
            "dGFnZUlkGAEgASgFEg0KBUNhdElkGAIgASgFEg8KB0l0ZW1JZHMYAyADKAUi",
            "IwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEPtOIksKE1MyQ1N0",
            "YWdlQmVnaW5SZXN1bHQSDwoHU3RhZ2VJZBgBIAEoBSIjCglFUHJvdG9jb2wS",
            "CAoETm9uZRAAEgwKB1Byb3RvSUQQ/E4irwEKDFMyQ09wZW5DaGVzdBIPCgdD",
            "aGVzdElkGAEgASgFEhAKCEN1ckNvaW5zGAIgASgFEhIKCkN1ckRpYW1vbmQY",
            "AyABKAUSLgoITmV3SXRlbXMYBCADKAsyHC5tc2cuY2xpZW50X21lc3NhZ2Uu",
            "SXRlbUluZm8SEwoLQ29zdERpYW1vbmQYBSABKAUiIwoJRVByb3RvY29sEggK",
            "BE5vbmUQABIMCgdQcm90b0lEENhPIkMKC0MyU0J1eUNoZXN0Eg8KB0NoZXN0",
            "SWQYASABKAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEENlP",
            "ImcKC1MyQ0J1eUNoZXN0EjMKCUNoZXN0T3BlbhgBIAEoCzIgLm1zZy5jbGll",
            "bnRfbWVzc2FnZS5TMkNPcGVuQ2hlc3QiIwoJRVByb3RvY29sEggKBE5vbmUQ",
            "ABIMCgdQcm90b0lEENpPIlUKCkMyU1VzZUl0ZW0SEQoJSXRlbUNmZ0lkGAEg",
            "ASgFEg8KB0l0ZW1OdW0YAiABKAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIM",
            "CgdQcm90b0lEENtPImEKClMyQ1VzZUl0ZW0SLgoIQ29zdEl0ZW0YASABKAsy",
            "HC5tc2cuY2xpZW50X21lc3NhZ2UuSXRlbUluZm8iIwoJRVByb3RvY29sEggK",
            "BE5vbmUQABIMCgdQcm90b0lEENxPIlMKC0MyU1NlbGxJdGVtEg4KBkl0ZW1J",
            "ZBgBIAEoBRIPCgdJdGVtTnVtGAIgASgFIiMKCUVQcm90b2NvbBIICgROb25l",
            "EAASDAoHUHJvdG9JRBDdTyJZChFTMkNTZWxsSXRlbVJlc3VsdBIOCgZJdGVt",
            "SWQYASABKAUSDwoHSXRlbU51bRgCIAEoBSIjCglFUHJvdG9jb2wSCAoETm9u",
            "ZRAAEgwKB1Byb3RvSUQQ3k8i0QEKEkMyU01haWxTZW5kUmVxdWVzdBISCgpS",
            "ZWNlaXZlcklkGAEgASgFEhAKCE1haWxUeXBlGAIgASgFEhMKC01haWxTdWJ0",
            "eXBlGAMgASgFEhEKCU1haWxUaXRsZRgEIAEoCRITCgtNYWlsQ29udGVudBgF",
            "IAEoCRIzCg1BdHRhY2hlZEl0ZW1zGAYgAygLMhwubXNnLmNsaWVudF9tZXNz",
            "YWdlLkl0ZW1JbmZvIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9J",
            "RBC8UCJKChNTMkNNYWlsU2VuZFJlc3BvbnNlEg4KBk1haWxJZBgBIAEoBSIj",
            "CglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQvVAiOQoSQzJTTWFp",
            "bExpc3RSZXF1ZXN0IiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9J",
            "RBC+UCLeAQoNTWFpbEJhc2ljRGF0YRIKCgJJZBgBIAEoBRIMCgRUeXBlGAIg",
            "ASgFEg8KB1N1YnR5cGUYAyABKAUSDQoFVGl0bGUYBCABKAkSEgoKU2VuZGVy",
            "TmFtZRgFIAEoCRIQCghTZW5kZXJJZBgGIAEoBRIQCghTZW5kVGltZRgHIAEo",
            "BRIOCgZJc1JlYWQYCCABKAgSFQoNSXNHZXRBdHRhY2hlZBgJIAEoCBITCgtI",
            "YXNBdHRhY2hlZBgKIAEoCBINCgVWYWx1ZRgLIAEoBRIQCghMZWZ0U2VjcxgM",
            "IAEoBSJsChNTMkNNYWlsTGlzdFJlc3BvbnNlEjAKBU1haWxzGAEgAygLMiEu",
            "bXNnLmNsaWVudF9tZXNzYWdlLk1haWxCYXNpY0RhdGEiIwoJRVByb3RvY29s",
            "EggKBE5vbmUQABIMCgdQcm90b0lEEL9QIkgKFEMyU01haWxEZXRhaWxSZXF1",
            "ZXN0EgsKA0lkcxgBIAMoBSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1By",
            "b3RvSUQQwFAiXgoKTWFpbERldGFpbBIKCgJJZBgBIAEoBRIPCgdDb250ZW50",
            "GAIgASgJEjMKDUF0dGFjaGVkSXRlbXMYAyADKAsyHC5tc2cuY2xpZW50X21l",
            "c3NhZ2UuSXRlbUluZm8iawoVUzJDTWFpbERldGFpbFJlc3BvbnNlEi0KBU1h",
            "aWxzGAEgAygLMh4ubXNnLmNsaWVudF9tZXNzYWdlLk1haWxEZXRhaWwiIwoJ",
            "RVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEMFQIlYKHkMyU01haWxH",
            "ZXRBdHRhY2hlZEl0ZW1zUmVxdWVzdBIPCgdNYWlsSWRzGAEgAygFIiMKCUVQ",
            "cm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDCUCKMAQofUzJDTWFpbEdl",
            "dEF0dGFjaGVkSXRlbXNSZXNwb25zZRIPCgdNYWlsSWRzGAEgAygFEjMKDUF0",
            "dGFjaGVkSXRlbXMYAiADKAsyHC5tc2cuY2xpZW50X21lc3NhZ2UuSXRlbUlu",
            "Zm8iIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEMNQIkwKFEMy",
            "U01haWxEZWxldGVSZXF1ZXN0Eg8KB01haWxJZHMYASADKAUiIwoJRVByb3Rv",
            "Y29sEggKBE5vbmUQABIMCgdQcm90b0lEEMRQIk0KFVMyQ01haWxEZWxldGVS",
            "ZXNwb25zZRIPCgdNYWlsSWRzGAEgAygFIiMKCUVQcm90b2NvbBIICgROb25l",
            "EAASDAoHUHJvdG9JRBDFUCJqChFTMkNNYWlsc05ld05vdGlmeRIwCgVNYWls",
            "cxgBIAMoCzIhLm1zZy5jbGllbnRfbWVzc2FnZS5NYWlsQmFzaWNEYXRhIiMK",
            "CUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDGUCJFCg5DMlNTYXZl",
            "T3B0aW9ucxIOCgZWYWx1ZXMYASADKAUiIwoJRVByb3RvY29sEggKBE5vbmUQ",
            "ABIMCgdQcm90b0lEEKBRIjQKDUMyU0dldE9wdGlvbnMiIwoJRVByb3RvY29s",
            "EggKBE5vbmUQABIMCgdQcm90b0lEEKFRIkQKDVMyQ1JldE9wdGlvbnMSDgoG",
            "VmFsdWVzGAEgAygFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9J",
            "RBCiUSI0CghUYXNrRGF0YRIKCgJJZBgBIAEoBRINCgVWYWx1ZRgCIAEoBRIN",
            "CgVTdGF0ZRgDIAEoBSJLChJDMlNUYXNrRGF0YVJlcXVlc3QSEAoIVGFza1R5",
            "cGUYASABKAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEIRS",
            "IqMBChNTMkNUYXNrRGF0YVJlc3BvbnNlEhAKCFRhc2tUeXBlGAEgASgFEi4K",
            "CFRhc2tMaXN0GAIgAygLMhwubXNnLmNsaWVudF9tZXNzYWdlLlRhc2tEYXRh",
            "EiUKHURhaWx5VGFza1JlZnJlc2hSZW1haW5TZWNvbmRzGAMgASgFIiMKCUVQ",
            "cm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBCFUiJlChJTMkNUYXNrVmFs",
            "dWVOb3RpZnkSKgoERGF0YRgBIAEoCzIcLm1zZy5jbGllbnRfbWVzc2FnZS5U",
            "YXNrRGF0YSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQhlIi",
            "SwoUQzJTVGFza1Jld2FyZFJlcXVlc3QSDgoGVGFza0lkGAEgASgFIiMKCUVQ",
            "cm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBCHUiJMChVTMkNUYXNrUmV3",
            "YXJkUmVzcG9uc2USDgoGVGFza0lkGAEgASgFIiMKCUVQcm90b2NvbBIICgRO",
            "b25lEAASDAoHUHJvdG9JRBCIUiI/CgpDMlNDaGdOYW1lEgwKBE5hbWUYASAB",
            "KAkiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEOhSIlUKClMy",
            "Q0NoZ05hbWUSDAoETmFtZRgBIAEoCRIUCgxDaGdOYW1lQ291bnQYAiABKAUi",
            "IwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEOlSIkUKDUMyU0No",
            "YW5nZUhlYWQSDwoHTmV3SGVhZBgBIAEoBSIjCglFUHJvdG9jb2wSCAoETm9u",
            "ZRAAEgwKB1Byb3RvSUQQ6lIiRQoNUzJDQ2hhbmdlSGVhZBIPCgdOZXdIZWFk",
            "GAEgASgFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDrUiJ9",
            "Cg9TMkNTeW5jU2lnbkluZm8SEgoKQ3VyU2lnblN1bRgBIAEoBRITCgtDdXJT",
            "aWduRGF5cxgCIAMoBRIcChRDdXJHZXRTaWduU3VtUmV3YXJkcxgDIAMoBSIj",
            "CglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQzFMiMQoKQzJTRGF5",
            "U2lnbiIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQzVMinwIK",
            "ClMyQ0RheVNpZ24SDwoHU2lnbkRheRgBIAEoBRIPCgdDdXJDb2luGAIgASgF",
            "EhIKCkN1ckRpYW1vbmQYAyABKAUSFQoNQ3VyQ2FyZFRva2VuMRgEIAEoBRIV",
            "Cg1DdXJDYXJkVG9rZW4yGAUgASgFEhUKDUN1ckNhcmRUb2tlbjMYBiABKAUS",
            "FQoNQ3VyQ2FyZFRva2VuNBgHIAEoBRIzCglDaGVzdE9wZW4YCCABKAsyIC5t",
            "c2cuY2xpZW50X21lc3NhZ2UuUzJDT3BlbkNoZXN0EhEKCUNhcmRDZmdJZBgJ",
            "IAEoBRISCgpDdXJDYXJkTnVtGAogASgFIiMKCUVQcm90b2NvbBIICgROb25l",
            "EAASDAoHUHJvdG9JRBDOUyJNChZDMlNHZXREYXlTaWduU3VtUmV3YXJkEg4K",
            "BlN1bU51bRgBIAEoBSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3Rv",
            "SUQQz1MigAEKFlMyQ1JldERheVNpZ25TdW1SZXdhcmQSMQoHUmV3YXJkcxgB",
            "IAEoCzIgLm1zZy5jbGllbnRfbWVzc2FnZS5TMkNPcGVuQ2hlc3QSDgoGU3Vt",
            "TnVtGAIgASgFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDQ",
            "UyJ+Cg5DMlNTZXRCdWlsZGluZxIJCgFYGAEgASgFEgkKAVkYAiABKAUSFQoN",
            "QnVpbGRpbmdDZmdJZBgDIAEoBRILCgNEaXIYBCABKAUSDQoFSWZCdXkYBSAB",
            "KAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEJRVIm8KDlMy",
            "Q1NldEJ1aWxkaW5nEgkKAVgYASABKAUSCQoBWRgCIAEoBRIVCg1CdWlsZGlu",
            "Z0NmZ0lkGAMgASgFEgsKA0RpchgEIAEoBSIjCglFUHJvdG9jb2wSCAoETm9u",
            "ZRAAEgwKB1Byb3RvSUQQlVUibQoPQzJTTW92ZUJ1aWxkaW5nEhIKCkJ1aWxk",
            "aW5nSWQYASABKAUSCQoBWBgCIAEoBRIJCgFZGAMgASgFEgsKA0RpchgEIAEo",
            "BSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQllUiYgoRQzJT",
            "Q2hnQnVpbGRpbmdEaXISEgoKQnVpbGRpbmdJZBgBIAEoBRIJCgFYGAIgASgF",
            "EgkKAVkYAyABKAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lE",
            "EJdVIk0KEkMyU0dldEJhY2tCdWlsZGluZxISCgpCdWlsZGluZ0lkGAEgASgF",
            "IiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBCYVSJNChJTMkNH",
            "ZXRCYWNrQnVpbGRpbmcSEgoKQnVpbGRpbmdJZBgBIAEoBSIjCglFUHJvdG9j",
            "b2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQmVUiSgoPQzJTU2VsbEJ1aWxkaW5n",
            "EhIKCkJ1aWxkaW5nSWQYASABKAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIM",
            "CgdQcm90b0lEEJpVIkoKD1MyQ1NlbGxCdWlsZGluZxISCgpCdWlsZGluZ0lk",
            "GAEgASgFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBCbVSJJ",
            "Cg5DMlNSZW1vdmVCbG9jaxISCgpCdWlsZGluZ0lkGAEgASgFIiMKCUVQcm90",
            "b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBCcVSLgAQoOUzJDUmVtb3ZlQmxv",
            "Y2sSEgoKQnVpbGRpbmdJZBgBIAEoBRIrCgVJdGVtcxgCIAMoCzIcLm1zZy5j",
            "bGllbnRfbWVzc2FnZS5JdGVtSW5mbxIpCgRDYXRzGAMgAygLMhsubXNnLmNs",
            "aWVudF9tZXNzYWdlLkNhdEluZm8SPQoORGVwb3RCdWlsZGluZ3MYBCADKAsy",
            "JS5tc2cuY2xpZW50X21lc3NhZ2UuRGVwb3RCdWlsZGluZ0luZm8iIwoJRVBy",
            "b3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEJ1VIlwKD0MyU09wZW5NYXBD",
            "aGVzdBISCgpCdWlsZGluZ0lkGAEgASgFEhAKCEZyaWVuZElkGAIgASgFIiMK",
            "CUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBCeVSLzAQoPUzJDT3Bl",
            "bk1hcENoZXN0EhIKCkJ1aWxkaW5nSWQYASABKAUSEAoIRnJpZW5kSWQYAiAB",
            "KAUSKwoFSXRlbXMYAyADKAsyHC5tc2cuY2xpZW50X21lc3NhZ2UuSXRlbUlu",
            "Zm8SKQoEQ2F0cxgEIAMoCzIbLm1zZy5jbGllbnRfbWVzc2FnZS5DYXRJbmZv",
            "Ej0KDkRlcG90QnVpbGRpbmdzGAUgAygLMiUubXNnLmNsaWVudF9tZXNzYWdl",
            "LkRlcG90QnVpbGRpbmdJbmZvIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoH",
            "UHJvdG9JRBCfVSJVCg1DMlNVbmxvY2tBcmVhEg4KBkFyZWFJZBgBIAEoBRIP",
            "CgdJZlF1aWNrGAIgASgFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJv",
            "dG9JRBCgVSJECg1TMkNVbmxvY2tBcmVhEg4KBkFyZWFJZBgBIAEoBSIjCglF",
            "UHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQoVUiPAoVQzJTU3VyZmFj",
            "ZURhdGFSZXF1ZXN0IiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9J",
            "RBCiVSJtChZTMkNTdXJmYWNlRGF0YVJlc3BvbnNlEi4KBERhdGEYASADKAsy",
            "IC5tc2cuY2xpZW50X21lc3NhZ2UuQnVpbGRpbmdJbmZvIiMKCUVQcm90b2Nv",
            "bBIICgROb25lEAASDAoHUHJvdG9JRBCjVSKqAQoXQzJTU3VyZmFjZVVwZGF0",
            "ZVJlcXVlc3QSNAoKVXBkYXRlRGF0YRgBIAMoCzIgLm1zZy5jbGllbnRfbWVz",
            "c2FnZS5CdWlsZGluZ0luZm8SNAoKUmVtb3ZlRGF0YRgCIAMoCzIgLm1zZy5j",
            "bGllbnRfbWVzc2FnZS5CdWlsZGluZ0luZm8iIwoJRVByb3RvY29sEggKBE5v",
            "bmUQABIMCgdQcm90b0lEEKRVIj8KGFMyQ1N1cmZhY2VVcGRhdGVSZXNwb25z",
            "ZSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQpVUiUwoHQzJT",
            "RHJhdxIQCghEcmF3VHlwZRgBIAEoBRIRCglEcmF3Q291bnQYAiABKAUiIwoJ",
            "RVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEPhVItcBCg1TMkNEcmF3",
            "UmVzdWx0EikKBENhdHMYASADKAsyGy5tc2cuY2xpZW50X21lc3NhZ2UuQ2F0",
            "SW5mbxIrCgVJdGVtcxgCIAMoCzIcLm1zZy5jbGllbnRfbWVzc2FnZS5JdGVt",
            "SW5mbxI4CglCdWlsZGluZ3MYAyADKAsyJS5tc2cuY2xpZW50X21lc3NhZ2Uu",
            "RGVwb3RCdWlsZGluZ0luZm8SDwoHSXNGaXJzdBgEIAEoCCIjCglFUHJvdG9j",
            "b2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQ+VUiSQoNQzJTQ29tcG9zZUNhdBIT",
            "CgtDYXRDb25maWdJZBgBIAEoBSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwK",
            "B1Byb3RvSUQQ+lUimAEKE1MyQ0NvbXBvc2VDYXRSZXN1bHQSKAoDQ2F0GAEg",
            "ASgLMhsubXNnLmNsaWVudF9tZXNzYWdlLkNhdEluZm8SMgoMVXNlZEZyYWdt",
            "ZW50GAIgASgLMhwubXNnLmNsaWVudF9tZXNzYWdlLkl0ZW1JbmZvIiMKCUVQ",
            "cm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBD7VSJLCg9DMlNJdGVtUmVz",
            "b3VyY2USEwoLUmVzb3VyY2VJZHMYASADKAUiIwoJRVByb3RvY29sEggKBE5v",
            "bmUQABIMCgdQcm90b0lEEPxVImYKFFMyQ0l0ZW1SZXNvdXJjZVZhbHVlEhIK",
            "ClJlc291cmNlSWQYASABKAUSFQoNUmVzb3VyY2VWYWx1ZRgCIAEoBSIjCglF",
            "UHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQ/VUidQoVUzJDSXRlbVJl",
            "c291cmNlUmVzdWx0EjcKBUl0ZW1zGAIgAygLMigubXNnLmNsaWVudF9tZXNz",
            "YWdlLlMyQ0l0ZW1SZXNvdXJjZVZhbHVlIiMKCUVQcm90b2NvbBIICgROb25l",
            "EAASDAoHUHJvdG9JRBD+VSJDCgxDMlNTaG9wSXRlbXMSDgoGU2hvcElkGAEg",
            "ASgFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBD/VSJTCgtT",
            "MkNTaG9wSXRlbRIOCgZJdGVtSWQYASABKAUSDwoHTGVmdE51bRgCIAEoBSIj",
            "CglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQgFYikAEKElMyQ1No",
            "b3BJdGVtc1Jlc3VsdBIOCgZTaG9wSWQYASABKAUSLgoFSXRlbXMYAiADKAsy",
            "Hy5tc2cuY2xpZW50X21lc3NhZ2UuUzJDU2hvcEl0ZW0SFQoNUmVtYWluU2Vj",
            "b25kcxgDIAEoBSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQ",
            "gVYiVgoOQzJTQnV5U2hvcEl0ZW0SDgoGSXRlbUlkGAEgASgFEg8KB0l0ZW1O",
            "dW0YAiABKAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEIJW",
            "Is4BChRTMkNCdXlTaG9wSXRlbVJlc3VsdBIOCgZTaG9wSWQYASABKAUSDgoG",
            "SXRlbUlkGAIgASgFEg8KB0l0ZW1OdW0YAyABKAUSLQoHQWRkSXRlbRgEIAEo",
            "CzIcLm1zZy5jbGllbnRfbWVzc2FnZS5JdGVtSW5mbxIxCgdDb3N0UmVzGAUg",
            "ASgLMiAubXNnLmNsaWVudF9tZXNzYWdlLlJlc291cmNlSW5mbyIjCglFUHJv",
            "dG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQg1YiPwoYUzJDU2hvcE5lZWRS",
            "ZWZyZXNoTm90aWZ5IiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9J",
            "RBCEViJRCgpDMlNDYXRGZWVkEg0KBUNhdElkGAEgASgFEg8KB0NhdEZvb2QY",
            "AiABKAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEENxWInwK",
            "EFMyQ0NhdEZlZWRSZXN1bHQSDQoFQ2F0SWQYASABKAUSEAoIQ2F0TGV2ZWwY",
            "AiABKAUSDgoGQ2F0RXhwGAMgASgFEhIKCklzQ3JpdGljYWwYBCABKAgiIwoJ",
            "RVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEN1WIlsKEUMyU0NhdFVw",
            "Z3JhZGVTdGFyEg0KBUNhdElkGAEgASgFEhIKCkNvc3RDYXRJZHMYAiADKAUi",
            "IwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEN5WIl4KF1MyQ0Nh",
            "dFVwZ3JhZGVTdGFyUmVzdWx0Eg0KBUNhdElkGAEgASgFEg8KB0NhdFN0YXIY",
            "AiABKAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEN9WIlwK",
            "EkMyU0NhdFNraWxsTGV2ZWxVcBINCgVDYXRJZBgBIAEoBRISCgpDb3N0Q2F0",
            "SWRzGAIgAygFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDg",
            "ViJiChhTMkNDYXRTa2lsbExldmVsVXBSZXN1bHQSDQoFQ2F0SWQYASABKAUS",
            "EgoKU2tpbGxMZXZlbBgDIAEoBSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwK",
            "B1Byb3RvSUQQ4VYiVwoQQzJTQ2F0UmVuYW1lTmljaxINCgVDYXRJZBgBIAEo",
            "BRIPCgdOZXdOaWNrGAIgASgJIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoH",
            "UHJvdG9JRBDiViJdChZTMkNDYXRSZW5hbWVOaWNrUmVzdWx0Eg0KBUNhdElk",
            "GAEgASgFEg8KB05ld05pY2sYAiABKAkiIwoJRVByb3RvY29sEggKBE5vbmUQ",
            "ABIMCgdQcm90b0lEEONWIlAKCkMyU0NhdExvY2sSDQoFQ2F0SWQYASABKAUS",
            "DgoGSXNMb2NrGAIgASgIIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJv",
            "dG9JRBDkViJWChBTMkNDYXRMb2NrUmVzdWx0Eg0KBUNhdElkGAEgASgFEg4K",
            "BkxvY2tlZBgCIAEoCCIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3Rv",
            "SUQQ5VYiRQoPQzJTQ2F0RGVjb21wb3NlEg0KBUNhdElkGAEgAygFIiMKCUVQ",
            "cm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDmViJhChVTMkNDYXREZWNv",
            "bXBvc2VSZXN1bHQSDQoFQ2F0SWQYASADKAUSFAoMR2V0U291bFN0b25lGAIg",
            "ASgFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDnViJDChxD",
            "MlNHZXRNYWtpbmdGb3JtdWxhQnVpbGRpbmdzIiMKCUVQcm90b2NvbBIICgRO",
            "b25lEAASDAoHUHJvdG9JRBDAVyJ6ChlNYWtpbmdGb3JtdWxhQnVpbGRpbmdJ",
            "bmZvEg4KBlNsb3RJZBgBIAEoBRIRCglGb3JtdWxhSWQYAiABKAUSFQoNUmVt",
            "YWluU2Vjb25kcxgDIAEoBSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1By",
            "b3RvSUQQwVciowEKIlMyQ0dldE1ha2luZ0Zvcm11bGFCdWlsZGluZ3NSZXN1",
            "bHQSQAoJQnVpbGRpbmdzGAEgAygLMi0ubXNnLmNsaWVudF9tZXNzYWdlLk1h",
            "a2luZ0Zvcm11bGFCdWlsZGluZ0luZm8SFgoOTWFrZWRCdWlsZGluZ3MYAiAD",
            "KAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEMJXIlQKGkMy",
            "U0V4Y2hhbmdlQnVpbGRpbmdGb3JtdWxhEhEKCUZvcm11bGFJZBgBIAEoBSIj",
            "CglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQw1ciWgogUzJDRXhj",
            "aGFuZ2VCdWlsZGluZ0Zvcm11bGFSZXN1bHQSEQoJRm9ybXVsYUlkGAEgASgF",
            "IiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDEVyI1Cg5DMlNH",
            "ZXRGb3JtdWxhcyIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQ",
            "xVciTQoUUzJDR2V0Rm9ybXVsYXNSZXN1bHQSEAoIRm9ybXVsYXMYASADKAUi",
            "IwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEMZXIlAKFkMyU01h",
            "a2VGb3JtdWxhQnVpbGRpbmcSEQoJRm9ybXVsYUlkGAEgASgFIiMKCUVQcm90",
            "b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDHVyJWChxTMkNNYWtlRm9ybXVs",
            "YUJ1aWxkaW5nUmVzdWx0EhEKCUZvcm11bGFJZBgBIAEoBSIjCglFUHJvdG9j",
            "b2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQyFciPQoWQzJTQnV5TWFrZUJ1aWxk",
            "aW5nU2xvdCIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQyVci",
            "UwocUzJDQnV5TWFrZUJ1aWxkaW5nU2xvdFJlc3VsdBIOCgZTbG90SWQYASAB",
            "KAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEMpXIk0KFkMy",
            "U1NwZWVkdXBNYWtlQnVpbGRpbmcSDgoGU2xvdElkGAEgASgFIiMKCUVQcm90",
            "b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDLVyJTChxTMkNTcGVlZHVwTWFr",
            "ZUJ1aWxkaW5nUmVzdWx0Eg4KBlNsb3RJZBgBIAEoBSIjCglFUHJvdG9jb2wS",
            "CAoETm9uZRAAEgwKB1Byb3RvSUQQzFciRQoeQzJTR2V0Q29tcGxldGVkRm9y",
            "bXVsYUJ1aWxkaW5nIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9J",
            "RBDNVyJkCiRTMkNHZXRDb21wbGV0ZWRGb3JtdWxhQnVpbGRpbmdSZXN1bHQS",
            "FwoPRGVwb3RCdWlsZGluZ0lkGAEgAygFIiMKCUVQcm90b2NvbBIICgROb25l",
            "EAASDAoHUHJvdG9JRBDOVyJVCh5DMlNDYW5jZWxNYWtpbmdGb3JtdWxhQnVp",
            "bGRpbmcSDgoGU2xvdElkGAEgASgFIiMKCUVQcm90b2NvbBIICgROb25lEAAS",
            "DAoHUHJvdG9JRBDPVyKSAQokUzJDQ2FuY2VsTWFraW5nRm9ybXVsYUJ1aWxk",
            "aW5nUmVzdWx0Eg4KBlNsb3RJZBgBIAEoBRI1Cg9SZXR1cm5NYXRlcmlhbHMY",
            "AiADKAsyHC5tc2cuY2xpZW50X21lc3NhZ2UuSXRlbUluZm8iIwoJRVByb3Rv",
            "Y29sEggKBE5vbmUQABIMCgdQcm90b0lEENBXIjIKC0MyU0dldENyb3BzIiMK",
            "CUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBCkWCJqCghDcm9wSW5m",
            "bxISCgpCdWlsZGluZ0lkGAEgASgFEg4KBkNyb3BJZBgCIAEoBRIVCg1SZW1h",
            "aW5TZWNvbmRzGAMgASgFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJv",
            "dG9JRBClWCJlChFTMkNHZXRDcm9wc1Jlc3VsdBIrCgVjcm9wcxgBIAMoCzIc",
            "Lm1zZy5jbGllbnRfbWVzc2FnZS5Dcm9wSW5mbyIjCglFUHJvdG9jb2wSCAoE",
            "Tm9uZRAAEgwKB1Byb3RvSUQQplgiWwoMQzJTUGxhbnRDcm9wEg4KBkNyb3BJ",
            "ZBgBIAEoBRIWCg5EZXN0QnVpbGRpbmdJZBgCIAEoBSIjCglFUHJvdG9jb2wS",
            "CAoETm9uZRAAEgwKB1Byb3RvSUQQp1gieAoSUzJDUGxhbnRDcm9wUmVzdWx0",
            "Eg4KBkNyb3BJZBgBIAEoBRIWCg5EZXN0QnVpbGRpbmdJZBgCIAEoBRIVCg1S",
            "ZW1haW5TZWNvbmRzGAMgASgFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoH",
            "UHJvdG9JRBCoWCJNCg5DMlNDcm9wU3BlZWR1cBIWCg5GYXJtQnVpbGRpbmdJ",
            "ZBgBIAEoBSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQqVgi",
            "eAoUUzJDQ3JvcFNwZWVkdXBSZXN1bHQSFgoORmFybUJ1aWxkaW5nSWQYASAB",
            "KAUSDgoGQ3JvcElkGAIgASgFEhMKC0Nvc3REaWFtb25kGAMgASgFIiMKCUVQ",
            "cm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBCqWCJgCg5DMlNIYXJ2ZXN0",
            "Q3JvcBIWCg5GYXJtQnVpbGRpbmdJZBgBIAEoBRIRCglJc1NwZWVkdXAYAiAB",
            "KAgiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEKtYIpcBChRT",
            "MkNIYXJ2ZXN0Q3JvcFJlc3VsdBIWCg5GYXJtQnVpbGRpbmdJZBgBIAEoBRIO",
            "CgZDcm9wSWQYAiABKAUSDwoHQ2F0Rm9vZBgDIAEoBRIRCglJc1NwZWVkdXAY",
            "BCABKAgSDgoGQWRkRXhwGAUgASgFIiMKCUVQcm90b2NvbBIICgROb25lEAAS",
            "DAoHUHJvdG9JRBCsWCJLCg9DMlNIYXJ2ZXN0Q3JvcHMSEwoLQnVpbGRpbmdJ",
            "ZHMYASADKAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEK1Y",
            "ImIKFVMyQ0hhcnZlc3RDcm9wc1Jlc3VsdBITCgtCdWlsZGluZ0lkcxgBIAMo",
            "BRIPCgdDYXRGb29kGAIgASgFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoH",
            "UHJvdG9JRBCuWCI6ChNDMlNHZXRBbGxFeHBlZGl0aW9uIiMKCUVQcm90b2Nv",
            "bBIICgROb25lEAASDAoHUHJvdG9JRBCIWSJCCg5FeHBlZGl0b25FdmVudBIP",
            "CgdFdmVudElkGAEgASgFEgsKA1NlYxgCIAEoBRISCgpEcm9wSWROdW1zGAMg",
            "AygFIjwKEkV4cGVkaXRvbkNvbmRpdGlvbhIVCg1Db25kaXRpb25UeXBlGAEg",
            "ASgFEg8KB0NvblZhbHMYAiADKAUimwIKDkV4cGVkaXRpb25JdGVtEgoKAklk",
            "GAEgASgFEg4KBlRhc2tJZBgCIAEoBRIZChFFeHBlZGl0aW9uTGVmdFNlYxgD",
            "IAEoBRIQCghJbkNhdElkcxgEIAMoBRIOCgZSZXN1bHQYBSABKAUSEwoLVGFz",
            "a0xlZnRTZWMYBiABKAUSEAoIQ3VyU3RhdGUYByABKAUSMgoGRXZlbnRzGAgg",
            "AygLMiIubXNnLmNsaWVudF9tZXNzYWdlLkV4cGVkaXRvbkV2ZW50EjoKCkNv",
            "bmRpdGlvbnMYCSADKAsyJi5tc2cuY2xpZW50X21lc3NhZ2UuRXhwZWRpdG9u",
            "Q29uZGl0aW9uEhkKEUV4cGVkaXRpb25QYXNzU2VjGAogASgFIpYBChNTMkNS",
            "ZXRBbGxFeHBlZGl0aW9uEjEKBVRhc2tzGAEgAygLMiIubXNnLmNsaWVudF9t",
            "ZXNzYWdlLkV4cGVkaXRpb25JdGVtEhMKC0N1ckNoZ0NvdW50GAIgASgFEhIK",
            "CkN1ckNoZ0Nvc3QYAyABKAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQ",
            "cm90b0lEEIlZIkMKEEMyU0NoZ0V4cGVkaXRpb24SCgoCSWQYASABKAUiIwoJ",
            "RVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEIpZIlUKEkMyU1N0YXJ0",
            "RXhwZWRpdGlvbhIKCgJJZBgBIAEoBRIOCgZDYXRJZHMYAiADKAUiIwoJRVBy",
            "b3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEItZIusBChJTMkNTdGFydEV4",
            "cGVkaXRpb24SCgoCSWQYASABKAUSDgoGVGFza0lkGAIgASgFEg4KBkNhdElk",
            "cxgDIAMoBRIZChFFeHBlZGl0aW9uTGVmdFNlYxgEIAEoBRIOCgZSZXN1bHQY",
            "BSABKAUSEwoLVGFza0xlZnRTZWMYBiABKAUSEAoIQ3VyU3RhdGUYByABKAUS",
            "MgoGRXZlbnRzGAggAygLMiIubXNnLmNsaWVudF9tZXNzYWdlLkV4cGVkaXRv",
            "bkV2ZW50IiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBCMWSJE",
            "ChFDMlNTdG9wRXhwZWRpdGlvbhIKCgJJZBgBIAEoBSIjCglFUHJvdG9jb2wS",
            "CAoETm9uZRAAEgwKB1Byb3RvSUQQjVkiSQoWQzJTR2V0RXhwZWRpdGlvblJl",
            "d2FyZBIKCgJJZBgBIAEoBSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1By",
            "b3RvSUQQjlkiogEKFlMyQ0dldEV4cGVkaXRpb25SZXdhcmQSCgoCSWQYASAB",
            "KAUSKgoHUmV3YXJkcxgCIAMoCzIZLm1zZy5jbGllbnRfbWVzc2FnZS5JZE51",
            "bRIrCghTcGVjaWFscxgDIAMoCzIZLm1zZy5jbGllbnRfbWVzc2FnZS5JZE51",
            "bSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQj1kiSQoWQzJT",
            "Q2hnRXhwZWRpdGlvblJlc3VsdBIKCgJJZBgBIAEoBSIjCglFUHJvdG9jb2wS",
            "CAoETm9uZRAAEgwKB1Byb3RvSUQQkFkiOgoTQzJTR2V0Q2F0SG91c2VzSW5m",
            "byIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQ7FkiuwEKDENh",
            "dEhvdXNlSW5mbxISCgpDYXRIb3VzZUlkGAEgASgFEg0KBUxldmVsGAIgASgF",
            "Eg4KBkNhdElkcxgDIAMoBRIMCgRHb2xkGAQgASgFEh4KFk5leHRMZXZlbFJl",
            "bWFpblNlY29uZHMYBSABKAUSGAoQQnVpbGRpbmdDb25maWdJZBgGIAEoBRIO",
            "CgZJc0RvbmUYByABKAUSIAoYUHJvZHVjZUdvbGRSZW1haW5TZWNvbmRzGAgg",
            "ASgFInIKGVMyQ0dldENhdEhvdXNlc0luZm9SZXN1bHQSMAoGSG91c2VzGAEg",
            "AygLMiAubXNnLmNsaWVudF9tZXNzYWdlLkNhdEhvdXNlSW5mbyIjCglFUHJv",
            "dG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQ7VkiTQoSQzJTR2V0Q2F0SG91",
            "c2VJbmZvEhIKCkNhdEhvdXNlSWQYASABKAUiIwoJRVByb3RvY29sEggKBE5v",
            "bmUQABIMCgdQcm90b0lEEO5ZInAKGFMyQ0dldENhdEhvdXNlSW5mb1Jlc3Vs",
            "dBIvCgVIb3VzZRgBIAEoCzIgLm1zZy5jbGllbnRfbWVzc2FnZS5DYXRIb3Vz",
            "ZUluZm8iIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEO9ZIlsK",
            "EUMyU0NhdEhvdXNlQWRkQ2F0EhIKCkNhdEhvdXNlSWQYASABKAUSDQoFQ2F0",
            "SWQYAiABKAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEPBZ",
            "Im8KF1MyQ0NhdEhvdXNlQWRkQ2F0UmVzdWx0EhIKCkNhdEhvdXNlSWQYASAB",
            "KAUSDQoFQ2F0SWQYAiABKAUSDAoER29sZBgDIAEoBSIjCglFUHJvdG9jb2wS",
            "CAoETm9uZRAAEgwKB1Byb3RvSUQQ8VkiXgoUQzJTQ2F0SG91c2VSZW1vdmVD",
            "YXQSEgoKQ2F0SG91c2VJZBgBIAEoBRINCgVDYXRJZBgCIAEoBSIjCglFUHJv",
            "dG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQ8lkicgoaUzJDQ2F0SG91c2VS",
            "ZW1vdmVDYXRSZXN1bHQSEgoKQ2F0SG91c2VJZBgBIAEoBRINCgVDYXRJZBgC",
            "IAEoBRIMCgRHb2xkGAMgASgFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoH",
            "UHJvdG9JRBDzWSJRChZDMlNDYXRIb3VzZVByb2R1Y2VHb2xkEhIKCkNhdEhv",
            "dXNlSWQYASABKAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lE",
            "EPRZIlcKHFMyQ0NhdEhvdXNlUHJvZHVjZUdvbGRSZXN1bHQSEgoKQ2F0SG91",
            "c2VJZBgBIAEoBSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQ",
            "9VkiTQoSQzJTQ2F0SG91c2VHZXRHb2xkEhIKCkNhdEhvdXNlSWQYASABKAUi",
            "IwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEPZZImEKGFMyQ0Nh",
            "dEhvdXNlR2V0R29sZFJlc3VsdBISCgpDYXRIb3VzZUlkGAEgASgFEgwKBEdv",
            "bGQYAiABKAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEPdZ",
            "Ik8KE0MyU0NhdEhvdXNlc0dldEdvbGQSEwoLQ2F0SG91c2VJZHMYASADKAUi",
            "IwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEPhZImMKGVMyQ0Nh",
            "dEhvdXNlc0dldEdvbGRSZXN1bHQSEwoLQ2F0SG91c2VJZHMYASADKAUSDAoE",
            "R29sZBgCIAEoBSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQ",
            "+VkiUgoXQzJTQ2F0SG91c2VTdGFydExldmVsdXASEgoKQ2F0SG91c2VJZBgB",
            "IAEoBSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQ+lkibwod",
            "UzJDQ2F0SG91c2VTdGFydExldmVsdXBSZXN1bHQSEgoKQ2F0SG91c2VJZBgB",
            "IAEoBRIVCg1SZW1haW5TZWNvbmRzGAIgASgFIiMKCUVQcm90b2NvbBIICgRO",
            "b25lEAASDAoHUHJvdG9JRBD7WSJSChdDMlNDYXRIb3VzZVNwZWVkTGV2ZWx1",
            "cBISCgpDYXRIb3VzZUlkGAEgASgFIiMKCUVQcm90b2NvbBIICgROb25lEAAS",
            "DAoHUHJvdG9JRBD8WSJtCh1TMkNDYXRIb3VzZVNwZWVkTGV2ZWx1cFJlc3Vs",
            "dBISCgpDYXRIb3VzZUlkGAEgASgFEhMKC0Nvc3REaWFtb25kGAIgASgFIiMK",
            "CUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBD9WSJKCg9DMlNTZWxs",
            "Q2F0SG91c2USEgoKQ2F0SG91c2VJZBgBIAEoBSIjCglFUHJvdG9jb2wSCAoE",
            "Tm9uZRAAEgwKB1Byb3RvSUQQ/lkiUAoVUzJDU2VsbENhdEhvdXNlUmVzdWx0",
            "EhIKCkNhdEhvdXNlSWQYASABKAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIM",
            "CgdQcm90b0lEEP9ZIk0KEkMyU0NhdEhvdXNlU2V0RG9uZRISCgpDYXRIb3Vz",
            "ZUlkGAEgASgFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBCA",
            "WiJjChhTMkNDYXRIb3VzZVNldERvbmVSZXN1bHQSEgoKQ2F0SG91c2VJZBgB",
            "IAEoBRIOCgZJc0RvbmUYAiABKAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIM",
            "CgdQcm90b0lEEIFaIuUBCgpGcmllbmRJbmZvEhAKCFBsYXllcklkGAEgASgF",
            "EgwKBE5hbWUYAiABKAkSDAoESGVhZBgDIAEoBRINCgVMZXZlbBgEIAEoBRIQ",
            "CghWaXBMZXZlbBgFIAEoBRIRCglMYXN0TG9naW4YBiABKAUSFAoMRnJpZW5k",
            "UG9pbnRzGAcgASgFEhcKD0xlZnRHaXZlU2Vjb25kcxgIIAEoBRIYChBVbnJl",
            "YWRNZXNzYWdlTnVtGAkgASgFEgsKA1phbhgKIAEoBRINCgVJc1phbhgLIAEo",
            "CBIQCghJc09ubGluZRgMIAEoCCJDCg9DMlNGcmllbmRTZWFyY2gSCwoDS2V5",
            "GAEgASgJIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDQWiJM",
            "ChNDMlNGcmllbmRTZWFyY2hCeUlkEhAKCFBsYXllcklkGAEgASgFIiMKCUVQ",
            "cm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDRWiJsChVTMkNGcmllbmRT",
            "ZWFyY2hSZXN1bHQSLgoGUmVzdWx0GAEgAygLMh4ubXNnLmNsaWVudF9tZXNz",
            "YWdlLkZyaWVuZEluZm8iIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90",
            "b0lEENJaIjcKEEMyU0dldEZyaWVuZExpc3QiIwoJRVByb3RvY29sEggKBE5v",
            "bmUQABIMCgdQcm90b0lEENNaIlcKCUZyaWVuZFJlcRIQCghQbGF5ZXJJZBgB",
            "IAEoBRIMCgROYW1lGAIgASgJEg0KBVNjb3JlGAMgASgFEgwKBEhlYWQYBCAB",
            "KAUSDQoFTGV2ZWwYBSABKAUiuQEKFlMyQ1JldEZyaWVuZExpc3RSZXN1bHQS",
            "MgoKRnJpZW5kTGlzdBgCIAMoCzIeLm1zZy5jbGllbnRfbWVzc2FnZS5Gcmll",
            "bmRJbmZvEisKBFJlcXMYAyADKAsyHS5tc2cuY2xpZW50X21lc3NhZ2UuRnJp",
            "ZW5kUmVxEhkKEUxlZnRHaXZlUG9pbnRzTnVtGAQgASgFIiMKCUVQcm90b2Nv",
            "bBIICgROb25lEAASDAoHUHJvdG9JRBDUWiJ8ChRTMkNGcmllbmRTdGF0ZU5v",
            "dGlmeRIRCglTdGF0ZVR5cGUYASABKAUSLAoESW5mbxgCIAEoCzIeLm1zZy5j",
            "bGllbnRfbWVzc2FnZS5GcmllbmRJbmZvIiMKCUVQcm90b2NvbBIICgROb25l",
            "EAASDAoHUHJvdG9JRBDVWiJlChJTMkNGcmllbmRSZXFOb3RpZnkSKgoDUmVx",
            "GAEgASgLMh0ubXNnLmNsaWVudF9tZXNzYWdlLkZyaWVuZFJlcSIjCglFUHJv",
            "dG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQ1loiSgoRQzJTQWRkRnJpZW5k",
            "QnlQSWQSEAoIUGxheWVySWQYASABKAUiIwoJRVByb3RvY29sEggKBE5vbmUQ",
            "ABIMCgdQcm90b0lEENdaIkcKEkMyU0FkZEZyaWVuZEJ5TmFtZRIMCgROYW1l",
            "GAEgASgJIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDYWiJL",
            "ChJTMkNBZGRGcmllbmRSZXN1bHQSEAoIUGxheWVySWQYASABKAUiIwoJRVBy",
            "b3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEENlaIkcKDkMyU0FncmVlRnJp",
            "ZW5kEhAKCFBsYXllcklkGAEgASgFIiMKCUVQcm90b2NvbBIICgROb25lEAAS",
            "DAoHUHJvdG9JRBDaWiKsAQoUUzJDQWdyZWVGcmllbmRSZXN1bHQSEAoIUGxh",
            "eWVySWQYASABKAUSDAoETmFtZRgCIAEoCRINCgVTY29yZRgDIAEoBRINCgVM",
            "ZXZlbBgEIAEoBRIMCgRIZWFkGAUgASgFEhAKCFZpcExldmVsGAYgASgFEhEK",
            "CUxhc3RMb2dpbhgHIAEoBSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1By",
            "b3RvSUQQ21oiSAoPQzJTUmVmdXNlRnJpZW5kEhAKCFBsYXllcklkGAEgASgF",
            "IiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDcWiJcChVTMkNS",
            "ZWZ1c2VGcmllbmRSZXN1bHQSDAoETmFtZRgBIAEoCRIQCghQbGF5ZXJJZBgC",
            "IAEoBSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQ3VoiSAoP",
            "QzJTUmVtb3ZlRnJpZW5kEhAKCFBsYXllcklkGAEgASgFIiMKCUVQcm90b2Nv",
            "bBIICgROb25lEAASDAoHUHJvdG9JRBDeWiJOChVTMkNSZW1vdmVGcmllbmRS",
            "ZXN1bHQSEAoIUGxheWVySWQYASABKAUiIwoJRVByb3RvY29sEggKBE5vbmUQ",
            "ABIMCgdQcm90b0lEEN9aIkwKE0MyU0dpdmVGcmllbmRQb2ludHMSEAoIRnJp",
            "ZW5kSWQYASADKAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lE",
            "EOBaIoUBChJGcmllbmRQb2ludHNSZXN1bHQSEAoIRnJpZW5kSWQYASABKAUS",
            "DgoGUG9pbnRzGAIgASgFEg0KBUVycm9yGAMgASgFEhUKDVJlbWFpblNlY29u",
            "ZHMYBCABKAUSEwoLSXNUb2RheUdpdmUYBSABKAgSEgoKQmFja1BvaW50cxgG",
            "IAEoBSKXAQoZUzJDR2l2ZUZyaWVuZFBvaW50c1Jlc3VsdBI6CgpQb2ludHNE",
            "YXRhGAEgAygLMiYubXNnLmNsaWVudF9tZXNzYWdlLkZyaWVuZFBvaW50c1Jl",
            "c3VsdBIZChFMZWZ0R2l2ZVBvaW50c051bRgCIAEoBSIjCglFUHJvdG9jb2wS",
            "CAoETm9uZRAAEgwKB1Byb3RvSUQQ4VoiSwoSQzJTR2V0RnJpZW5kUG9pbnRz",
            "EhAKCEZyaWVuZElkGAEgAygFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoH",
            "UHJvdG9JRBDiWiIwCgxGcmllbmRQb2ludHMSEAoIRnJpZW5kSWQYASABKAUS",
            "DgoGUG9pbnRzGAIgASgFInUKGFMyQ0dldEZyaWVuZFBvaW50c1Jlc3VsdBI0",
            "CgpQb2ludHNEYXRhGAEgAygLMiAubXNnLmNsaWVudF9tZXNzYWdlLkZyaWVu",
            "ZFBvaW50cyIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQ41oi",
            "VwoNQzJTRnJpZW5kQ2hhdBIQCghQbGF5ZXJJZBgBIAEoBRIPCgdDb250ZW50",
            "GAIgASgMIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBC0WyJd",
            "ChNTMkNGcmllbmRDaGF0UmVzdWx0EhAKCFBsYXllcklkGAEgASgFEg8KB0Nv",
            "bnRlbnQYAiABKAwiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lE",
            "ELVbIlYKHEMyU0ZyaWVuZEdldFVucmVhZE1lc3NhZ2VOdW0SEQoJRnJpZW5k",
            "SWRzGAEgAygFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBC2",
            "WyJCChpGcmllbmRVbnJlYWRNZXNzYWdlTnVtRGF0YRIQCghGcmllbmRJZBgB",
            "IAEoBRISCgpNZXNzYWdlTnVtGAIgASgFIocBCiJTMkNGcmllbmRHZXRVbnJl",
            "YWRNZXNzYWdlTnVtUmVzdWx0EjwKBERhdGEYASADKAsyLi5tc2cuY2xpZW50",
            "X21lc3NhZ2UuRnJpZW5kVW5yZWFkTWVzc2FnZU51bURhdGEiIwoJRVByb3Rv",
            "Y29sEggKBE5vbmUQABIMCgdQcm90b0lEELdbIlMKGkMyU0ZyaWVuZFB1bGxV",
            "bnJlYWRNZXNzYWdlEhAKCEZyaWVuZElkGAEgASgFIiMKCUVQcm90b2NvbBII",
            "CgROb25lEAASDAoHUHJvdG9JRBC4WyIzCg5GcmllbmRDaGF0RGF0YRIPCgdD",
            "b250ZW50GAEgASgMEhAKCFNlbmRUaW1lGAIgASgFIosBCiBTMkNGcmllbmRQ",
            "dWxsVW5yZWFkTWVzc2FnZVJlc3VsdBIQCghGcmllbmRJZBgBIAEoBRIwCgRE",
            "YXRhGAIgAygLMiIubXNnLmNsaWVudF9tZXNzYWdlLkZyaWVuZENoYXREYXRh",
            "IiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBC5WyJqCh1DMlNG",
            "cmllbmRDb25maXJtVW5yZWFkTWVzc2FnZRIQCghGcmllbmRJZBgBIAEoBRIS",
            "CgpNZXNzYWdlTnVtGAIgASgFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoH",
            "UHJvdG9JRBC6WyJwCiNTMkNGcmllbmRDb25maXJtVW5yZWFkTWVzc2FnZVJl",
            "c3VsdBIQCghGcmllbmRJZBgBIAEoBRISCgpNZXNzYWdlTnVtGAIgASgFIiMK",
            "CUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBC7WyJHChNDMlNHZXRP",
            "bmxpbmVGcmllbmRzEgsKA0tleRgBIAEoBSIjCglFUHJvdG9jb2wSCAoETm9u",
            "ZRAAEgwKB1Byb3RvSUQQvFsiWgoTUzJDUmV0T25saW5lRnJpZW5kcxIRCglQ",
            "bGF5ZXJJZHMYASADKAUSCwoDS2V5GAIgASgFIiMKCUVQcm90b2NvbBIICgRO",
            "b25lEAASDAoHUHJvdG9JRBC9WyI1Cg5DMlNHZXRIYW5kYm9vayIjCglFUHJv",
            "dG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQmFwiXwoUUzJDR2V0SGFuZGJv",
            "b2tSZXN1bHQSDQoFSXRlbXMYASADKAUSEwoLQXdhcmRTdWl0SWQYAiADKAUi",
            "IwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEJlcIk8KGFMyQ05l",
            "d0hhbmRib29rSXRlbU5vdGlmeRIOCgZJdGVtSWQYASABKAUiIwoJRVByb3Rv",
            "Y29sEggKBE5vbmUQABIMCgdQcm90b0lEEJpcIjEKCkMyU0dldEhlYWQiIwoJ",
            "RVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEJtcIkYKEFMyQ0dldEhl",
            "YWRSZXN1bHQSDQoFSXRlbXMYASADKAUiIwoJRVByb3RvY29sEggKBE5vbmUQ",
            "ABIMCgdQcm90b0lEEJxcIkcKEFMyQ05ld0hlYWROb3RpZnkSDgoGSXRlbUlk",
            "GAEgASgFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBCdXCJP",
            "ChhDMlNHZXRTdWl0SGFuZGJvb2tSZXdhcmQSDgoGU3VpdElkGAEgASgFIiMK",
            "CUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBCeXCJ0Ch5TMkNHZXRT",
            "dWl0SGFuZGJvb2tSZXdhcmRSZXN1bHQSLQoHUmV3YXJkcxgBIAMoCzIcLm1z",
            "Zy5jbGllbnRfbWVzc2FnZS5JdGVtSW5mbyIjCglFUHJvdG9jb2wSCAoETm9u",
            "ZRAAEgwKB1Byb3RvSUQQn1wiRQoMQzJTWmFuUGxheWVyEhAKCFBsYXllcklk",
            "GAEgASgFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDgXSJd",
            "ChJTMkNaYW5QbGF5ZXJSZXN1bHQSEAoIUGxheWVySWQYASABKAUSEAoIVG90",
            "YWxaYW4YAiABKAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lE",
            "EOFdIkoKEUMyU1B1bGxGb3N0ZXJEYXRhEhAKCElzU2V0dGxlGAEgASgIIiMK",
            "CUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDEXiKAAQoNRm9zdGVy",
            "Q2F0SW5mbxINCgVDYXRJZBgBIAEoBRIOCgZDYXRFeHAYAiABKAUSEAoIQ2F0",
            "TGV2ZWwYAyABKAUSKwoFSXRlbXMYBCADKAsyHC5tc2cuY2xpZW50X21lc3Nh",
            "Z2UuSXRlbUluZm8SEQoJU3RhcnRUaW1lGAUgASgFIscBChdTMkNQdWxsRm9z",
            "dGVyRGF0YVJlc3VsdBISCgpCdWlsZGluZ0lkGAEgASgFEg4KBkNhcmRJZBgC",
            "IAEoBRIZChFDYXJkUmVtYWluU2Vjb25kcxgDIAEoBRIzCghTZWxmQ2F0cxgE",
            "IAMoCzIhLm1zZy5jbGllbnRfbWVzc2FnZS5Gb3N0ZXJDYXRJbmZvEhMKC1Nl",
            "bGZTbG90TnVtGAUgASgFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJv",
            "dG9JRBDFXiJCChtDMlNQdWxsRm9zdGVyQ2F0c1dpdGhGcmllbmQiIwoJRVBy",
            "b3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEMZeIvEBChVGb3N0ZXJDYXRJ",
            "bkZyaWVuZEluZm8SDQoFQ2F0SWQYASABKAUSFQoNUmVtYWluU2Vjb25kcxgC",
            "IAEoBRIQCghGcmllbmRJZBgDIAEoBRITCgtGcmllbmRMZXZlbBgEIAEoBRIS",
            "CgpGcmllbmROYW1lGAUgASgJEhIKCkZyaWVuZEhlYWQYBiABKAUSEwoLU3Rh",
            "cnRDYXJkSWQYByABKAUSDgoGQ2F0RXhwGAggASgFEisKBUl0ZW1zGAkgAygL",
            "MhwubXNnLmNsaWVudF9tZXNzYWdlLkl0ZW1JbmZvEhEKCVN0YXJ0VGltZRgK",
            "IAEoBSLaAQoVRm9zdGVyZWRGcmllbmRDYXRJbmZvEhIKCkNhdFRhYmxlSWQY",
            "ASABKAUSDwoHQ2F0TmljaxgCIAEoCRIQCghDYXRMZXZlbBgDIAEoBRIPCgdD",
            "YXRTdGFyGAQgASgFEhAKCEZyaWVuZElkGAUgASgFEhIKCkZyaWVuZE5hbWUY",
            "BiABKAkSEgoKRnJpZW5kSGVhZBgHIAEoBRITCgtGcmllbmRMZXZlbBgIIAEo",
            "BRIVCg1SZW1haW5TZWNvbmRzGAkgASgFEhMKC1N0YXJ0Q2FyZElkGAogASgF",
            "IoQCCiFTMkNQdWxsRm9zdGVyQ2F0c1dpdGhGcmllbmRSZXN1bHQSPwoMQ2F0",
            "c0luRnJpZW5kGAEgAygLMikubXNnLmNsaWVudF9tZXNzYWdlLkZvc3RlckNh",
            "dEluRnJpZW5kSW5mbxIbChNGb3N0ZXJGcmllbmRTbG90TnVtGAIgASgFEj0K",
            "CkZyaWVuZENhdHMYAyADKAsyKS5tc2cuY2xpZW50X21lc3NhZ2UuRm9zdGVy",
            "ZWRGcmllbmRDYXRJbmZvEh0KFUZyaWVuZEZvc3RlcmVkU2xvdE51bRgEIAEo",
            "BSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQx14iTAoUQzJT",
            "Rm9zdGVyQ2FyZENvbXBvc2USDwoHSXRlbUlkcxgBIAMoBSIjCglFUHJvdG9j",
            "b2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQyF4iawoaUzJDRm9zdGVyQ2FyZENv",
            "bXBvc2VSZXN1bHQSDwoHSXRlbUlkcxgBIAMoBRIXCg9EZXN0SXRlbVRhYmxl",
            "SWQYAiABKAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEMle",
            "Il0KEkMyU0Zvc3RlckVxdWlwQ2FyZBISCgpCdWlsZGluZ0lkGAEgASgFEg4K",
            "BkNhcmRJZBgCIAEoBSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3Rv",
            "SUQQyl4ifgoYUzJDRm9zdGVyRXF1aXBDYXJkUmVzdWx0EhIKCkJ1aWxkaW5n",
            "SWQYASABKAUSDgoGQ2FyZElkGAIgASgFEhkKEUNhcmRSZW1haW5TZWNvbmRz",
            "GAMgASgFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDLXiJP",
            "ChRDMlNGb3N0ZXJVbmVxdWlwQ2FyZBISCgpCdWlsZGluZ0lkGAEgASgFIiMK",
            "CUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDMXiKEAQoaUzJDRm9z",
            "dGVyVW5lcXVpcENhcmRSZXN1bHQSEgoKQnVpbGRpbmdJZBgBIAEoBRItCgdS",
            "ZXdhcmRzGAIgAygLMhwubXNnLmNsaWVudF9tZXNzYWdlLkl0ZW1JbmZvIiMK",
            "CUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDNXiJZCg9DMlNGb3N0",
            "ZXJTZXRDYXQSEgoKQnVpbGRpbmdJZBgBIAEoBRINCgVDYXRJZBgCIAEoBSIj",
            "CglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQzl4iXwoVUzJDRm9z",
            "dGVyU2V0Q2F0UmVzdWx0EhIKCkJ1aWxkaW5nSWQYASABKAUSDQoFQ2F0SWQY",
            "AiABKAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEM9eIlkK",
            "D0MyU0Zvc3Rlck91dENhdBISCgpCdWlsZGluZ0lkGAEgASgFEg0KBUNhdElk",
            "GAIgASgFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDQXiJf",
            "ChVTMkNGb3N0ZXJPdXRDYXRSZXN1bHQSEgoKQnVpbGRpbmdJZBgBIAEoBRIN",
            "CgVDYXRJZBgCIAEoBSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3Rv",
            "SUQQ0V4iXgoWQzJTRm9zdGVyU2V0Q2F0MkZyaWVuZBIQCghGcmllbmRJZBgB",
            "IAEoBRINCgVDYXRJZBgCIAEoBSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwK",
            "B1Byb3RvSUQQ0l4iZAocUzJDRm9zdGVyU2V0Q2F0MkZyaWVuZFJlc3VsdBIQ",
            "CghGcmllbmRJZBgBIAEoBRINCgVDYXRJZBgCIAEoBSIjCglFUHJvdG9jb2wS",
            "CAoETm9uZRAAEgwKB1Byb3RvSUQQ014iQwocQzJTRm9zdGVyR2V0RW1wdHlT",
            "bG90RnJpZW5kcyIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQ",
            "1F4iegoiUzJDRm9zdGVyR2V0RW1wdHlTbG90RnJpZW5kc1Jlc3VsdBIvCgdG",
            "cmllbmRzGAEgAygLMh4ubXNnLmNsaWVudF9tZXNzYWdlLkZyaWVuZEluZm8i",
            "IwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEENVeIk8KFkMyU0dl",
            "dFBsYXllckZvc3RlckNhdHMSEAoIUGxheWVySWQYASABKAUiIwoJRVByb3Rv",
            "Y29sEggKBE5vbmUQABIMCgdQcm90b0lEENZeIkwKE0Zvc3RlclBsYXllckNh",
            "dEluZm8SEgoKQ2F0VGFibGVJZBgBIAEoBRIQCghDYXRMZXZlbBgCIAEoBRIP",
            "CgdDYXRTdGFyGAMgASgFIlQKF0Zvc3RlclBsYXllclNlbGZDYXRJbmZvEg0K",
            "BUNhdElkGAEgASgFEhMKC1N0YXJ0Q2FyZElkGAIgASgFEhUKDVJlbWFpblNl",
            "Y29uZHMYAyABKAUilQIKHFMyQ0dldFBsYXllckZvc3RlckNhdHNSZXN1bHQS",
            "EAoIUGxheWVySWQYASABKAUSFAoMRm9zdGVyQ2FyZElkGAIgASgFEhkKEUNh",
            "cmRSZW1haW5TZWNvbmRzGAMgASgFEjUKBENhdHMYBCADKAsyJy5tc2cuY2xp",
            "ZW50X21lc3NhZ2UuRm9zdGVyUGxheWVyQ2F0SW5mbxI9CgpGcmllbmRDYXRz",
            "GAUgAygLMikubXNnLmNsaWVudF9tZXNzYWdlLkZvc3RlcmVkRnJpZW5kQ2F0",
            "SW5mbxIXCg9Gb3N0ZXJlZFNsb3ROdW0YBiABKAUiIwoJRVByb3RvY29sEggK",
            "BE5vbmUQABIMCgdQcm90b0lEENdeIoABCgxSYW5rSXRlbUluZm8SDAoEUmFu",
            "axgBIAEoBRIQCghQbGF5ZXJJZBgCIAEoBRISCgpQbGF5ZXJOYW1lGAMgASgJ",
            "EhMKC1BsYXllckxldmVsGAQgASgFEhIKClBsYXllckhlYWQYBSABKAUSEwoL",
            "UGxheWVyVmFsdWUYBiADKAUifwoSQzJTUmFua0xpc3RSZXF1ZXN0EhAKCFJh",
            "bmtUeXBlGAEgASgFEhEKCVN0YXJ0UmFuaxgCIAEoBRIPCgdSYW5rTnVtGAMg",
            "ASgFEg4KBlBhcmFtcxgEIAMoBSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwK",
            "B1Byb3RvSUQQqF8i2gEKE1MyQ1JhbmtMaXN0UmVzcG9uc2USFAoMUmFua0xp",
            "c3RUeXBlGAEgASgFEjMKCVJhbmtJdGVtcxgCIAMoCzIgLm1zZy5jbGllbnRf",
            "bWVzc2FnZS5SYW5rSXRlbUluZm8SGgoSU2VsZkhpc3RvcnlUb3BSYW5rGAMg",
            "ASgFEhAKCFNlbGZSYW5rGAQgASgFEhEKCVNlbGZWYWx1ZRgFIAEoBRISCgpT",
            "ZWxmVmFsdWUyGAYgASgFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJv",
            "dG9JRBCpXyJXCg5DMlNDaGF0UmVxdWVzdBIPCgdDaGFubmVsGAEgASgFEg8K",
            "B0NvbnRlbnQYAiABKAwiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90",
            "b0lEEIxgIlgKD1MyQ0NoYXRSZXNwb25zZRIPCgdDaGFubmVsGAEgASgFEg8K",
            "B0NvbnRlbnQYAiABKAwiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90",
            "b0lEEI1gIk0KFUMyU0NoYXRNc2dQdWxsUmVxdWVzdBIPCgdDaGFubmVsGAEg",
            "ASgFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBCOYCKiAQoI",
            "Q2hhdEl0ZW0SDwoHQ29udGVudBgBIAEoDBIQCghQbGF5ZXJJZBgCIAEoBRIS",
            "CgpQbGF5ZXJOYW1lGAMgASgJEhIKClBsYXllckhlYWQYBCABKAUSEwoLUGxh",
            "eWVyTGV2ZWwYBSABKAUSEAoISXNGcmllbmQYBiABKAUSEAoIU2VuZFRpbWUY",
            "ByABKAUSEgoKRXh0cmFWYWx1ZRgIIAEoBSJ7ChZTMkNDaGF0TXNnUHVsbFJl",
            "c3BvbnNlEg8KB0NoYW5uZWwYASABKAUSKwoFSXRlbXMYAiADKAsyHC5tc2cu",
            "Y2xpZW50X21lc3NhZ2UuQ2hhdEl0ZW0iIwoJRVByb3RvY29sEggKBE5vbmUQ",
            "ABIMCgdQcm90b0lEEI9gIkcKDkMyU1Zpc2l0UGxheWVyEhAKCFBsYXllcklk",
            "GAEgASgFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDwYCKu",
            "AQoQVmlld0J1aWxkaW5nSW5mbxIyCghCYXNlRGF0YRgBIAEoCzIgLm1zZy5j",
            "bGllbnRfbWVzc2FnZS5CdWlsZGluZ0luZm8SLgoIQ3JvcERhdGEYAiABKAsy",
            "HC5tc2cuY2xpZW50X21lc3NhZ2UuQ3JvcEluZm8SNgoMQ2F0SG91c2VEYXRh",
            "GAMgASgLMiAubXNnLmNsaWVudF9tZXNzYWdlLkNhdEhvdXNlSW5mbyL8AgoU",
            "UzJDVmlzaXRQbGF5ZXJSZXN1bHQSEAoIUGxheWVySWQYASABKAUSEgoKUGxh",
            "eWVyTmFtZRgCIAEoCRITCgtQbGF5ZXJMZXZlbBgDIAEoBRIWCg5QbGF5ZXJW",
            "aXBMZXZlbBgEIAEoBRISCgpQbGF5ZXJHb2xkGAUgASgFEhUKDVBsYXllckRp",
            "YW1vbmQYBiABKAUSEwoLUGxheWVyQ2hhcm0YByABKAUSEgoKUGxheWVySGVh",
            "ZBgIIAEoBRI3CglCdWlsZGluZ3MYCSADKAsyJC5tc2cuY2xpZW50X21lc3Nh",
            "Z2UuVmlld0J1aWxkaW5nSW5mbxIrCgVBcmVhcxgKIAMoCzIcLm1zZy5jbGll",
            "bnRfbWVzc2FnZS5BcmVhSW5mbxIyCghTdXJmYWNlcxgLIAMoCzIgLm1zZy5j",
            "bGllbnRfbWVzc2FnZS5CdWlsZGluZ0luZm8iIwoJRVByb3RvY29sEggKBE5v",
            "bmUQABIMCgdQcm90b0lEEPFgIl8KEkMyU09wZW5GcmllbmRDaGVzdBIQCghG",
            "cmllbmRpZBgBIAEoBRISCgpCdWlsZGluZ0lkGAIgASgFIiMKCUVQcm90b2Nv",
            "bBIICgROb25lEAASDAoHUHJvdG9JRBDyYCKeAQoYUzJDT3BlbkZyaWVuZENo",
            "ZXN0UmVzdWx0EhAKCEZyaWVuZElkGAEgASgFEhIKCkJ1aWxkaW5nSWQYAiAB",
            "KAUSNwoKT3BlblJlc3VsdBgDIAEoCzIjLm1zZy5jbGllbnRfbWVzc2FnZS5T",
            "MkNPcGVuTWFwQ2hlc3QiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90",
            "b0lEEPNgIlgKEEMyU1BsYXllckNhdEluZm8SEAoIUGxheWVySWQYASABKAUS",
            "DQoFQ2F0SWQYAiABKAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90",
            "b0lEEPRgIugBChZTMkNQbGF5ZXJDYXRJbmZvUmVzdWx0EhAKCFBsYXllcklk",
            "GAEgASgFEg0KBUNhdElkGAIgASgFEhAKCENhdExldmVsGAMgASgFEg4KBkNh",
            "dEV4cBgEIAEoBRIPCgdDYXRTdGFyGAUgASgFEhUKDUNhdFNraWxsTGV2ZWwY",
            "BiABKAUSEgoKQ2F0QWRkQ29pbhgHIAEoBRITCgtDYXRBZGRNYXRjaBgIIAEo",
            "BRIVCg1DYXRBZGRFeHBsb3JlGAkgASgFIiMKCUVQcm90b2NvbBIICgROb25l",
            "EAASDAoHUHJvdG9JRBD1YCKjAgoPQW5vdW5jZW1lbnRJdGVtEg8KB01zZ1R5",
            "cGUYASABKAUSEAoIUGxheWVySWQYAiABKAUSEgoKUGxheWVyTmFtZRgDIAEo",
            "CRITCgtQbGF5ZXJMZXZlbBgEIAEoBRIQCghTZW5kVGltZRgFIAEoBRIZChFG",
            "b3N0ZXJDYXJkVGFibGVJZBgGIAEoBRIWCg5Gb3JtdWxhVGFibGVJZBgHIAEo",
            "BRIXCg9CdWlsZGluZ1RhYmxlSWQYCCABKAUSFQoNU1NSQ2F0VGFibGVJZBgJ",
            "IAEoBRIQCghSYW5rVHlwZRgKIAEoBRIPCgdTdGFnZUlkGAsgASgFEhsKE0Nh",
            "dEZ1bGxMZXZlbFRhYmxlSWQYDCABKAUSDwoHQ29udGVudBgNIAEoCSJvChRT",
            "MkNBbm91bmNlbWVudE5vdGlmeRIyCgVJdGVtcxgBIAMoCzIjLm1zZy5jbGll",
            "bnRfbWVzc2FnZS5Bbm91bmNlbWVudEl0ZW0iIwoJRVByb3RvY29sEggKBE5v",
            "bmUQABIMCgdQcm90b0lEENRhInYKEVBTTGVhdmVNc2dDb21tZW50EhEKCUNv",
            "bW1lbnRJZBgBIAEoBRIPCgdDb250ZW50GAIgASgMEhAKCFNlbmRUaW1lGAMg",
            "ASgFEhQKDFNlbmRQbGF5ZXJJZBgEIAEoBRIVCg1SZXBseVBsYXllcklkGAUg",
            "ASgFIo0BCgpQU0xlYXZlTXNnEg0KBU1zZ0lkGAEgASgFEg8KB0NvbnRlbnQY",
            "AiABKAwSEAoIU2VuZFRpbWUYAyABKAUSFAoMU2VuZFBsYXllcklkGAQgASgF",
            "EjcKCENvbW1lbnRzGAUgAygLMiUubXNnLmNsaWVudF9tZXNzYWdlLlBTTGVh",
            "dmVNc2dDb21tZW50Ik8KCVBTUGljRGF0YRINCgVQaWNJZBgBIAEoBRIUCgxU",
            "aHVtYk5haWxVcmwYAiABKAkSDQoFWmFuZWQYAyABKAUSDgoGTXNnTnVtGAQg",
            "ASgFIkwKE0MyU0dldFBlcnNvbmFsU3BhY2USEAoIUGxheWVySWQYASABKAUi",
            "IwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEELhiItgBChlTMkNH",
            "ZXRQZXJzb25hbFNwYWNlUmVzdWx0EhAKCFBsYXllcklkGAEgASgFEhEKCVNp",
            "Z25hdHVyZRgCIAEoCRIrCgRQaWNzGAMgAygLMh0ubXNnLmNsaWVudF9tZXNz",
            "YWdlLlBTUGljRGF0YRIxCglMZWF2ZU1zZ3MYBCADKAsyHi5tc2cuY2xpZW50",
            "X21lc3NhZ2UuUFNMZWF2ZU1zZxIRCglJc01vcmVNc2cYBSABKAUiIwoJRVBy",
            "b3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEELliIlkKH0MyU1BlcnNvbmFs",
            "U3BhY2VNb2RpZnlTaWduYXR1cmUSEQoJU2lnbmF0dXJlGAEgASgJIiMKCUVQ",
            "cm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBC6YiJfCiVTMkNQZXJzb25h",
            "bFNwYWNlTW9kaWZ5U2lnbmF0dXJlUmVzdWx0EhEKCVNpZ25hdHVyZRgBIAEo",
            "CSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQu2IiWwoTQzJT",
            "UGVyc29uYWxTcGFjZVphbhIQCghQbGF5ZXJJZBgBIAEoBRINCgVQaWNJZBgC",
            "IAEoBSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQvGIicAoZ",
            "UzJDUGVyc29uYWxTcGFjZVphblJlc3VsdBIQCghQbGF5ZXJJZBgBIAEoBRIN",
            "CgVQaWNJZBgCIAEoBRINCgVaYW5lZBgDIAEoBSIjCglFUHJvdG9jb2wSCAoE",
            "Tm9uZRAAEgwKB1Byb3RvSUQQvWIiYgoaQzJTUGVyc29uYWxTcGFjZUdldFBp",
            "Y3R1cmUSEAoIUGxheWVySWQYASABKAUSDQoFUGljSWQYAiABKAUiIwoJRVBy",
            "b3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEL5iIqgBCiBTMkNQZXJzb25h",
            "bFNwYWNlR2V0UGljdHVyZVJlc3VsdBIQCghQbGF5ZXJJZBgBIAEoBRINCgVQ",
            "aWNJZBgCIAEoBRILCgNVcmwYAyABKAkSMQoJTGVhdmVNc2dzGAQgAygLMh4u",
            "bXNnLmNsaWVudF9tZXNzYWdlLlBTTGVhdmVNc2ciIwoJRVByb3RvY29sEggK",
            "BE5vbmUQABIMCgdQcm90b0lEEL9iIk8KGUMyU1BlcnNvbmFsU3BhY2VEZWxl",
            "dGVQaWMSDQoFUGljSWQYASABKAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIM",
            "CgdQcm90b0lEEMBiIlUKH1MyU1BlcnNvbmFsU3BhY2VEZWxldGVQaWNSZXN1",
            "bHQSDQoFUGljSWQYASABKAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQ",
            "cm90b0lEEMFiIogBChxDMlNQZXJzb25hbFNwYWNlUHVsbExlYXZlTXNnEhAK",
            "CFBsYXllcklkGAEgASgFEg0KBVBpY0lkGAIgASgFEhIKClN0YXJ0SW5kZXgY",
            "AyABKAUSDgoGTXNnTnVtGAQgASgFIiMKCUVQcm90b2NvbBIICgROb25lEAAS",
            "DAoHUHJvdG9JRBDCYiLBAQoiUzJDUGVyc29uYWxTcGFjZVB1bGxMZWF2ZU1z",
            "Z1Jlc3VsdBIQCghQbGF5ZXJJZBgBIAEoBRINCgVQaWNJZBgCIAEoBRISCgpT",
            "dGFydEluZGV4GAMgASgFEg4KBk1zZ051bRgEIAEoBRIxCglMZWF2ZU1zZ3MY",
            "BSADKAsyHi5tc2cuY2xpZW50X21lc3NhZ2UuUFNMZWF2ZU1zZyIjCglFUHJv",
            "dG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQw2IidgocQzJTUGVyc29uYWxT",
            "cGFjZVNlbmRMZWF2ZU1zZxIQCghQbGF5ZXJJZBgBIAEoBRINCgVQaWNJZBgC",
            "IAEoBRIQCghMZWF2ZU1zZxgDIAEoDCIjCglFUHJvdG9jb2wSCAoETm9uZRAA",
            "EgwKB1Byb3RvSUQQxGIinQEKIlMyQ1BlcnNvbmFsU3BhY2VTZW5kTGVhdmVN",
            "c2dSZXN1bHQSEAoIUGxheWVySWQYASABKAUSDQoFUGljSWQYAiABKAUSEAoI",
            "TGVhdmVNc2cYAyABKAwSDQoFTXNnSWQYBCABKAUSEAoIU2VuZFRpbWUYBSAB",
            "KAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEMViInIKG0My",
            "U1BlcnNvbmFsU3BhY2VEZWxMZWF2ZU1zZxIQCghQbGF5ZXJJZBgBIAEoBRIN",
            "CgVQaWNJZBgCIAEoBRINCgVNc2dJZBgDIAEoBSIjCglFUHJvdG9jb2wSCAoE",
            "Tm9uZRAAEgwKB1Byb3RvSUQQxmIieAohUzJDUGVyc29uYWxTcGFjZURlbExl",
            "YXZlTXNnUmVzdWx0EhAKCFBsYXllcklkGAEgASgFEg0KBVBpY0lkGAIgASgF",
            "Eg0KBU1zZ0lkGAMgASgFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJv",
            "dG9JRBDHYiKLAQojQzJTUGVyc29uYWxTcGFjZVNlbmRMZWF2ZU1zZ0NvbW1l",
            "bnQSEAoIUGxheWVySWQYASABKAUSDQoFUGljSWQYAiABKAUSDQoFTXNnSWQY",
            "AyABKAUSDwoHQ29tbWVudBgEIAEoDCIjCglFUHJvdG9jb2wSCAoETm9uZRAA",
            "EgwKB1Byb3RvSUQQyGIipAEKKVMyQ1BlcnNvbmFsU3BhY2VTZW5kTGVhdmVN",
            "c2dDb21tZW50UmVzdWx0EhAKCFBsYXllcklkGAEgASgFEg0KBVBpY0lkGAIg",
            "ASgFEg0KBU1zZ0lkGAMgASgFEg8KB0NvbW1lbnQYBCABKAwSEQoJQ29tbWVu",
            "dElkGAUgASgFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDJ",
            "YiKMAQoiQzJTUGVyc29uYWxTcGFjZURlbExlYXZlTXNnQ29tbWVudBIQCghQ",
            "bGF5ZXJJZBgBIAEoBRINCgVQaWNJZBgCIAEoBRINCgVNc2dJZBgDIAEoBRIR",
            "CglDb21tZW50SWQYBCABKAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQ",
            "cm90b0lEEMpiIpIBCihTMkNQZXJzb25hbFNwYWNlRGVsTGVhdmVNc2dDb21t",
            "ZW50UmVzdWx0EhAKCFBsYXllcklkGAEgASgFEg0KBVBpY0lkGAIgASgFEg0K",
            "BU1zZ0lkGAMgASgFEhEKCUNvbW1lbnRJZBgEIAEoBSIjCglFUHJvdG9jb2wS",
            "CAoETm9uZRAAEgwKB1Byb3RvSUQQy2IiogEKI0MyU1BlcnNvbmFsU3BhY2VQ",
            "dWxsTGVhdmVNc2dDb21tZW50EhAKCFBsYXllcklkGAEgASgFEg0KBVBpY0lk",
            "GAIgASgFEg0KBU1zZ0lkGAMgASgFEhIKClN0YXJ0SW5kZXgYBCABKAUSEgoK",
            "Q29tbWVudE51bRgFIAEoBSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1By",
            "b3RvSUQQzGIi4QEKKVMyQ1BlcnNvbmFsU3BhY2VQdWxsTGVhdmVNc2dDb21t",
            "ZW50UmVzdWx0EhAKCFBsYXllcklkGAEgASgFEg0KBVBpY0lkGAIgASgFEg0K",
            "BU1zZ0lkGAMgASgFEhIKClN0YXJ0SW5kZXgYBCABKAUSEgoKQ29tbWVudE51",
            "bRgFIAEoBRI3CghDb21tZW50cxgGIAMoCzIlLm1zZy5jbGllbnRfbWVzc2Fn",
            "ZS5QU0xlYXZlTXNnQ29tbWVudCIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwK",
            "B1Byb3RvSUQQzWIiOwoUQzJTQ2hhcmdlRGF0YVJlcXVlc3QiIwoJRVByb3Rv",
            "Y29sEggKBE5vbmUQABIMCgdQcm90b0lEEJxjIkEKDU1vbnRoQ2FyZERhdGES",
            "CgoCSWQYASABKAUSDwoHRW5kVGltZRgCIAEoBRITCgtTZW5kTWFpbE51bRgD",
            "IAEoBSKcAQoVUzJDQ2hhcmdlRGF0YVJlc3BvbnNlEhgKEEZpcnN0Q2hhcmdl",
            "U3RhdGUYASABKAUSMAoFRGF0YXMYAiADKAsyIS5tc2cuY2xpZW50X21lc3Nh",
            "Z2UuTW9udGhDYXJkRGF0YRISCgpDaGFyZ2VkSWRzGAMgAygFIiMKCUVQcm90",
            "b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBCdYyKoAQoQQzJTQ2hhcmdlUmVx",
            "dWVzdBIOCgZJdGVtSWQYBiABKAUSDwoHQ2hhbm5lbBgBIAEoBRIQCghCdW5k",
            "bGVJZBgCIAEoCRIUCgxQdXJjaGFyZURhdGEYAyABKAwSEQoJRXh0cmFEYXRh",
            "GAQgASgMEhMKC0NsaWVudEluZGV4GAUgASgFIiMKCUVQcm90b2NvbBIICgRO",
            "b25lEAASDAoHUHJvdG9JRBCeYyKRAQoRUzJDQ2hhcmdlUmVzcG9uc2USDgoG",
            "SXRlbUlkGAUgASgFEg8KB0NoYW5uZWwYASABKAUSEAoIQnVuZGxlSWQYAiAB",
            "KAkSDwoHSXNGaXJzdBgDIAEoCBITCgtDbGllbnRJbmRleBgEIAEoBSIjCglF",
            "UHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQn2MiQQoaUzJDQ2hhcmdl",
            "Rmlyc3RSZXdhcmROb3RpZnkiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQ",
            "cm90b0lEEKBjIkEKGkMyU0NoYXJnZUZpcnN0QXdhcmRSZXF1ZXN0IiMKCUVQ",
            "cm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBChYyJxChtTMkNDaGFyZ2VG",
            "aXJzdEF3YXJkUmVzcG9uc2USLQoHUmV3YXJkcxgBIAMoCzIcLm1zZy5jbGll",
            "bnRfbWVzc2FnZS5JdGVtSW5mbyIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwK",
            "B1Byb3RvSUQQomMiLwoPU3ViQWN0aXZpdHlEYXRhEg0KBVN1YklkGAEgASgF",
            "Eg0KBVZhbHVlGAIgASgFImgKDEFjdGl2aXR5RGF0YRIKCgJJZBgBIAEoBRIV",
            "Cg1SZW1haW5TZWNvbmRzGAIgASgFEjUKCFN1YkRhdGFzGAMgAygLMiMubXNn",
            "LmNsaWVudF9tZXNzYWdlLlN1YkFjdGl2aXR5RGF0YSI9ChZDMlNBY3Rpdml0",
            "eURhdGFSZXF1ZXN0IiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9J",
            "RBCAZCJuChdTMkNBY3Rpdml0eURhdGFSZXNwb25zZRIuCgREYXRhGAEgAygL",
            "MiAubXNnLmNsaWVudF9tZXNzYWdlLkFjdGl2aXR5RGF0YSIjCglFUHJvdG9j",
            "b2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQgWQiZgoVUzJDQWN0aXZpdHlEYXRh",
            "Tm90aWZ5EgoKAklkGAEgASgFEg0KBVN1YklkGAIgASgFEg0KBVZhbHVlGAMg",
            "ASgFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBCCZCJcChpD",
            "MlNBY3Rpdml0eUV4Y2hhbmdlUmVxdWVzdBIKCgJJZBgBIAEoBRINCgVTdWJJ",
            "ZBgCIAEoBSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQg2Qi",
            "XQobUzJDQWN0aXZpdHlFeGNoYW5nZVJlc3BvbnNlEgoKAklkGAEgASgFEg0K",
            "BVN1YklkGAIgASgFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9J",
            "RBCEZCI7CgxBY3Rpdml0eUluZm8SDQoFQ2ZnSWQYASABKAUSDgoGU3RhdGVz",
            "GAIgAygFEgwKBFZhbHMYAyADKAUiPQoWQzJTR2V0QWxsQWN0aXZpdHlJbmZv",
            "cyIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQsmQidgoWUzJD",
            "QWN0aXZpdHlJbmZvc1VwZGF0ZRI3Cg1BY3Rpdml0eWluZm9zGAEgAygLMiAu",
            "bXNnLmNsaWVudF9tZXNzYWdlLkFjdGl2aXR5SW5mbyIjCglFUHJvdG9jb2wS",
            "CAoETm9uZRAAEgwKB1Byb3RvSUQQs2QiZwoUQzJTR2V0QWN0aXZpdHlSZXdh",
            "cmQSFQoNQWN0aXZpdHlDZmdJZBgBIAEoBRITCgtFeHRyYVBhcmFtcxgCIAMo",
            "BSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQtGQifgoUUzJD",
            "UmV0QWN0aXZpdHlSZXdhcmQSFQoNQWN0aXZpdHlDZmdJZBgBIAEoBRIqCgdS",
            "ZXdhcmRzGAIgAygLMhkubXNnLmNsaWVudF9tZXNzYWdlLklkTnVtIiMKCUVQ",
            "cm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBC1ZCJQChhDMlNSZWRQb2lu",
            "dFN0YXRlc1JlcXVlc3QSDwoHTW9kdWxlcxgBIAMoBSIjCglFUHJvdG9jb2wS",
            "CAoETm9uZRAAEgwKB1Byb3RvSUQQ5GQiYQoZUzJDUmVkUG9pbnRTdGF0ZXNS",
            "ZXNwb25zZRIPCgdNb2R1bGVzGAEgAygFEg4KBlN0YXRlcxgCIAMoBSIjCglF",
            "UHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQ5WQiTAoXQzJTR3VpZGVE",
            "YXRhU2F2ZVJlcXVlc3QSDAoERGF0YRgBIAEoDCIjCglFUHJvdG9jb2wSCAoE",
            "Tm9uZRAAEgwKB1Byb3RvSUQQ5mQiTQoYUzJDR3VpZGVEYXRhU2F2ZVJlc3Bv",
            "bnNlEgwKBERhdGEYASABKAwiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQ",
            "cm90b0lEEOdkIkkKFFMyQ0d1aWRlRGF0YVJlc3BvbnNlEgwKBERhdGEYASAB",
            "KAwiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEOhkIioKB0d1",
            "aWRlRE0SDwoHR3VpZGVJRBgBIAEoBRIOCgZTdGVwSUQYAiABKAUiOgoTQzJT",
            "Rm9jdXNEYXRhUmVxdWVzdCIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1By",
            "b3RvSUQQyGUiRAoLRm9jdXNQbGF5ZXISCgoCSWQYASABKAUSDAoETmFtZRgC",
            "IAEoCRINCgVMZXZlbBgDIAEoBRIMCgRIZWFkGAQgASgFIoEBChRTMkNGb2N1",
            "c0RhdGFSZXNwb25zZRISCgpCZUZvY3VzTnVtGAEgASgFEjAKB1BsYXllcnMY",
            "AiADKAsyHy5tc2cuY2xpZW50X21lc3NhZ2UuRm9jdXNQbGF5ZXIiIwoJRVBy",
            "b3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEMllIk4KFUMyU0ZvY3VzUGxh",
            "eWVyUmVxdWVzdBIQCghQbGF5ZXJJZBgBIAEoBSIjCglFUHJvdG9jb2wSCAoE",
            "Tm9uZRAAEgwKB1Byb3RvSUQQymUicgoWUzJDRm9jdXNQbGF5ZXJSZXNwb25z",
            "ZRIzCgpQbGF5ZXJJbmZvGAEgASgLMh8ubXNnLmNsaWVudF9tZXNzYWdlLkZv",
            "Y3VzUGxheWVyIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDL",
            "ZSJUChtDMlNGb2N1c1BsYXllckNhbmNhbFJlcXVlc3QSEAoIUGxheWVySWQY",
            "ASABKAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEMxlIlUK",
            "HFMyQ0ZvY3VzUGxheWVyQ2FuY2VsUmVzcG9uc2USEAoIUGxheWVySWQYASAB",
            "KAUiIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEM1lIj4KF0My",
            "U015UGljdHVyZURhdGFSZXF1ZXN0IiMKCUVQcm90b2NvbBIICgROb25lEAAS",
            "DAoHUHJvdG9JRBDOZSJPChhTMkNNeVBpY3R1cmVEYXRhUmVzcG9uc2USDgoG",
            "Q2F0SWRzGAEgAygFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9J",
            "RBDPZSJeChZDMlNNeVBpY3R1cmVTZXRSZXF1ZXN0Eg0KBUNhdElkGAEgASgF",
            "EhAKCElzQ2FuY2VsGAIgASgIIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoH",
            "UHJvdG9JRBDQZSJfChdTMkNNeVBpY3R1cmVTZXRSZXNwb25zZRINCgVDYXRJ",
            "ZBgBIAEoBRIQCghJc0NhbmNlbBgCIAEoCCIjCglFUHJvdG9jb2wSCAoETm9u",
            "ZRAAEgwKB1Byb3RvSUQQ0WUiTAoTQzJTU3BhY2VEYXRhUmVxdWVzdBIQCghQ",
            "bGF5ZXJJZBgBIAEoBSIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3Rv",
            "SUQQ0mUiqAEKDFNwYWNlQ2F0RGF0YRINCgVDYXRJZBgCIAEoBRISCgpDYXRU",
            "YWJsZUlkGAMgASgFEg8KB0NhdE5hbWUYBCABKAkSDwoHQ2F0T3VxaRgFIAEo",
            "BRITCgtDb2luQWJpbGl0eRgGIAEoBRIUCgxNYXRjaEFiaWxpdHkYByABKAUS",
            "FgoORXhwbG9yZUFiaWxpdHkYCCABKAUSEAoISXNVbmxvY2sYCSABKAgikAIK",
            "FFMyQ1NwYWNlRGF0YVJlc3BvbnNlEhAKCFBsYXllcklkGAEgASgFEhIKClBs",
            "YXllck5hbWUYAiABKAkSEwoLUGxheWVyTGV2ZWwYAyABKAUSEgoKUGxheWVy",
            "SGVhZBgEIAEoBRINCgVaYW5lZBgFIAEoBRISCgpCZUZvY3VzTnVtGAYgASgF",
            "Eg0KBUNoYXJtGAcgASgFEi4KBENhdHMYCCADKAsyIC5tc2cuY2xpZW50X21l",
            "c3NhZ2UuU3BhY2VDYXREYXRhEg4KBkdlbmRlchgJIAEoBRISCgpGYXNoaW9u",
            "SWRzGAogAygFIiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDT",
            "ZSJPChhDMlNTcGFjZVNldEdlbmRlclJlcXVlc3QSDgoGR2VuZGVyGAEgASgF",
            "IiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDcZSJQChlTMkNT",
            "cGFjZVNldEdlbmRlclJlc3BvbnNlEg4KBkdlbmRlchgBIAEoBSIjCglFUHJv",
            "dG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQ3WUiVQoaQzJTU3BhY2VGYXNo",
            "aW9uU2F2ZVJlcXVlc3QSEgoKRmFzaGlvbklkcxgBIAMoBSIjCglFUHJvdG9j",
            "b2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQ3mUiVgobUzJDU3BhY2VGYXNoaW9u",
            "U2F2ZVJlc3BvbnNlEhIKCkZhc2hpb25JZHMYASADKAUiIwoJRVByb3RvY29s",
            "EggKBE5vbmUQABIMCgdQcm90b0lEEN9lIkEKGkMyU1NwYWNlRmFzaGlvbkRh",
            "dGFSZXF1ZXN0IiMKCUVQcm90b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBDg",
            "ZSJmChtTMkNTcGFjZUZhc2hpb25EYXRhUmVzcG9uc2USDgoGR2VuZGVyGAEg",
            "ASgFEhIKCkZhc2hpb25JZHMYAiADKAUiIwoJRVByb3RvY29sEggKBE5vbmUQ",
            "ABIMCgdQcm90b0lEEOFlImAKGEMyU1NwYWNlQ2F0VW5sb2NrUmVxdWVzdBIQ",
            "CghQbGF5ZXJJZBgBIAEoBRINCgVDYXRJZBgCIAEoBSIjCglFUHJvdG9jb2wS",
            "CAoETm9uZRAAEgwKB1Byb3RvSUQQ5mUicwoZUzJDU3BhY2VDYXRVbmxvY2tS",
            "ZXNwb25zZRIQCghQbGF5ZXJJZBgBIAEoBRINCgVDYXRJZBgCIAEoBRIQCghJ",
            "c1VubG9jaxgDIAEoCCIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3Rv",
            "SUQQ52UiOQoSQzJTU2lnbkRhdGFSZXF1ZXN0IiMKCUVQcm90b2NvbBIICgRO",
            "b25lEAASDAoHUHJvdG9JRBCwbSKVAQoTUzJDU2lnbkRhdGFSZXNwb25zZRIN",
            "CgVHcm91cBgBIAEoBRIWCg5UYWtlQXdhcmRJbmRleBgCIAEoBRITCgtTaWdu",
            "ZWRJbmRleBgDIAEoBRIdChVOZXh0U2lnblJlbWFpblNlY29uZHMYBCABKAUi",
            "IwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEELFtIkkKE0MyU1Np",
            "Z25Bd2FyZFJlcXVlc3QSDQoFSW5kZXgYASABKAUiIwoJRVByb3RvY29sEggK",
            "BE5vbmUQABIMCgdQcm90b0lEELJtInkKFFMyQ1NpZ25Bd2FyZFJlc3BvbnNl",
            "Eg0KBUluZGV4GAEgASgFEi0KB1Jld2FyZHMYAiADKAsyHC5tc2cuY2xpZW50",
            "X21lc3NhZ2UuSXRlbUluZm8iIwoJRVByb3RvY29sEggKBE5vbmUQABIMCgdQ",
            "cm90b0lEELNtIj4KF0MyU1NldmVuRGF5c0RhdGFSZXF1ZXN0IiMKCUVQcm90",
            "b2NvbBIICgROb25lEAASDAoHUHJvdG9JRBCYdSJ+ChhTMkNTZXZlbkRheXNE",
            "YXRhUmVzcG9uc2USEwoLQXdhcmRTdGF0ZXMYASADKAUSEQoJU3RhcnRUaW1l",
            "GAIgASgFEhUKDVJlbWFpblNlY29uZHMYAyABKAUiIwoJRVByb3RvY29sEggK",
            "BE5vbmUQABIMCgdQcm90b0lEEJl1Ij8KGEMyU1NldmVuRGF5c0F3YXJkUmVx",
            "dWVzdCIjCglFUHJvdG9jb2wSCAoETm9uZRAAEgwKB1Byb3RvSUQQmnUifQoZ",
            "UzJDU2V2ZW5EYXlzQXdhcmRSZXNwb25zZRIMCgREYXlzGAEgASgFEi0KB1Jl",
            "d2FyZHMYAiADKAsyHC5tc2cuY2xpZW50X21lc3NhZ2UuSXRlbUluZm8iIwoJ",
            "RVByb3RvY29sEggKBE5vbmUQABIMCgdQcm90b0lEEJt1Ko5ZCgVFX0VSUhII",
            "CgROT05FEAASFQoISU5URVJOQUwQ////////////ARIpChxQTEFZRVJfQUND",
            "X09SX1BBU1NXT1JEX0VSUk9SEP7//////////wESHQoQUExBWUVSX05PVF9F",
            "WElTVBD9//////////8BEiMKFlBMQVlFUl9BTFJFQURZX0xPR0lORUQQ/P//",
            "////////ARIlChhQTEFZRVJfT1RIRVJfUExBQ0VfTE9HSU4Q+///////////",
            "ARIfChJQTEFZRVJfVE9LRU5fRVJST1IQ+v//////////ARIrCh5QTEFZRVJf",
            "U0VMRUNUX1NFUlZFUl9OT1RfRk9VTkQQ+f//////////ARIrCh5QTEFZRVJf",
            "QUxSRUFEWV9TRUxFQ1RFRF9TRVJWRVIQ+P//////////ARIeChFQTEFZRVJf",
            "SVNfT0ZGTElORRD3//////////8BEicKGlBMQVlFUl9TRU5EX1RPT19GUkVR",
            "VUVOVExZEPb//////////wESIwoWUExBWUVSX0dPTERfTk9UX0VOT1VHSBD1",
            "//////////8BEiYKGVBMQVlFUl9ESUFNT05EX05PVF9FTk9VR0gQ9P//////",
            "////ARIhChRQTEFZRVJfTkFNRV9UT09fTE9ORxDz//////////8BEi0KIFBM",
            "QVlFUl9IRUFEX1RBQkxFX0RBVEFfTk9UX0ZPVU5EEPL//////////wESIAoT",
            "UExBWUVSX05PX1NVQ0hfSEVBRBDx//////////8BEiQKF1BMQVlFUl9MRVZF",
            "TF9OT1RfRU5PVUdIEPD//////////wESMgolUExBWUVSX01VU1RfUkVDT05O",
            "X1dJVEhfRElTQ09OTl9TVEFURRDv//////////8BEiIKFVBMQVlFUl9NU0df",
            "SURfSU5WQUxJRBDu//////////8BEiQKF1BMQVlFUl9NU0dfSURfTk9UX0ZP",
            "VU5EEO3//////////wESJgoZUExBWUVSX05PVF9GT1VORF9CWV9UT0tFThDs",
            "//////////8BEiMKFlBMQVlFUl9UT0tFTl9OT1RfRk9VTkQQ6///////////",
            "ARInChpBQ0NPVU5UX0FMUkVBRFlfUkVHSVNURVJFRBCc//////////8BEh8K",
            "EkFDQ09VTlRfSVNfSU5WQUxJRBCb//////////8BEiUKGEFDQ09VTlRfUEFT",
            "U1dPUkRfSU5WQUxJRBCa//////////8BEiMKFkFDQ09VTlRfTk9UX1JFR0lT",
            "VEVSRUQQmf//////////ARIeChFBQ0NPVU5UX05PVF9HVUVTVBCY////////",
            "//8BEiwKH0FDQ09VTlRfTkVXX0JJTkRfQUxSRUFEWV9FWElTVFMQl///////",
            "////ARIuCiFBQ0NPVU5UX05BTUVfTVVTVF9ESUZGUkVOVF9UT19PTEQQlv//",
            "////////ARIhChRBQ0NPVU5UX0FMUkVBRFlfQklORBCV//////////8BEh4K",
            "EUFDQ09VTlRfQkVfQkFOTkVEEJT//////////wESIwoWUkVNT1RFX0ZVTkNf",
            "Q0FMTF9FUlJPUhDg4/7///////8BEiUKGFBMQVlFUl9BTFJFQURZX1pBTl9U",
            "T0RBWRDg8vn///////8BEi8KIlBMQVlFUl9SRU5BTUVfTkVXX0NBTlRfU0FN",
            "RV9UT19PTEQQ3/L5////////ARIpChxQTEFZRVJfUkVOQU1FX05FV19DQU5U",
            "X0VNUFRZEN7y+f///////wESLAofUExBWUVSX1JFTkFNRV9SRU1PVkVfT0xE",
            "X0ZBSUxFRBDd8vn///////8BEigKG1BMQVlFUl9SRU5BTUVfVE9PX0xPTkdf",
            "TkFNRRDc8vn///////8BEi0KIFBMQVlFUl9SRU5BTUVfTk9UX0VOT1VHSF9E",
            "SUFNT05EENvy+f///////wESJAoXREFZU0lHTl9BTFJBRFlfU1VNX1NJR04Q",
            "/PH5////////ARIjChZCVUlMRElOR19OT1RfRklORF9JVEVNEJjx+f//////",
            "/wESIgoVQlVJTERJTkdfUE9TX0ZPUkJJREVOEJfx+f///////wESHwoSQlVJ",
            "TERJTkdfTk9UX0VYSVNUEJbx+f///////wESHQoQQlVJTERJTkdfTk9UX0NG",
            "RxCV8fn///////8BEiIKFUJVSUxESU5HX05PVF9GT1JfU0VMTBCU8fn/////",
            "//8BEiwKH0JVSUxESU5HX0ZBSUxFRF9UT19TRVRfQlVJTERJTkcQk/H5////",
            "////ARIkChdCVUlMRElOR19OT19FTk9VR0hfQ09JThCS8fn///////8BEicK",
            "GkJVSUxESU5HX05PX0RFUE9UX0JVSUxESU5HEJHx+f///////wESJgoZQlVJ",
            "TERJTkdfUkVNT1ZFX0xFU1NfSVRFTRCQ8fn///////8BEi0KIEJVSUxESU5H",
            "X09QRU5fTUFQX0NIRVNUX0xFU1NfUkVTEI/x+f///////wESJAoXQlVJTERJ",
            "TkdfU0VUX0NBTk5PVF9CVVkQjvH5////////ARInChpCVUlMRElOR19CVVlT",
            "RVRfTEVTU19QX0xWTBCN8fn///////8BEikKHEJVSUxESU5HX0JVWVNFVF9M",
            "RVNTX1ZJUF9MVkwQjPH5////////ARIpChxCVUlMRElOR19CVVlTRVRfTEVT",
            "U19GUk9NVUxBEIvx+f///////wESIwoWQlVJTERJTkdfU0VUX01BWF9DT1VO",
            "VBCK8fn///////8BEiEKFEJVSUxESU5HX01PVkVfRkFJTEVEEInx+f//////",
            "/wESKQocQlVJTERJTkdfQVJFQV9UWVBFX05PVF9NQVRDSBCI8fn///////8B",
            "EiYKGUJVSUxESU5HX0FSRUFfVFlQRV9OT19QT1MQh/H5////////ARIhChRE",
            "UkFXX1dST05HX0RSQVdfVFlQRRC08Pn///////8BEh8KEkVYUEVESVRJT05f",
            "Tk9fVEFTSxDQ7/n///////8BEiAKE0VYUEVESVRJT05fTEVTU19DQVQQz+/5",
            "////////ARIjChZFWFBFRElUSU9OX0NBVF9XT1JLSU5HEM7v+f///////wES",
            "IgoVRVhQRURJVElPTl9UQVNLX0RPSU5HEM3v+f///////wESIgoVRVhQRURJ",
            "VElPTl9MRVNTX0xFVkVMEMzv+f///////wESIAoTRVhQRURJVElPTl9MRVNT",
            "X1FVQRDL7/n///////8BEiEKFEVYUEVESVRJT05fTEVTU19TVEFSEMrv+f//",
            "/////wESIwoWRVhQRURJVElPTl9XUk9OR19DT0xPUhDJ7/n///////8BEiMK",
            "FkVYUEVESVRJT05fTk9UX0NBVF9DRkcQyO/5////////ARIqCh1FWFBFRElU",
            "SU9OX0NBTlRfUk1fTElNSVRfVEFTSxDH7/n///////8BEiQKF0VYUEVESVRJ",
            "T05fTk9UX1RBU0tfQ0ZHEMbv+f///////wESJAoXRVhQRURJVElPTl9MRVNT",
            "X0RJQU1PTkQQxe/5////////ARImChlFWFBFRElUSU9OX1NUT1BfTk9UX0RP",
            "SU5HEMTv+f///////wESIwoWRVhQRURJVElPTl9XUk9OR19TVEFURRDD7/n/",
            "//////8BEiAKE0VYUEVESVRJT05fTEVTU19SRVMQwu/5////////ARIoChtF",
            "WFBFRElUSU9OX1NUQVJUX0xFU1NfQ09VTlQQwe/5////////ARIrCh5CVUlM",
            "RElOR19BUkVBX0FMRVJBRFlfVU5MT0NLRUQQ7O75////////ARIhChRCVUlM",
            "RElOR19BUkVBX05PX0NGRxDr7vn///////8BEigKG0JVSUxESU5HX0FSRUFf",
            "Tk9fVU5MT0NLX0NGRxDq7vn///////8BEioKHUJVSUxESU5HX0FSRUFfTEVT",
            "U19VTkxPQ0tfUkVTEOnu+f///////wESKgodQlVJTERJTkdfQVJFQV9MRVNT",
            "X1VOTE9DS19MVkwQ6O75////////ARIrCh5CVUlMRElOR19BUkVBX0xFU1Nf",
            "VU5MT0NLX1NUQVIQ5+75////////ARIuCiFCVUlMRElOR19BUkVBX0NBTk5P",
            "VF9RVUlDS19VTkxPQ0sQ5u75////////ARIjChZCVUlMRElOR19BUkVBX05F",
            "RURfUFJFEOXu+f///////wESJwoaUExBWUVSX01BSUxfT1ZFUl9NQVhfQ09V",
            "TlQQiO75////////ARIiChVQTEFZRVJfTUFJTF9OT1RfRk9VTkQQh+75////",
            "////ARIpChxQTEFZRVJfTUFJTF9OT19BVFRBQ0hFRF9JVEVNEIbu+f//////",
            "/wESJAoXUExBWUVSX01BSUxfU0VORF9GQUlMRUQQhe75////////ARIrCh5Q",
            "TEFZRVJfTUFJTF9SRUNFSVZFUl9OT1RfRk9VTkQQhO75////////ARIrCh5Q",
            "TEFZRVJfTUFJTF9QTEFZRVJfSVNfQ09PTERPV04Qg+75////////ARInChpQ",
            "TEFZRVJfTUFJTF9USVRMRV9UT09fTE9ORxCC7vn///////8BEikKHFBMQVlF",
            "Ul9NQUlMX0NPTlRFTlRfVE9PX0xPTkcQge75////////ARIoChtQTEFZRVJf",
            "TUFJTF9TVUJUWVBFX1VOS05PV04QgO75////////ARImChlJVEVNX1RBQkxF",
            "X0RBVEFfTk9UX0ZPVU5EEPjq+f///////wESGwoOSVRFTV9OT1RfRk9VTkQQ",
            "9+r5////////ARIgChNJVEVNX05VTV9OT1RfRU5PVUdIEPbq+f///////wES",
            "IwoWSVRFTV9BQ1RJT05fTk9UX0VOT1VHSBD16vn///////8BEiUKGENBVF9U",
            "QUJMRV9EQVRBX05PVF9GT1VORBCU6vn///////8BEhoKDUNBVF9OT1RfRk9V",
            "TkQQk+r5////////ARIcCg9DQVRfSU5fQ0FUSE9VU0UQkur5////////ARIe",
            "ChFDQVRfSU5fRVhQRURJVElPThCR6vn///////8BEhoKDUNBVF9JTl9GT1NU",
            "RVIQkOr5////////ARIfChJDQVRfTEVWRUxVUF9GQUlMRUQQj+r5////////",
            "ARIeChFDQVRfVVBTVEFSX0ZBSUxFRBCO6vn///////8BEiUKGENBVF9VUEdS",
            "QURFX1NLSUxMX0ZBSUxFRBCN6vn///////8BEhcKCkNBVF9MT0NLRUQQjOr5",
            "////////ARIZCgxDQVRfVU5MT0NLRUQQi+r5////////ARIgChNDQVRfRk9P",
            "RF9OT1RfRU5PVUdIEIrq+f///////wESHAoPQ0FUX1NUQVJfSVNfTUFYEInq",
            "+f///////wESKwoeQ0FUX1VQU1RBUl9DT1NUX0NBVF9OT1RfRU5PVUdIEIjq",
            "+f///////wESKgodQ0FUX1VQU1RBUl9DT1NUX0NBVF9OT1RfRk9VTkQQh+r5",
            "////////ARIrCh5DQVRfVVBTVEFSX0NPU1RfQ0FUX05PVF9VTkxPQ0sQhur5",
            "////////ARIpChxDQVRfVVBTVEFSX0NPU1RfQ0FUX0lTX1VTSU5HEIXq+f//",
            "/////wESKgodQ0FUX1VQU1RBUl9DT1NUX0NBVF9TVEFSX0RJRkYQhOr5////",
            "////ARIjChZDQVRfU0tJTExfTEVWRUxfSVNfTUFYEIPq+f///////wESLAof",
            "Q0FUX1VQU0tJTExfQ09TVF9DQVRfQ0FOVF9FTVBUWRCC6vn///////8BEisK",
            "HkNBVF9VUFNLSUxMX0NPU1RfQ0FUX0NBTlRfU0VMRhCB6vn///////8BEisK",
            "HkNBVF9VUFNLSUxMX0NPU1RfQ0FUX05PVF9GT1VORBCA6vn///////8BEioK",
            "HUNBVF9VUFNLSUxMX0NPU1RfQ0FUX0lTX1VTSU5HEP/p+f///////wESKAob",
            "Q0FUX1VQU0tJTExfQ09TVF9DQVRfTE9DS0VEEP7p+f///////wESKgodQ0FU",
            "X1VQU0tJTExfTk9fVkFMSURfQ09TVF9DQVQQ/en5////////ARIkChdDQVRf",
            "UkVOQU1FX0NBTlRfVVNFX09MRBD86fn///////8BEhgKC0NBVF9JU19CVVNZ",
            "EPvp+f///////wESKAobQ0FUX1VQU1RBUl9MRVZFTF9OT1RfRU5PVUdIEPrp",
            "+f///////wESIwoWQ0FUX1VQTEVWTF9ORUVEX1VQU1RBUhD56fn///////8B",
            "EigKG0NBVF9VUFNLSUxMX05PVF9FTk9VR0hfQ09JThD46fn///////8BEikK",
            "HEZPUk1VTEFfVEFCTEVfREFUQV9OT1RfRk9VTkQQsOn5////////ARIiChVG",
            "T1JNVUxBX05PVF9FWENIQU5HRUQQr+n5////////ARIxCiRGT1JNVUxBX0VY",
            "Q0hBTkdFX05FRURfVU5MT0NLX0NIQVBURVIQrun5////////ARItCiBGT1JN",
            "VUxBX0VYQ0hBTkdFX05PVF9FTk9VR0hfU1RBUhCt6fn///////8BEisKHkZP",
            "Uk1VTEFfTUFLSU5HX05PVF9FTk9VR0hfQ09JThCs6fn///////8BEi8KIkZP",
            "Uk1VTEFfTUFLSU5HX05PVF9FTk9VR0hfUkVTT1VSQ0UQq+n5////////ARIr",
            "Ch5GT1JNVUxBX01BS0lOR19TTE9UX0lEX0lOVkFMSUQQqun5////////ARIp",
            "ChxGT1JNVUxBX01BS0lOR19TTE9UX0lTX1VTSU5HEKnp+f///////wESLgoh",
            "Rk9STVVMQV9NQUtJTkdfU1BFRURVUF9TTE9UX0VNUFRZEKjp+f///////wES",
            "HwoSRk9STVVMQV9OT1RfTUFLSU5HEKfp+f///////wESNAonRk9STVVMQV9N",
            "QUtJTkdfU1BFRURVUF9BTFJFQVlfQ09NUExFVEVEEKbp+f///////wESJwoa",
            "Rk9STVVMQV9OT19NQUtJTkdfQlVJTERJTkcQpen5////////ARItCiBGT1JN",
            "VUxBX01BS0lOR19BTFJFQURZX0NPTVBMRVRFRBCk6fn///////8BEiYKGUZP",
            "Uk1VTEFfTk9fU0xPVF9UT19NQUtJTkcQo+n5////////ARImChlDUk9QX1RB",
            "QkxFX0RBVEFfTk9UX0ZPVU5EEMzo+f///////wESGwoOQ1JPUF9OT1RfRk9V",
            "TkQQy+j5////////ARIeChFDUk9QX0lTX05PX1VOTE9DSxDK6Pn///////8B",
            "EiYKGUNST1BfTkVFRF9DT0lOX05PVF9FTk9VR0gQyej5////////ARIkChdD",
            "Uk9QX0JVSUxESU5HX05PVF9GT1VORBDI6Pn///////8BEiYKGUNST1BfQlVJ",
            "TERJTkdfSVNfTk9UX0NST1AQx+j5////////ARIsCh9DUk9QX1NQRUVEVVBf",
            "RElBTU9ORF9OT1RfRU5PVUdIEMbo+f///////wESKgodQ1JPUF9OT19NQVRV",
            "UklUWV9ET05UX0hBUlZFU1QQxej5////////ARIfChJDUk9QX0FMUkVBRFlf",
            "UExBTlQQxOj5////////ARIxCiRDUk9QX0FMUkVBWV9NQVRVUklUWV9OT19O",
            "RUVEX1NQRUVEVVAQw+j5////////ARIqCh1DQVRIT1VTRV9UQUJMRV9EQVRB",
            "X05PVF9GT1VORBDo5/n///////8BEh8KEkNBVEhPVVNFX05PVF9GT1VORBDn",
            "5/n///////8BEioKHUNBVEhPVVNFX0NBVF9BTFJFQURZX0lOX0hPVVNFEObn",
            "+f///////wESHQoQQ0FUSE9VU0VfSVNfRlVMTBDl5/n///////8BEioKHUNB",
            "VEhPVVNFX0NBVF9OT1RfSU5fVEhFX0hPVVNFEOTn+f///////wESLAofQ0FU",
            "SE9VU0VfTk9UX0ZPVU5EX0NBVF9JTl9IT1VTRRDj5/n///////8BEicKGkNB",
            "VEhPVVNFX0lTX0RPSU5HX0xFVkVMX1VQEOLn+f///////wESIgoVQ0FUSE9V",
            "U0VfTEVWRUxfSVNfTUFYEOHn+f///////wESLQogQ0FUSE9VU0VfTEVWRUxV",
            "UF9DT1NUX05PVF9FTk9VR0gQ4Of5////////ARInChpDQVRIT1VTRV9OT1Rf",
            "RE9JTkdfTEVWRUxVUBDf5/n///////8BEjgKK0NBVEhPVVNFX1NQRUVEVVBf",
            "TEVWRUxVUF9OT1RfRU5PVUdIX0RJQU1PTkQQ3uf5////////ARIfChJDQVRI",
            "T1VTRV9DQU5UX1NFTEwQ3ef5////////ARIpChxDQVRIT1VTRV9DQVRfTVVT",
            "VF9TQU1FX0NPTE9SENzn+f///////wESKAobQ0FUSE9VU0VfQ0FUX1BST0RV",
            "Q0lOR19HT0xEENvn+f///////wESNgopQ0FUSE9VU0VfU1RBUlRfUFJPRFVD",
            "RV9HT0xEX0ZBSUxFRF9OT19DQVQQ2uf5////////ARIbCg5TSE9QX05PVF9G",
            "T1VORBCD5/n///////8BEiYKGVNIT1BfTElNSVRFRF9UWVBFX0lOVkFMSUQQ",
            "guf5////////ARIkChdTSE9QX0RJQU1PTkRfTk9UX0VOT1VHSBCB5/n/////",
            "//8BEiEKFFNIT1BfQ09JTl9OT1RfRU5PVUdIEIDn+f///////wESIgoVU0hP",
            "UF9DSEFSTV9OT1RfRU5PVUdIEP/m+f///////wESKQocU0hPUF9GUklFTkRf",
            "UE9JTlRfTk9UX0VOT1VHSBD+5vn///////8BEicKGlNIT1BfU09VTF9TVE9O",
            "RV9OT1RfRU5PVUdIEP3m+f///////wESKAobU0hPUF9DSEFSTV9NRURBTF9O",
            "T1RfRU5PVUdIEPzm+f///////wESJwoaU0hPUF9QVVJDSEFTRV9UWVBFX0lO",
            "VkFMSUQQ++b5////////ARIiChVTSE9QX1BVUkNIQVNFRF9GQUlMRUQQ+ub5",
            "////////ARIgChNTSE9QX0lURU1fTk9UX0ZPVU5EEPnm+f///////wESIQoU",
            "U0hPUF9JVEVNX05PVF9FTk9VR0gQ+Ob5////////ARInChpTSE9QX0FGVEVS",
            "X1BVUkNIQVNFX0ZBSUxFRBD35vn///////8BEhsKDlRBU0tfTk9UX0ZPVU5E",
            "EKDm+f///////wESHgoRVEFTS19OT1RfQ09NUExFVEUQn+b5////////ARIc",
            "Cg9UQVNLX05PVF9SRVdBUkQQnub5////////ARIiChVUQVNLX0FMUkVBRFlf",
            "UkVXQVJERUQQneb5////////ARIjChZUQVNLX1BSRVZfTk9UX0NPTVBMRVRF",
            "EJzm+f///////wESLAofQ0hBUFRFUl9VTkxPQ0tfV1JPTkdfQ0hBUFRFUl9J",
            "RBC85fn///////8BEiUKGENIQVBURVJfVU5MT0NLX0xFU1NfU1RBUhC75fn/",
            "//////8BEigKG0NIQVBURVJfVU5MT0NLX0xFU1NfRElBTU9ORBC65fn/////",
            "//8BEikKHENIQVBURVJfVU5MT0NLX05PX1VOTE9DS19DRkcQueX5////////",
            "ARItCiBDSEFQVEVSX1VOTE9DS19OT19DVVJfVU5MT0NLX0NGRxC45fn/////",
            "//8BEioKHUNIQVBURVJfVU5MT0NLX05PX0VOT1VHSF9USU1FELfl+f//////",
            "/wESKQocQ0hBUFRFUl9VTkxPQ0tfTk9fRlJJRU5EX0lEUxC25fn///////8B",
            "EisKHkNIQVBURVJfVU5MT0NLX05FRURfUEFTU19TVEFHRRC15fn///////8B",
            "EikKHENIQVBURVJfSEVMUF9VTkxPQ0tfTEVTU19OVU0QtOX5////////ARIi",
            "ChVTVEFHRV9QQVNTX05PVF9VTkxPQ0sQ2OT5////////ARInChpTVEFHRV9Q",
            "QVNTX09WRVJfTkVYVF9TVEFURRDX5Pn///////8BEicKGlNUQUdFX1RBQkxF",
            "X0RBVEFfTk9UX0ZPVU5EENbk+f///////wESJAoXU1RBR0VfTk9fTUFUQ0hf",
            "V0lUSF9FTkQQ1eT5////////ARIjChZTVEFHRV9BTFJFQURZX0ZJTklTSEVE",
            "ENTk+f///////wESIAoTU1RBR0VfQUxSRUFEWV9CRUdBThDT5Pn///////8B",
            "EhsKDlNUQUdFX05PX0JFR0lOENLk+f///////wESJAoXRlJJRU5EX05PVF9G",
            "T1VORF9QTEFZRVIQ9OP5////////ARIbCg5GUklFTkRfT0ZGTElORRDz4/n/",
            "//////8BEioKHUZSSUVORF9HSVZFX1BPSU5UU19GUkVRVUVOVExZEPLj+f//",
            "/////wESLwoiRlJJRU5EX1RPT19NQU5ZX0ZSSUVORF9HSVZFX1BPSU5UUxDx",
            "4/n///////8BEi0KIEZSSUVORF9QT0lOVFNfTk9UX0VOT1VHSF9UT19HSVZF",
            "EPDj+f///////wESJwoaRlJJRU5EX1ZJU0lUX0ZSSUVORF9GQUlMRUQQ7+P5",
            "////////ARIhChRGUklFTkRfTk9fVEhFX0ZSSUVORBDu4/n///////8BEh8K",
            "EkZSSUVORF9DSEFUX0ZBSUxFRBDt4/n///////8BEiUKGEZSSUVORF9OT19V",
            "TlJFQURfTUVTU0FHRRDs4/n///////8BEiMKFkZSSUVORF9NRVNTQUdFX05V",
            "TV9NQVgQ6+P5////////ARIkChdGUklFTkRfTUVTU0FHRV9UT09fTE9ORxDq",
            "4/n///////8BEigKG0ZSSUVORF9SRU1PVkVfRlJJRU5EX0ZBSUxFRBDp4/n/",
            "//////8BEicKGkZSSUVORF9MQVNUX1BPSU5UU19OT1RfR0VUEOjj+f//////",
            "/wESLQogRlJJRU5EX1RIRV9QTEFZRVJfQUxSRUFEWV9GUklFTkQQ5+P5////",
            "////ARIoChtGUklFTkRfVEhFX1BMQVlFUl9SRVFVRVNURUQQ5uP5////////",
            "ARItCiBGUklFTkRfR0lWRV9QT0lOVFNfTUFYX05VTV9MSU1JVBDl4/n/////",
            "//8BEjEKJEZSSUVORF9BTFJFRFlfR0lWRURfUE9JTlRTX1RPX1BMQVlFUhDk",
            "4/n///////8BEhwKD0FDVElWSVRZX05PX0NGRxCQ4/n///////8BEiMKFkFD",
            "VElWSVRZX0hBVkVfUkVXQVJERUQQj+P5////////ARIiChVBQ1RJVklUWV9O",
            "T1RfRklOSVNIRUQQjuP5////////ARIhChRBQ1RJVklUWV9OT19SRVdBUkRF",
            "RBCN4/n///////8BEioKHUFDVElWSVRZX0dFVF9SRVdBUkRfUkVRX0VSUk9S",
            "EIzj+f///////wESJwoaQUNUSVZJVFlfTFZMX1JFV0FSRF9OT19DRkcQi+P5",
            "////////ARIpChxBQ1RJVklUWV9MVkxfUkVXQVJEX0xFU1NfTFZMEIrj+f//",
            "/////wESJgoZQUNUSVZJVFlfVklQQ0FSRF9OT1RfT1BFThCJ4/n///////8B",
            "EicKGkFDVElWSVRZX0RBWV9SRVdBUkRfTk9fQ0ZHEIjj+f///////wESKgod",
            "QUNUSVZJVFlfU1VNX0RBWVJFV0FSRF9OT19DRkcQh+P5////////ARIeChFB",
            "Q1RJVklUWV9OT1RfT1BFThCG4/n///////8BEisKHkZPU1RFUl9DT01QT1NF",
            "X05PVF9FTk9VR0hfQ0FSRBCs4vn///////8BEigKG0ZPU1RFUl9DT01QT1NF",
            "X0NBUkRfSU5WQUxJRBCr4vn///////8BEigKG0ZPU1RFUl9DT01QT1NFX1RZ",
            "UEVfSU5WQUxJRBCq4vn///////8BEigKG0ZPU1RFUl9CVUlMRElOR19JU19E",
            "SVNNQVRDSBCp4vn///////8BEi8KIkZPU1RFUl9OT1RfRU5PVUdIX1NQQUNF",
            "X1RPX1NFVF9DQVQQqOL5////////ARIpChxGT1NURVJfTk9fU1VDSF9DQVRf",
            "SU5fRk9TVEVSEKfi+f///////wESLQogRk9TVEVSX1JFQUNIX1NFTEZfTUFY",
            "X0ZPU1RFUl9OVU0QpuL5////////ARItCiBGT1NURVJfRlJJRU5EX05PX1NQ",
            "QUNFX1RPX0ZPU1RFUhCl4vn///////8BEi0KIEZPU1RFUl9BTFJFQURZX0NB",
            "VF9JTl9USEVfRlJJRU5EEKTi+f///////wESMwomRk9TVEVSX0VRVUlQX05F",
            "V19DQVJEX01VU1RfVU5FUVVJUF9PTEQQo+L5////////ARIpChxGT1NURVJf",
            "VU5FUVVJUF9OT19FUVVJUF9DQVJEEKLi+f///////wESLAofRk9TVEVSX1NF",
            "VF9DQVRfVE9fRlJJRU5EX0ZBSUxFRBCh4vn///////8BEi0KIEZPU1RFUl9O",
            "T19FUVVJUF9DQVJEX0NBTlRfQUNUSVZFEKDi+f///////wESKAobRk9TVEVS",
            "X0NBUkRfQUxSRUFEWV9BQ1RJVkVEEJ/i+f///////wESLAofRk9TVEVSX01B",
            "WF9GUklFTkRfTlVNX1RPX0ZPU1RFUhCe4vn///////8BEigKG1JBTktfR0VU",
            "X0lURU1TX05VTV9PVkVSX01BWBDI4fn///////8BEicKGkNIQVRfU0VORF9N",
            "U0dfQ09PTElOR19ET1dOELLg+f///////wESKQocQ0hBVF9TRU5EX01TR19C",
            "WVRFU19UT09fTE9ORxCx4Pn///////8BEigKG0NIQVRfQ0FOVF9TRU5EX1dJ",
            "VEhfTk9fRlJFRRCw4Pn///////8BEiMKFkNIQVRfUFVMTF9DT09MSU5HX0RP",
            "V04Qr+D5////////ARIiChVDSEFUX0NIQU5ORUxfQ0FOVF9HRVQQruD5////",
            "////ARIiChVTUEFDRV9DQU5UX0ZPQ1VTX1NFTEYQgOD5////////ARIpChxT",
            "UEFDRV9BTFJFQURZX0ZPQ1VTRURfUExBWUVSEP/f+f///////wESIwoWU1BB",
            "Q0VfTk9UX0ZPQ1VTX1BMQVlFUhD+3/n///////8BEicKGlNQQUNFX05PVF9I",
            "QVZFX0NBVF9QSUNUVVJFEP3f+f///////wESHwoSU1BBQ0VfQUxSRUFEWV9G",
            "VUxMEPzf+f///////wESJQoYU1BBQ0VfQUxSRUFEWV9TRVRfR0VOREVSEPvf",
            "+f///////wESLQogU1BBQ0VfRkFTSElPTl9UQUJMRV9JRF9OT1RfRk9VTkQQ",
            "+t/5////////ARIrCh5TUEFDRV9GQVNISU9OX0dFTkRFUl9OT1RfTUFUQ0gQ",
            "+d/5////////ARIkChdDSEFSR0VfT1JERVJfREFUQV9FTVBUWRCc3/n/////",
            "//8BEiYKGUNIQVJHRV9PUkRFUl9EQVRBX0lOVkFMSUQQm9/5////////ARIr",
            "Ch5DSEFSR0VfT1JERVJfU0lHTkFUVVJFX0lOVkFMSUQQmt/5////////ARIi",
            "ChVDSEFSR0VfT1JERVJfU05fRU1QVFkQmd/5////////ARIoChtDSEFSR0Vf",
            "T1JERVJfU05fQUxSRURZX1VTRUQQmN/5////////ARInChpDSEFSR0VfT1JE",
            "RVJfVkVSSUZZX0ZBSUxFRBCX3/n///////8BEigKG0NIQVJHRV9UQUJMRV9E",
            "QVRBX05PVF9GT1VORBCS3/n///////8BEiwKH0NIQVJHRV9NT05USF9DQVJE",
            "X0FMUkVBRFlfUEFZRUQQkd/5////////ARIhChRDSEFSR0VfRklSU1RfTk9f",
            "RE9ORRCQ3/n///////8BEicKGkNIQVJHRV9GSVJTVF9BTFJFQURZX0FXQVJE",
            "EI/f+f///////wESLAofQ0hBUkdFX0dPT0dMRV9TSUdOQVRVUkVfSU5WQUxJ",
            "RBCO3/n///////8BEjEKJENIQVJHRV9HT09HTEVfUFVSQ0hBU0VfVE9LRU5f",
            "SU5WQUxJRBCN3/n///////8BEi4KIUNIQVJHRV9HT09HTEVfT1JERVJfQUxS",
            "RUFEWV9FWElTVBCM3/n///////8BEi0KIENIQVJHRV9BUFBMRV9QVVJDSEFT",
            "RV9EQVRBX0VNUFRZEIvf+f///////wESLwoiQ0hBUkdFX0FQUExFX1BVUkNI",
            "QVNFX0RBVEFfSU5WQUxJRBCK3/n///////8BEjAKI0NIQVJHRV9BUFBMRV9Q",
            "QVlfTkVXX1JFUVVFU1RfRkFJTEVEEInf+f///////wESLAofQ0hBUkdFX0FQ",
            "UExFX1BBWV9SRVFVRVNUX0ZBSUxFRBCI3/n///////8BEjUKKENIQVJHRV9B",
            "UFBMRV9QQVlfUkVTVUxUX1VOTUFSU0hBTF9GQUlMRUQQh9/5////////ARIs",
            "Ch9DSEFSR0VfQVBQTEVfUEFZX1ZFUklGWV9OT19QQVNTEIbf+f///////wES",
            "LQogQ0hBUkdFX0FQUExFX09SREVSX0FMUkVBRFlfRVhJU1QQhd/5////////",
            "ARIjChZDSEFSR0VfQ0hBTk5FTF9JTlZBTElEEITf+f///////wESJwoaQ0hB",
            "UkdFX1BBWV9SRVBFQVRFRF9WRVJJRlkQg9/5////////ARIsCh9DSEFSR0Vf",
            "Tk9fQUNUSVZJVFlfT05fVEhJU19USU1FEILf+f///////wESKAobQ0hBUkdF",
            "X1BST0RVQ1RfSURfTk9UX01BVENIEIHf+f///////wESIwoWUkFOS19MSVNU",
            "X1RZUEVfSU5WQUxJRBC43vn///////8BEiYKGVNJR05fVEFCTEVfREFUQV9O",
            "T1RfRk9VTkQQ1N35////////ARIfChJTSUdOX0FMUkVBRFlfQVdBUkQQ0935",
            "////////ARIoChtTSUdOX01VU1RfQVdBUkRfSU5fU0VRVUVOQ0UQ0t35////",
            "////ARIdChBTSUdOX0FMTF9BV0FSREVEENHd+f///////wESIAoTU0VWRU5f",
            "REFZU19GSU5JU0hFRBDw3Pn///////8BEh8KElNFVkVOX0RBWVNfQVdBUkRF",
            "RBDv3Pn///////8BKqMBCglSRURfUE9JTlQSDgoKU1RBVEVfTk9ORRAAEggK",
            "BFRBU0sQARILCgdXRUxGQVJFEAISCwoHQ0FNUEFJThADEggKBERSQVcQBBIL",
            "CgdFWFBMT1JFEAUSCAoEQ0hBVBAGEggKBE1BSUwQBxIKCgZGUklFTkQQCBIN",
            "CglHT0xEX0hBTkQQCRIJCgVHVUlMRBAKEggKBFNJR04QCxIHCgNNQVgQFGIG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Msg.ClientMessage.E_ERR), typeof(global::Msg.ClientMessage.RED_POINT), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2S_TEST_COMMAND), global::Msg.ClientMessage.C2S_TEST_COMMAND.Parser, new[]{ "Cmd", "Args" }, null, new[]{ typeof(global::Msg.ClientMessage.C2S_TEST_COMMAND.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SHeartbeat), global::Msg.ClientMessage.C2SHeartbeat.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SHeartbeat.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CHeartbeat), global::Msg.ClientMessage.S2CHeartbeat.Parser, new[]{ "SysTime" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CHeartbeat.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SRegisterRequest), global::Msg.ClientMessage.C2SRegisterRequest.Parser, new[]{ "Account", "Password", "IsGuest" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SRegisterRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CRegisterResponse), global::Msg.ClientMessage.S2CRegisterResponse.Parser, new[]{ "Account", "Password", "IsGuest" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CRegisterResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGuestBindNewAccountRequest), global::Msg.ClientMessage.C2SGuestBindNewAccountRequest.Parser, new[]{ "ServerId", "Account", "Password", "NewAccount", "NewPassword", "NewChannel" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SGuestBindNewAccountRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGuestBindNewAccountResponse), global::Msg.ClientMessage.S2CGuestBindNewAccountResponse.Parser, new[]{ "ServerId", "Account", "NewAccount", "NewPassword", "NewChannel" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGuestBindNewAccountResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SSetLoginPasswordRequest), global::Msg.ClientMessage.C2SSetLoginPasswordRequest.Parser, new[]{ "Account", "Password", "NewPassword" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SSetLoginPasswordRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CSetLoginPasswordResponse), global::Msg.ClientMessage.S2CSetLoginPasswordResponse.Parser, new[]{ "Account", "Password", "NewPassword" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CSetLoginPasswordResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SLoginRequest), global::Msg.ClientMessage.C2SLoginRequest.Parser, new[]{ "Acc", "Password", "Channel" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SLoginRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.ServerInfo), global::Msg.ClientMessage.ServerInfo.Parser, new[]{ "Id", "Name", "IP" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.AccountPlayerInfo), global::Msg.ClientMessage.AccountPlayerInfo.Parser, new[]{ "ServerId", "PlayerName", "PlayerLevel", "PlayerHead" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CLoginResponse), global::Msg.ClientMessage.S2CLoginResponse.Parser, new[]{ "Acc", "Token", "Channel", "PlayerInfo", "GameIP", "BoundAccount" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CLoginResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2COtherPlaceLogin), global::Msg.ClientMessage.S2COtherPlaceLogin.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.S2COtherPlaceLogin.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SEnterGameRequest), global::Msg.ClientMessage.C2SEnterGameRequest.Parser, new[]{ "Acc" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SEnterGameRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CEnterGameResponse), global::Msg.ClientMessage.S2CEnterGameResponse.Parser, new[]{ "Acc", "PlayerId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CEnterGameResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CEnterGameCompleteNotify), global::Msg.ClientMessage.S2CEnterGameCompleteNotify.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.S2CEnterGameCompleteNotify.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SLeaveGameRequest), global::Msg.ClientMessage.C2SLeaveGameRequest.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SLeaveGameRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CLeaveGameResponse), global::Msg.ClientMessage.S2CLeaveGameResponse.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.S2CLeaveGameResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SPlayerInfoRequest), global::Msg.ClientMessage.C2SPlayerInfoRequest.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SPlayerInfoRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CPlayerInfoResponse), global::Msg.ClientMessage.S2CPlayerInfoResponse.Parser, new[]{ "Level", "Exp", "Gold", "Diamond", "Head", "VipLevel", "Name", "SysTime", "CurMaxStage", "CurUnlockMaxStage", "CharmVal", "Star", "Zan", "CatFood", "Spirit", "FriendPoints", "SoulStone", "CharmMetal", "HistoricalMaxStar", "ChangeNameNum", "ChangeNameFreeNum", "ChangeNameCostDiamond", "NextStaminaRemainSecs" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CPlayerInfoResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SPlayerChangeNameRequest), global::Msg.ClientMessage.C2SPlayerChangeNameRequest.Parser, new[]{ "NewName" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SPlayerChangeNameRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CPlayerChangeNameResponse), global::Msg.ClientMessage.S2CPlayerChangeNameResponse.Parser, new[]{ "NewName" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CPlayerChangeNameResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SPlayerChangeHeadRequest), global::Msg.ClientMessage.C2SPlayerChangeHeadRequest.Parser, new[]{ "NewHead" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SPlayerChangeHeadRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CPlayerChangeHeadResponse), global::Msg.ClientMessage.S2CPlayerChangeHeadResponse.Parser, new[]{ "NewHead" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CPlayerChangeHeadResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SReconnectRequest), global::Msg.ClientMessage.C2SReconnectRequest.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SReconnectRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CReconnectResponse), global::Msg.ClientMessage.S2CReconnectResponse.Parser, new[]{ "NewToken" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CReconnectResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2S_ONE_MSG), global::Msg.ClientMessage.C2S_ONE_MSG.Parser, new[]{ "MsgCode", "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2S_MSG_DATA), global::Msg.ClientMessage.C2S_MSG_DATA.Parser, new[]{ "Token", "MsgList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2C_ONE_MSG), global::Msg.ClientMessage.S2C_ONE_MSG.Parser, new[]{ "MsgCode", "ErrorCode", "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2C_MSG_DATA), global::Msg.ClientMessage.S2C_MSG_DATA.Parser, new[]{ "MsgList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.IdNum), global::Msg.ClientMessage.IdNum.Parser, new[]{ "Id", "Num" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.ItemInfo), global::Msg.ClientMessage.ItemInfo.Parser, new[]{ "ItemCfgId", "ItemNum", "RemainSeconds" }, null, new[]{ typeof(global::Msg.ClientMessage.ItemInfo.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.CatInfo), global::Msg.ClientMessage.CatInfo.Parser, new[]{ "Id", "CatCfgId", "Exp", "Level", "Star", "Nick", "SkillLevel", "Locked", "CoinAbility", "ExploreAbility", "MatchAbility", "State" }, null, new[]{ typeof(global::Msg.ClientMessage.CatInfo.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.BuildingInfo), global::Msg.ClientMessage.BuildingInfo.Parser, new[]{ "Id", "CfgId", "X", "Y", "Dir" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.DepotBuildingInfo), global::Msg.ClientMessage.DepotBuildingInfo.Parser, new[]{ "CfgId", "Num" }, null, new[]{ typeof(global::Msg.ClientMessage.DepotBuildingInfo.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.ResourceInfo), global::Msg.ClientMessage.ResourceInfo.Parser, new[]{ "ResourceType", "ResourceValue" }, null, new[]{ typeof(global::Msg.ClientMessage.ResourceInfo.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.AreaInfo), global::Msg.ClientMessage.AreaInfo.Parser, new[]{ "CfgId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.StageInfo), global::Msg.ClientMessage.StageInfo.Parser, new[]{ "StageId", "Star", "TopScore" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CItemsInfoUpdate), global::Msg.ClientMessage.S2CItemsInfoUpdate.Parser, new[]{ "Items" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CItemsInfoUpdate.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CCatsInfoUpdate), global::Msg.ClientMessage.S2CCatsInfoUpdate.Parser, new[]{ "AddCats", "UpdateCats", "RemoveCats" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CCatsInfoUpdate.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CBuildingsInfoUpdate), global::Msg.ClientMessage.S2CBuildingsInfoUpdate.Parser, new[]{ "AddBuildings", "UpdateBuildings", "RemoveBuildings" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CBuildingsInfoUpdate.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CDepotBuildingInfoUpdate), global::Msg.ClientMessage.S2CDepotBuildingInfoUpdate.Parser, new[]{ "Buildings" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CDepotBuildingInfoUpdate.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetInfo), global::Msg.ClientMessage.C2SGetInfo.Parser, new[]{ "Base", "Item", "Cat", "Building", "Area", "Stage", "DepotBuilding", "Formula", "Guide", "CatHouse", "WorkShop", "Farm" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetInfo.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetItemInfos), global::Msg.ClientMessage.C2SGetItemInfos.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetItemInfos.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGetItemInfos), global::Msg.ClientMessage.S2CGetItemInfos.Parser, new[]{ "Items" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGetItemInfos.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetBuildingInfos), global::Msg.ClientMessage.C2SGetBuildingInfos.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetBuildingInfos.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGetBuildingInfos), global::Msg.ClientMessage.S2CGetBuildingInfos.Parser, new[]{ "Builds" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGetBuildingInfos.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetDepotBuildingInfos), global::Msg.ClientMessage.C2SGetDepotBuildingInfos.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetDepotBuildingInfos.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGetDepotBuildingInfos), global::Msg.ClientMessage.S2CGetDepotBuildingInfos.Parser, new[]{ "DepotBuilds" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGetDepotBuildingInfos.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetCatInfos), global::Msg.ClientMessage.C2SGetCatInfos.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetCatInfos.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGetCatInfos), global::Msg.ClientMessage.S2CGetCatInfos.Parser, new[]{ "Cats" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGetCatInfos.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetAreasInfos), global::Msg.ClientMessage.C2SGetAreasInfos.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetAreasInfos.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGetAreasInfos), global::Msg.ClientMessage.S2CGetAreasInfos.Parser, new[]{ "Areas" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGetAreasInfos.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetStageInfos), global::Msg.ClientMessage.C2SGetStageInfos.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetStageInfos.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGetStageInfos), global::Msg.ClientMessage.S2CGetStageInfos.Parser, new[]{ "Stages", "CurMaxStage", "CurUnlockMaxStage", "UnlockLeftSec", "CurUnlockStageId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGetStageInfos.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetCoin), global::Msg.ClientMessage.C2SGetCoin.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetCoin.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGetCoin), global::Msg.ClientMessage.S2CGetCoin.Parser, new[]{ "Coin" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGetCoin.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetDiamond), global::Msg.ClientMessage.C2SGetDiamond.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetDiamond.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGetDiamond), global::Msg.ClientMessage.S2CGetDiamond.Parser, new[]{ "Diamond" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGetDiamond.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetCharmVal), global::Msg.ClientMessage.C2SGetCharmVal.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetCharmVal.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGetCharmVal), global::Msg.ClientMessage.S2CGetCharmVal.Parser, new[]{ "CharmVal" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGetCharmVal.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetZan), global::Msg.ClientMessage.C2SGetZan.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetZan.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGetZan), global::Msg.ClientMessage.S2CGetZan.Parser, new[]{ "Zan" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGetZan.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetCatFood), global::Msg.ClientMessage.C2SGetCatFood.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetCatFood.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGetCatFood), global::Msg.ClientMessage.S2CGetCatFood.Parser, new[]{ "CatFood" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGetCatFood.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetSpirit), global::Msg.ClientMessage.C2SGetSpirit.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetSpirit.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGetSpirit), global::Msg.ClientMessage.S2CGetSpirit.Parser, new[]{ "Spirit" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGetSpirit.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SStagePass), global::Msg.ClientMessage.C2SStagePass.Parser, new[]{ "StageId", "Stars", "Score", "Items", "Result" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SStagePass.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.PlayerStageInfo), global::Msg.ClientMessage.PlayerStageInfo.Parser, new[]{ "PlayerId", "Score", "Name", "Lvl", "Head" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CStagePass), global::Msg.ClientMessage.S2CStagePass.Parser, new[]{ "StageId", "Stars", "Score", "TopScore", "UseItems", "GetCoin", "GetItems", "FriendItems", "GetCats", "GetBuildings", "Result", "GetItemsFirst", "GetItems3Star", "CatExtraAddCoin" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CStagePass.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SChapterUnlock), global::Msg.ClientMessage.C2SChapterUnlock.Parser, new[]{ "UnLockType", "ChapterId", "FriendIds" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SChapterUnlock.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CChapterUnlock), global::Msg.ClientMessage.S2CChapterUnlock.Parser, new[]{ "ChapterId", "MaxUnlockStageId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CChapterUnlock.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetCurHelpReqPIds), global::Msg.ClientMessage.C2SGetCurHelpReqPIds.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetCurHelpReqPIds.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CRetCurHelpReqPIds), global::Msg.ClientMessage.S2CRetCurHelpReqPIds.Parser, new[]{ "PIds" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CRetCurHelpReqPIds.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CRetDayHelpUnlockCount), global::Msg.ClientMessage.S2CRetDayHelpUnlockCount.Parser, new[]{ "HelpOtherNum" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CRetDayHelpUnlockCount.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SStageBegin), global::Msg.ClientMessage.C2SStageBegin.Parser, new[]{ "StageId", "CatId", "ItemIds" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SStageBegin.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CStageBeginResult), global::Msg.ClientMessage.S2CStageBeginResult.Parser, new[]{ "StageId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CStageBeginResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2COpenChest), global::Msg.ClientMessage.S2COpenChest.Parser, new[]{ "ChestId", "CurCoins", "CurDiamond", "NewItems", "CostDiamond" }, null, new[]{ typeof(global::Msg.ClientMessage.S2COpenChest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SBuyChest), global::Msg.ClientMessage.C2SBuyChest.Parser, new[]{ "ChestId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SBuyChest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CBuyChest), global::Msg.ClientMessage.S2CBuyChest.Parser, new[]{ "ChestOpen" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CBuyChest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SUseItem), global::Msg.ClientMessage.C2SUseItem.Parser, new[]{ "ItemCfgId", "ItemNum" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SUseItem.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CUseItem), global::Msg.ClientMessage.S2CUseItem.Parser, new[]{ "CostItem" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CUseItem.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SSellItem), global::Msg.ClientMessage.C2SSellItem.Parser, new[]{ "ItemId", "ItemNum" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SSellItem.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CSellItemResult), global::Msg.ClientMessage.S2CSellItemResult.Parser, new[]{ "ItemId", "ItemNum" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CSellItemResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SMailSendRequest), global::Msg.ClientMessage.C2SMailSendRequest.Parser, new[]{ "ReceiverId", "MailType", "MailSubtype", "MailTitle", "MailContent", "AttachedItems" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SMailSendRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CMailSendResponse), global::Msg.ClientMessage.S2CMailSendResponse.Parser, new[]{ "MailId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CMailSendResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SMailListRequest), global::Msg.ClientMessage.C2SMailListRequest.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SMailListRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.MailBasicData), global::Msg.ClientMessage.MailBasicData.Parser, new[]{ "Id", "Type", "Subtype", "Title", "SenderName", "SenderId", "SendTime", "IsRead", "IsGetAttached", "HasAttached", "Value", "LeftSecs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CMailListResponse), global::Msg.ClientMessage.S2CMailListResponse.Parser, new[]{ "Mails" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CMailListResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SMailDetailRequest), global::Msg.ClientMessage.C2SMailDetailRequest.Parser, new[]{ "Ids" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SMailDetailRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.MailDetail), global::Msg.ClientMessage.MailDetail.Parser, new[]{ "Id", "Content", "AttachedItems" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CMailDetailResponse), global::Msg.ClientMessage.S2CMailDetailResponse.Parser, new[]{ "Mails" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CMailDetailResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SMailGetAttachedItemsRequest), global::Msg.ClientMessage.C2SMailGetAttachedItemsRequest.Parser, new[]{ "MailIds" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SMailGetAttachedItemsRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CMailGetAttachedItemsResponse), global::Msg.ClientMessage.S2CMailGetAttachedItemsResponse.Parser, new[]{ "MailIds", "AttachedItems" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CMailGetAttachedItemsResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SMailDeleteRequest), global::Msg.ClientMessage.C2SMailDeleteRequest.Parser, new[]{ "MailIds" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SMailDeleteRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CMailDeleteResponse), global::Msg.ClientMessage.S2CMailDeleteResponse.Parser, new[]{ "MailIds" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CMailDeleteResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CMailsNewNotify), global::Msg.ClientMessage.S2CMailsNewNotify.Parser, new[]{ "Mails" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CMailsNewNotify.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SSaveOptions), global::Msg.ClientMessage.C2SSaveOptions.Parser, new[]{ "Values" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SSaveOptions.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetOptions), global::Msg.ClientMessage.C2SGetOptions.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetOptions.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CRetOptions), global::Msg.ClientMessage.S2CRetOptions.Parser, new[]{ "Values" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CRetOptions.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.TaskData), global::Msg.ClientMessage.TaskData.Parser, new[]{ "Id", "Value", "State" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2STaskDataRequest), global::Msg.ClientMessage.C2STaskDataRequest.Parser, new[]{ "TaskType" }, null, new[]{ typeof(global::Msg.ClientMessage.C2STaskDataRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CTaskDataResponse), global::Msg.ClientMessage.S2CTaskDataResponse.Parser, new[]{ "TaskType", "TaskList", "DailyTaskRefreshRemainSeconds" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CTaskDataResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CTaskValueNotify), global::Msg.ClientMessage.S2CTaskValueNotify.Parser, new[]{ "Data" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CTaskValueNotify.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2STaskRewardRequest), global::Msg.ClientMessage.C2STaskRewardRequest.Parser, new[]{ "TaskId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2STaskRewardRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CTaskRewardResponse), global::Msg.ClientMessage.S2CTaskRewardResponse.Parser, new[]{ "TaskId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CTaskRewardResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SChgName), global::Msg.ClientMessage.C2SChgName.Parser, new[]{ "Name" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SChgName.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CChgName), global::Msg.ClientMessage.S2CChgName.Parser, new[]{ "Name", "ChgNameCount" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CChgName.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SChangeHead), global::Msg.ClientMessage.C2SChangeHead.Parser, new[]{ "NewHead" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SChangeHead.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CChangeHead), global::Msg.ClientMessage.S2CChangeHead.Parser, new[]{ "NewHead" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CChangeHead.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CSyncSignInfo), global::Msg.ClientMessage.S2CSyncSignInfo.Parser, new[]{ "CurSignSum", "CurSignDays", "CurGetSignSumRewards" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CSyncSignInfo.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SDaySign), global::Msg.ClientMessage.C2SDaySign.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SDaySign.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CDaySign), global::Msg.ClientMessage.S2CDaySign.Parser, new[]{ "SignDay", "CurCoin", "CurDiamond", "CurCardToken1", "CurCardToken2", "CurCardToken3", "CurCardToken4", "ChestOpen", "CardCfgId", "CurCardNum" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CDaySign.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetDaySignSumReward), global::Msg.ClientMessage.C2SGetDaySignSumReward.Parser, new[]{ "SumNum" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetDaySignSumReward.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CRetDaySignSumReward), global::Msg.ClientMessage.S2CRetDaySignSumReward.Parser, new[]{ "Rewards", "SumNum" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CRetDaySignSumReward.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SSetBuilding), global::Msg.ClientMessage.C2SSetBuilding.Parser, new[]{ "X", "Y", "BuildingCfgId", "Dir", "IfBuy" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SSetBuilding.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CSetBuilding), global::Msg.ClientMessage.S2CSetBuilding.Parser, new[]{ "X", "Y", "BuildingCfgId", "Dir" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CSetBuilding.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SMoveBuilding), global::Msg.ClientMessage.C2SMoveBuilding.Parser, new[]{ "BuildingId", "X", "Y", "Dir" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SMoveBuilding.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SChgBuildingDir), global::Msg.ClientMessage.C2SChgBuildingDir.Parser, new[]{ "BuildingId", "X", "Y" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SChgBuildingDir.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetBackBuilding), global::Msg.ClientMessage.C2SGetBackBuilding.Parser, new[]{ "BuildingId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetBackBuilding.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGetBackBuilding), global::Msg.ClientMessage.S2CGetBackBuilding.Parser, new[]{ "BuildingId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGetBackBuilding.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SSellBuilding), global::Msg.ClientMessage.C2SSellBuilding.Parser, new[]{ "BuildingId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SSellBuilding.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CSellBuilding), global::Msg.ClientMessage.S2CSellBuilding.Parser, new[]{ "BuildingId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CSellBuilding.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SRemoveBlock), global::Msg.ClientMessage.C2SRemoveBlock.Parser, new[]{ "BuildingId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SRemoveBlock.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CRemoveBlock), global::Msg.ClientMessage.S2CRemoveBlock.Parser, new[]{ "BuildingId", "Items", "Cats", "DepotBuildings" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CRemoveBlock.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SOpenMapChest), global::Msg.ClientMessage.C2SOpenMapChest.Parser, new[]{ "BuildingId", "FriendId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SOpenMapChest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2COpenMapChest), global::Msg.ClientMessage.S2COpenMapChest.Parser, new[]{ "BuildingId", "FriendId", "Items", "Cats", "DepotBuildings" }, null, new[]{ typeof(global::Msg.ClientMessage.S2COpenMapChest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SUnlockArea), global::Msg.ClientMessage.C2SUnlockArea.Parser, new[]{ "AreaId", "IfQuick" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SUnlockArea.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CUnlockArea), global::Msg.ClientMessage.S2CUnlockArea.Parser, new[]{ "AreaId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CUnlockArea.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SSurfaceDataRequest), global::Msg.ClientMessage.C2SSurfaceDataRequest.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SSurfaceDataRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CSurfaceDataResponse), global::Msg.ClientMessage.S2CSurfaceDataResponse.Parser, new[]{ "Data" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CSurfaceDataResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SSurfaceUpdateRequest), global::Msg.ClientMessage.C2SSurfaceUpdateRequest.Parser, new[]{ "UpdateData", "RemoveData" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SSurfaceUpdateRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CSurfaceUpdateResponse), global::Msg.ClientMessage.S2CSurfaceUpdateResponse.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.S2CSurfaceUpdateResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SDraw), global::Msg.ClientMessage.C2SDraw.Parser, new[]{ "DrawType", "DrawCount" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SDraw.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CDrawResult), global::Msg.ClientMessage.S2CDrawResult.Parser, new[]{ "Cats", "Items", "Buildings", "IsFirst" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CDrawResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SComposeCat), global::Msg.ClientMessage.C2SComposeCat.Parser, new[]{ "CatConfigId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SComposeCat.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CComposeCatResult), global::Msg.ClientMessage.S2CComposeCatResult.Parser, new[]{ "Cat", "UsedFragment" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CComposeCatResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SItemResource), global::Msg.ClientMessage.C2SItemResource.Parser, new[]{ "ResourceIds" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SItemResource.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CItemResourceValue), global::Msg.ClientMessage.S2CItemResourceValue.Parser, new[]{ "ResourceId", "ResourceValue" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CItemResourceValue.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CItemResourceResult), global::Msg.ClientMessage.S2CItemResourceResult.Parser, new[]{ "Items" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CItemResourceResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SShopItems), global::Msg.ClientMessage.C2SShopItems.Parser, new[]{ "ShopId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SShopItems.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CShopItem), global::Msg.ClientMessage.S2CShopItem.Parser, new[]{ "ItemId", "LeftNum" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CShopItem.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CShopItemsResult), global::Msg.ClientMessage.S2CShopItemsResult.Parser, new[]{ "ShopId", "Items", "RemainSeconds" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CShopItemsResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SBuyShopItem), global::Msg.ClientMessage.C2SBuyShopItem.Parser, new[]{ "ItemId", "ItemNum" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SBuyShopItem.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CBuyShopItemResult), global::Msg.ClientMessage.S2CBuyShopItemResult.Parser, new[]{ "ShopId", "ItemId", "ItemNum", "AddItem", "CostRes" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CBuyShopItemResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CShopNeedRefreshNotify), global::Msg.ClientMessage.S2CShopNeedRefreshNotify.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.S2CShopNeedRefreshNotify.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SCatFeed), global::Msg.ClientMessage.C2SCatFeed.Parser, new[]{ "CatId", "CatFood" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SCatFeed.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CCatFeedResult), global::Msg.ClientMessage.S2CCatFeedResult.Parser, new[]{ "CatId", "CatLevel", "CatExp", "IsCritical" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CCatFeedResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SCatUpgradeStar), global::Msg.ClientMessage.C2SCatUpgradeStar.Parser, new[]{ "CatId", "CostCatIds" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SCatUpgradeStar.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CCatUpgradeStarResult), global::Msg.ClientMessage.S2CCatUpgradeStarResult.Parser, new[]{ "CatId", "CatStar" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CCatUpgradeStarResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SCatSkillLevelUp), global::Msg.ClientMessage.C2SCatSkillLevelUp.Parser, new[]{ "CatId", "CostCatIds" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SCatSkillLevelUp.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CCatSkillLevelUpResult), global::Msg.ClientMessage.S2CCatSkillLevelUpResult.Parser, new[]{ "CatId", "SkillLevel" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CCatSkillLevelUpResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SCatRenameNick), global::Msg.ClientMessage.C2SCatRenameNick.Parser, new[]{ "CatId", "NewNick" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SCatRenameNick.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CCatRenameNickResult), global::Msg.ClientMessage.S2CCatRenameNickResult.Parser, new[]{ "CatId", "NewNick" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CCatRenameNickResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SCatLock), global::Msg.ClientMessage.C2SCatLock.Parser, new[]{ "CatId", "IsLock" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SCatLock.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CCatLockResult), global::Msg.ClientMessage.S2CCatLockResult.Parser, new[]{ "CatId", "Locked" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CCatLockResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SCatDecompose), global::Msg.ClientMessage.C2SCatDecompose.Parser, new[]{ "CatId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SCatDecompose.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CCatDecomposeResult), global::Msg.ClientMessage.S2CCatDecomposeResult.Parser, new[]{ "CatId", "GetSoulStone" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CCatDecomposeResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetMakingFormulaBuildings), global::Msg.ClientMessage.C2SGetMakingFormulaBuildings.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetMakingFormulaBuildings.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.MakingFormulaBuildingInfo), global::Msg.ClientMessage.MakingFormulaBuildingInfo.Parser, new[]{ "SlotId", "FormulaId", "RemainSeconds" }, null, new[]{ typeof(global::Msg.ClientMessage.MakingFormulaBuildingInfo.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGetMakingFormulaBuildingsResult), global::Msg.ClientMessage.S2CGetMakingFormulaBuildingsResult.Parser, new[]{ "Buildings", "MakedBuildings" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGetMakingFormulaBuildingsResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SExchangeBuildingFormula), global::Msg.ClientMessage.C2SExchangeBuildingFormula.Parser, new[]{ "FormulaId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SExchangeBuildingFormula.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CExchangeBuildingFormulaResult), global::Msg.ClientMessage.S2CExchangeBuildingFormulaResult.Parser, new[]{ "FormulaId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CExchangeBuildingFormulaResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetFormulas), global::Msg.ClientMessage.C2SGetFormulas.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetFormulas.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGetFormulasResult), global::Msg.ClientMessage.S2CGetFormulasResult.Parser, new[]{ "Formulas" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGetFormulasResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SMakeFormulaBuilding), global::Msg.ClientMessage.C2SMakeFormulaBuilding.Parser, new[]{ "FormulaId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SMakeFormulaBuilding.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CMakeFormulaBuildingResult), global::Msg.ClientMessage.S2CMakeFormulaBuildingResult.Parser, new[]{ "FormulaId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CMakeFormulaBuildingResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SBuyMakeBuildingSlot), global::Msg.ClientMessage.C2SBuyMakeBuildingSlot.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SBuyMakeBuildingSlot.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CBuyMakeBuildingSlotResult), global::Msg.ClientMessage.S2CBuyMakeBuildingSlotResult.Parser, new[]{ "SlotId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CBuyMakeBuildingSlotResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SSpeedupMakeBuilding), global::Msg.ClientMessage.C2SSpeedupMakeBuilding.Parser, new[]{ "SlotId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SSpeedupMakeBuilding.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CSpeedupMakeBuildingResult), global::Msg.ClientMessage.S2CSpeedupMakeBuildingResult.Parser, new[]{ "SlotId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CSpeedupMakeBuildingResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetCompletedFormulaBuilding), global::Msg.ClientMessage.C2SGetCompletedFormulaBuilding.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetCompletedFormulaBuilding.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGetCompletedFormulaBuildingResult), global::Msg.ClientMessage.S2CGetCompletedFormulaBuildingResult.Parser, new[]{ "DepotBuildingId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGetCompletedFormulaBuildingResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SCancelMakingFormulaBuilding), global::Msg.ClientMessage.C2SCancelMakingFormulaBuilding.Parser, new[]{ "SlotId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SCancelMakingFormulaBuilding.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CCancelMakingFormulaBuildingResult), global::Msg.ClientMessage.S2CCancelMakingFormulaBuildingResult.Parser, new[]{ "SlotId", "ReturnMaterials" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CCancelMakingFormulaBuildingResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetCrops), global::Msg.ClientMessage.C2SGetCrops.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetCrops.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.CropInfo), global::Msg.ClientMessage.CropInfo.Parser, new[]{ "BuildingId", "CropId", "RemainSeconds" }, null, new[]{ typeof(global::Msg.ClientMessage.CropInfo.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGetCropsResult), global::Msg.ClientMessage.S2CGetCropsResult.Parser, new[]{ "Crops" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGetCropsResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SPlantCrop), global::Msg.ClientMessage.C2SPlantCrop.Parser, new[]{ "CropId", "DestBuildingId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SPlantCrop.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CPlantCropResult), global::Msg.ClientMessage.S2CPlantCropResult.Parser, new[]{ "CropId", "DestBuildingId", "RemainSeconds" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CPlantCropResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SCropSpeedup), global::Msg.ClientMessage.C2SCropSpeedup.Parser, new[]{ "FarmBuildingId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SCropSpeedup.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CCropSpeedupResult), global::Msg.ClientMessage.S2CCropSpeedupResult.Parser, new[]{ "FarmBuildingId", "CropId", "CostDiamond" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CCropSpeedupResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SHarvestCrop), global::Msg.ClientMessage.C2SHarvestCrop.Parser, new[]{ "FarmBuildingId", "IsSpeedup" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SHarvestCrop.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CHarvestCropResult), global::Msg.ClientMessage.S2CHarvestCropResult.Parser, new[]{ "FarmBuildingId", "CropId", "CatFood", "IsSpeedup", "AddExp" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CHarvestCropResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SHarvestCrops), global::Msg.ClientMessage.C2SHarvestCrops.Parser, new[]{ "BuildingIds" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SHarvestCrops.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CHarvestCropsResult), global::Msg.ClientMessage.S2CHarvestCropsResult.Parser, new[]{ "BuildingIds", "CatFood" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CHarvestCropsResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetAllExpedition), global::Msg.ClientMessage.C2SGetAllExpedition.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetAllExpedition.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.ExpeditonEvent), global::Msg.ClientMessage.ExpeditonEvent.Parser, new[]{ "EventId", "Sec", "DropIdNums" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.ExpeditonCondition), global::Msg.ClientMessage.ExpeditonCondition.Parser, new[]{ "ConditionType", "ConVals" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.ExpeditionItem), global::Msg.ClientMessage.ExpeditionItem.Parser, new[]{ "Id", "TaskId", "ExpeditionLeftSec", "InCatIds", "Result", "TaskLeftSec", "CurState", "Events", "Conditions", "ExpeditionPassSec" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CRetAllExpedition), global::Msg.ClientMessage.S2CRetAllExpedition.Parser, new[]{ "Tasks", "CurChgCount", "CurChgCost" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CRetAllExpedition.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SChgExpedition), global::Msg.ClientMessage.C2SChgExpedition.Parser, new[]{ "Id" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SChgExpedition.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SStartExpedition), global::Msg.ClientMessage.C2SStartExpedition.Parser, new[]{ "Id", "CatIds" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SStartExpedition.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CStartExpedition), global::Msg.ClientMessage.S2CStartExpedition.Parser, new[]{ "Id", "TaskId", "CatIds", "ExpeditionLeftSec", "Result", "TaskLeftSec", "CurState", "Events" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CStartExpedition.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SStopExpedition), global::Msg.ClientMessage.C2SStopExpedition.Parser, new[]{ "Id" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SStopExpedition.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetExpeditionReward), global::Msg.ClientMessage.C2SGetExpeditionReward.Parser, new[]{ "Id" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetExpeditionReward.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGetExpeditionReward), global::Msg.ClientMessage.S2CGetExpeditionReward.Parser, new[]{ "Id", "Rewards", "Specials" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGetExpeditionReward.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SChgExpeditionResult), global::Msg.ClientMessage.C2SChgExpeditionResult.Parser, new[]{ "Id" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SChgExpeditionResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetCatHousesInfo), global::Msg.ClientMessage.C2SGetCatHousesInfo.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetCatHousesInfo.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.CatHouseInfo), global::Msg.ClientMessage.CatHouseInfo.Parser, new[]{ "CatHouseId", "Level", "CatIds", "Gold", "NextLevelRemainSeconds", "BuildingConfigId", "IsDone", "ProduceGoldRemainSeconds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGetCatHousesInfoResult), global::Msg.ClientMessage.S2CGetCatHousesInfoResult.Parser, new[]{ "Houses" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGetCatHousesInfoResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetCatHouseInfo), global::Msg.ClientMessage.C2SGetCatHouseInfo.Parser, new[]{ "CatHouseId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetCatHouseInfo.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGetCatHouseInfoResult), global::Msg.ClientMessage.S2CGetCatHouseInfoResult.Parser, new[]{ "House" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGetCatHouseInfoResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SCatHouseAddCat), global::Msg.ClientMessage.C2SCatHouseAddCat.Parser, new[]{ "CatHouseId", "CatId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SCatHouseAddCat.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CCatHouseAddCatResult), global::Msg.ClientMessage.S2CCatHouseAddCatResult.Parser, new[]{ "CatHouseId", "CatId", "Gold" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CCatHouseAddCatResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SCatHouseRemoveCat), global::Msg.ClientMessage.C2SCatHouseRemoveCat.Parser, new[]{ "CatHouseId", "CatId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SCatHouseRemoveCat.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CCatHouseRemoveCatResult), global::Msg.ClientMessage.S2CCatHouseRemoveCatResult.Parser, new[]{ "CatHouseId", "CatId", "Gold" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CCatHouseRemoveCatResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SCatHouseProduceGold), global::Msg.ClientMessage.C2SCatHouseProduceGold.Parser, new[]{ "CatHouseId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SCatHouseProduceGold.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CCatHouseProduceGoldResult), global::Msg.ClientMessage.S2CCatHouseProduceGoldResult.Parser, new[]{ "CatHouseId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CCatHouseProduceGoldResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SCatHouseGetGold), global::Msg.ClientMessage.C2SCatHouseGetGold.Parser, new[]{ "CatHouseId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SCatHouseGetGold.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CCatHouseGetGoldResult), global::Msg.ClientMessage.S2CCatHouseGetGoldResult.Parser, new[]{ "CatHouseId", "Gold" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CCatHouseGetGoldResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SCatHousesGetGold), global::Msg.ClientMessage.C2SCatHousesGetGold.Parser, new[]{ "CatHouseIds" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SCatHousesGetGold.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CCatHousesGetGoldResult), global::Msg.ClientMessage.S2CCatHousesGetGoldResult.Parser, new[]{ "CatHouseIds", "Gold" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CCatHousesGetGoldResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SCatHouseStartLevelup), global::Msg.ClientMessage.C2SCatHouseStartLevelup.Parser, new[]{ "CatHouseId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SCatHouseStartLevelup.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CCatHouseStartLevelupResult), global::Msg.ClientMessage.S2CCatHouseStartLevelupResult.Parser, new[]{ "CatHouseId", "RemainSeconds" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CCatHouseStartLevelupResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SCatHouseSpeedLevelup), global::Msg.ClientMessage.C2SCatHouseSpeedLevelup.Parser, new[]{ "CatHouseId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SCatHouseSpeedLevelup.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CCatHouseSpeedLevelupResult), global::Msg.ClientMessage.S2CCatHouseSpeedLevelupResult.Parser, new[]{ "CatHouseId", "CostDiamond" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CCatHouseSpeedLevelupResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SSellCatHouse), global::Msg.ClientMessage.C2SSellCatHouse.Parser, new[]{ "CatHouseId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SSellCatHouse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CSellCatHouseResult), global::Msg.ClientMessage.S2CSellCatHouseResult.Parser, new[]{ "CatHouseId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CSellCatHouseResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SCatHouseSetDone), global::Msg.ClientMessage.C2SCatHouseSetDone.Parser, new[]{ "CatHouseId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SCatHouseSetDone.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CCatHouseSetDoneResult), global::Msg.ClientMessage.S2CCatHouseSetDoneResult.Parser, new[]{ "CatHouseId", "IsDone" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CCatHouseSetDoneResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.FriendInfo), global::Msg.ClientMessage.FriendInfo.Parser, new[]{ "PlayerId", "Name", "Head", "Level", "VipLevel", "LastLogin", "FriendPoints", "LeftGiveSeconds", "UnreadMessageNum", "Zan", "IsZan", "IsOnline" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SFriendSearch), global::Msg.ClientMessage.C2SFriendSearch.Parser, new[]{ "Key" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SFriendSearch.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SFriendSearchById), global::Msg.ClientMessage.C2SFriendSearchById.Parser, new[]{ "PlayerId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SFriendSearchById.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CFriendSearchResult), global::Msg.ClientMessage.S2CFriendSearchResult.Parser, new[]{ "Result" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CFriendSearchResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetFriendList), global::Msg.ClientMessage.C2SGetFriendList.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetFriendList.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.FriendReq), global::Msg.ClientMessage.FriendReq.Parser, new[]{ "PlayerId", "Name", "Score", "Head", "Level" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CRetFriendListResult), global::Msg.ClientMessage.S2CRetFriendListResult.Parser, new[]{ "FriendList", "Reqs", "LeftGivePointsNum" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CRetFriendListResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CFriendStateNotify), global::Msg.ClientMessage.S2CFriendStateNotify.Parser, new[]{ "StateType", "Info" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CFriendStateNotify.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CFriendReqNotify), global::Msg.ClientMessage.S2CFriendReqNotify.Parser, new[]{ "Req" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CFriendReqNotify.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SAddFriendByPId), global::Msg.ClientMessage.C2SAddFriendByPId.Parser, new[]{ "PlayerId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SAddFriendByPId.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SAddFriendByName), global::Msg.ClientMessage.C2SAddFriendByName.Parser, new[]{ "Name" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SAddFriendByName.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CAddFriendResult), global::Msg.ClientMessage.S2CAddFriendResult.Parser, new[]{ "PlayerId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CAddFriendResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SAgreeFriend), global::Msg.ClientMessage.C2SAgreeFriend.Parser, new[]{ "PlayerId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SAgreeFriend.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CAgreeFriendResult), global::Msg.ClientMessage.S2CAgreeFriendResult.Parser, new[]{ "PlayerId", "Name", "Score", "Level", "Head", "VipLevel", "LastLogin" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CAgreeFriendResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SRefuseFriend), global::Msg.ClientMessage.C2SRefuseFriend.Parser, new[]{ "PlayerId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SRefuseFriend.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CRefuseFriendResult), global::Msg.ClientMessage.S2CRefuseFriendResult.Parser, new[]{ "Name", "PlayerId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CRefuseFriendResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SRemoveFriend), global::Msg.ClientMessage.C2SRemoveFriend.Parser, new[]{ "PlayerId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SRemoveFriend.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CRemoveFriendResult), global::Msg.ClientMessage.S2CRemoveFriendResult.Parser, new[]{ "PlayerId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CRemoveFriendResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGiveFriendPoints), global::Msg.ClientMessage.C2SGiveFriendPoints.Parser, new[]{ "FriendId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SGiveFriendPoints.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.FriendPointsResult), global::Msg.ClientMessage.FriendPointsResult.Parser, new[]{ "FriendId", "Points", "Error", "RemainSeconds", "IsTodayGive", "BackPoints" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGiveFriendPointsResult), global::Msg.ClientMessage.S2CGiveFriendPointsResult.Parser, new[]{ "PointsData", "LeftGivePointsNum" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGiveFriendPointsResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetFriendPoints), global::Msg.ClientMessage.C2SGetFriendPoints.Parser, new[]{ "FriendId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetFriendPoints.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.FriendPoints), global::Msg.ClientMessage.FriendPoints.Parser, new[]{ "FriendId", "Points" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGetFriendPointsResult), global::Msg.ClientMessage.S2CGetFriendPointsResult.Parser, new[]{ "PointsData" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGetFriendPointsResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SFriendChat), global::Msg.ClientMessage.C2SFriendChat.Parser, new[]{ "PlayerId", "Content" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SFriendChat.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CFriendChatResult), global::Msg.ClientMessage.S2CFriendChatResult.Parser, new[]{ "PlayerId", "Content" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CFriendChatResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SFriendGetUnreadMessageNum), global::Msg.ClientMessage.C2SFriendGetUnreadMessageNum.Parser, new[]{ "FriendIds" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SFriendGetUnreadMessageNum.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.FriendUnreadMessageNumData), global::Msg.ClientMessage.FriendUnreadMessageNumData.Parser, new[]{ "FriendId", "MessageNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CFriendGetUnreadMessageNumResult), global::Msg.ClientMessage.S2CFriendGetUnreadMessageNumResult.Parser, new[]{ "Data" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CFriendGetUnreadMessageNumResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SFriendPullUnreadMessage), global::Msg.ClientMessage.C2SFriendPullUnreadMessage.Parser, new[]{ "FriendId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SFriendPullUnreadMessage.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.FriendChatData), global::Msg.ClientMessage.FriendChatData.Parser, new[]{ "Content", "SendTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CFriendPullUnreadMessageResult), global::Msg.ClientMessage.S2CFriendPullUnreadMessageResult.Parser, new[]{ "FriendId", "Data" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CFriendPullUnreadMessageResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SFriendConfirmUnreadMessage), global::Msg.ClientMessage.C2SFriendConfirmUnreadMessage.Parser, new[]{ "FriendId", "MessageNum" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SFriendConfirmUnreadMessage.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CFriendConfirmUnreadMessageResult), global::Msg.ClientMessage.S2CFriendConfirmUnreadMessageResult.Parser, new[]{ "FriendId", "MessageNum" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CFriendConfirmUnreadMessageResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetOnlineFriends), global::Msg.ClientMessage.C2SGetOnlineFriends.Parser, new[]{ "Key" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetOnlineFriends.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CRetOnlineFriends), global::Msg.ClientMessage.S2CRetOnlineFriends.Parser, new[]{ "PlayerIds", "Key" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CRetOnlineFriends.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetHandbook), global::Msg.ClientMessage.C2SGetHandbook.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetHandbook.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGetHandbookResult), global::Msg.ClientMessage.S2CGetHandbookResult.Parser, new[]{ "Items", "AwardSuitId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGetHandbookResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CNewHandbookItemNotify), global::Msg.ClientMessage.S2CNewHandbookItemNotify.Parser, new[]{ "ItemId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CNewHandbookItemNotify.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetHead), global::Msg.ClientMessage.C2SGetHead.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetHead.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGetHeadResult), global::Msg.ClientMessage.S2CGetHeadResult.Parser, new[]{ "Items" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGetHeadResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CNewHeadNotify), global::Msg.ClientMessage.S2CNewHeadNotify.Parser, new[]{ "ItemId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CNewHeadNotify.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetSuitHandbookReward), global::Msg.ClientMessage.C2SGetSuitHandbookReward.Parser, new[]{ "SuitId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetSuitHandbookReward.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGetSuitHandbookRewardResult), global::Msg.ClientMessage.S2CGetSuitHandbookRewardResult.Parser, new[]{ "Rewards" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGetSuitHandbookRewardResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SZanPlayer), global::Msg.ClientMessage.C2SZanPlayer.Parser, new[]{ "PlayerId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SZanPlayer.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CZanPlayerResult), global::Msg.ClientMessage.S2CZanPlayerResult.Parser, new[]{ "PlayerId", "TotalZan" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CZanPlayerResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SPullFosterData), global::Msg.ClientMessage.C2SPullFosterData.Parser, new[]{ "IsSettle" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SPullFosterData.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.FosterCatInfo), global::Msg.ClientMessage.FosterCatInfo.Parser, new[]{ "CatId", "CatExp", "CatLevel", "Items", "StartTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CPullFosterDataResult), global::Msg.ClientMessage.S2CPullFosterDataResult.Parser, new[]{ "BuildingId", "CardId", "CardRemainSeconds", "SelfCats", "SelfSlotNum" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CPullFosterDataResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SPullFosterCatsWithFriend), global::Msg.ClientMessage.C2SPullFosterCatsWithFriend.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SPullFosterCatsWithFriend.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.FosterCatInFriendInfo), global::Msg.ClientMessage.FosterCatInFriendInfo.Parser, new[]{ "CatId", "RemainSeconds", "FriendId", "FriendLevel", "FriendName", "FriendHead", "StartCardId", "CatExp", "Items", "StartTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.FosteredFriendCatInfo), global::Msg.ClientMessage.FosteredFriendCatInfo.Parser, new[]{ "CatTableId", "CatNick", "CatLevel", "CatStar", "FriendId", "FriendName", "FriendHead", "FriendLevel", "RemainSeconds", "StartCardId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CPullFosterCatsWithFriendResult), global::Msg.ClientMessage.S2CPullFosterCatsWithFriendResult.Parser, new[]{ "CatsInFriend", "FosterFriendSlotNum", "FriendCats", "FriendFosteredSlotNum" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CPullFosterCatsWithFriendResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SFosterCardCompose), global::Msg.ClientMessage.C2SFosterCardCompose.Parser, new[]{ "ItemIds" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SFosterCardCompose.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CFosterCardComposeResult), global::Msg.ClientMessage.S2CFosterCardComposeResult.Parser, new[]{ "ItemIds", "DestItemTableId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CFosterCardComposeResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SFosterEquipCard), global::Msg.ClientMessage.C2SFosterEquipCard.Parser, new[]{ "BuildingId", "CardId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SFosterEquipCard.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CFosterEquipCardResult), global::Msg.ClientMessage.S2CFosterEquipCardResult.Parser, new[]{ "BuildingId", "CardId", "CardRemainSeconds" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CFosterEquipCardResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SFosterUnequipCard), global::Msg.ClientMessage.C2SFosterUnequipCard.Parser, new[]{ "BuildingId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SFosterUnequipCard.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CFosterUnequipCardResult), global::Msg.ClientMessage.S2CFosterUnequipCardResult.Parser, new[]{ "BuildingId", "Rewards" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CFosterUnequipCardResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SFosterSetCat), global::Msg.ClientMessage.C2SFosterSetCat.Parser, new[]{ "BuildingId", "CatId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SFosterSetCat.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CFosterSetCatResult), global::Msg.ClientMessage.S2CFosterSetCatResult.Parser, new[]{ "BuildingId", "CatId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CFosterSetCatResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SFosterOutCat), global::Msg.ClientMessage.C2SFosterOutCat.Parser, new[]{ "BuildingId", "CatId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SFosterOutCat.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CFosterOutCatResult), global::Msg.ClientMessage.S2CFosterOutCatResult.Parser, new[]{ "BuildingId", "CatId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CFosterOutCatResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SFosterSetCat2Friend), global::Msg.ClientMessage.C2SFosterSetCat2Friend.Parser, new[]{ "FriendId", "CatId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SFosterSetCat2Friend.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CFosterSetCat2FriendResult), global::Msg.ClientMessage.S2CFosterSetCat2FriendResult.Parser, new[]{ "FriendId", "CatId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CFosterSetCat2FriendResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SFosterGetEmptySlotFriends), global::Msg.ClientMessage.C2SFosterGetEmptySlotFriends.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SFosterGetEmptySlotFriends.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CFosterGetEmptySlotFriendsResult), global::Msg.ClientMessage.S2CFosterGetEmptySlotFriendsResult.Parser, new[]{ "Friends" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CFosterGetEmptySlotFriendsResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetPlayerFosterCats), global::Msg.ClientMessage.C2SGetPlayerFosterCats.Parser, new[]{ "PlayerId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetPlayerFosterCats.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.FosterPlayerCatInfo), global::Msg.ClientMessage.FosterPlayerCatInfo.Parser, new[]{ "CatTableId", "CatLevel", "CatStar" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.FosterPlayerSelfCatInfo), global::Msg.ClientMessage.FosterPlayerSelfCatInfo.Parser, new[]{ "CatId", "StartCardId", "RemainSeconds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGetPlayerFosterCatsResult), global::Msg.ClientMessage.S2CGetPlayerFosterCatsResult.Parser, new[]{ "PlayerId", "FosterCardId", "CardRemainSeconds", "Cats", "FriendCats", "FosteredSlotNum" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGetPlayerFosterCatsResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.RankItemInfo), global::Msg.ClientMessage.RankItemInfo.Parser, new[]{ "Rank", "PlayerId", "PlayerName", "PlayerLevel", "PlayerHead", "PlayerValue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SRankListRequest), global::Msg.ClientMessage.C2SRankListRequest.Parser, new[]{ "RankType", "StartRank", "RankNum", "Params" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SRankListRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CRankListResponse), global::Msg.ClientMessage.S2CRankListResponse.Parser, new[]{ "RankListType", "RankItems", "SelfHistoryTopRank", "SelfRank", "SelfValue", "SelfValue2" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CRankListResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SChatRequest), global::Msg.ClientMessage.C2SChatRequest.Parser, new[]{ "Channel", "Content" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SChatRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CChatResponse), global::Msg.ClientMessage.S2CChatResponse.Parser, new[]{ "Channel", "Content" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CChatResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SChatMsgPullRequest), global::Msg.ClientMessage.C2SChatMsgPullRequest.Parser, new[]{ "Channel" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SChatMsgPullRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.ChatItem), global::Msg.ClientMessage.ChatItem.Parser, new[]{ "Content", "PlayerId", "PlayerName", "PlayerHead", "PlayerLevel", "IsFriend", "SendTime", "ExtraValue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CChatMsgPullResponse), global::Msg.ClientMessage.S2CChatMsgPullResponse.Parser, new[]{ "Channel", "Items" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CChatMsgPullResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SVisitPlayer), global::Msg.ClientMessage.C2SVisitPlayer.Parser, new[]{ "PlayerId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SVisitPlayer.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.ViewBuildingInfo), global::Msg.ClientMessage.ViewBuildingInfo.Parser, new[]{ "BaseData", "CropData", "CatHouseData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CVisitPlayerResult), global::Msg.ClientMessage.S2CVisitPlayerResult.Parser, new[]{ "PlayerId", "PlayerName", "PlayerLevel", "PlayerVipLevel", "PlayerGold", "PlayerDiamond", "PlayerCharm", "PlayerHead", "Buildings", "Areas", "Surfaces" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CVisitPlayerResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SOpenFriendChest), global::Msg.ClientMessage.C2SOpenFriendChest.Parser, new[]{ "Friendid", "BuildingId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SOpenFriendChest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2COpenFriendChestResult), global::Msg.ClientMessage.S2COpenFriendChestResult.Parser, new[]{ "FriendId", "BuildingId", "OpenResult" }, null, new[]{ typeof(global::Msg.ClientMessage.S2COpenFriendChestResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SPlayerCatInfo), global::Msg.ClientMessage.C2SPlayerCatInfo.Parser, new[]{ "PlayerId", "CatId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SPlayerCatInfo.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CPlayerCatInfoResult), global::Msg.ClientMessage.S2CPlayerCatInfoResult.Parser, new[]{ "PlayerId", "CatId", "CatLevel", "CatExp", "CatStar", "CatSkillLevel", "CatAddCoin", "CatAddMatch", "CatAddExplore" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CPlayerCatInfoResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.AnouncementItem), global::Msg.ClientMessage.AnouncementItem.Parser, new[]{ "MsgType", "PlayerId", "PlayerName", "PlayerLevel", "SendTime", "FosterCardTableId", "FormulaTableId", "BuildingTableId", "SSRCatTableId", "RankType", "StageId", "CatFullLevelTableId", "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CAnouncementNotify), global::Msg.ClientMessage.S2CAnouncementNotify.Parser, new[]{ "Items" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CAnouncementNotify.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.PSLeaveMsgComment), global::Msg.ClientMessage.PSLeaveMsgComment.Parser, new[]{ "CommentId", "Content", "SendTime", "SendPlayerId", "ReplyPlayerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.PSLeaveMsg), global::Msg.ClientMessage.PSLeaveMsg.Parser, new[]{ "MsgId", "Content", "SendTime", "SendPlayerId", "Comments" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.PSPicData), global::Msg.ClientMessage.PSPicData.Parser, new[]{ "PicId", "ThumbNailUrl", "Zaned", "MsgNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetPersonalSpace), global::Msg.ClientMessage.C2SGetPersonalSpace.Parser, new[]{ "PlayerId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetPersonalSpace.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGetPersonalSpaceResult), global::Msg.ClientMessage.S2CGetPersonalSpaceResult.Parser, new[]{ "PlayerId", "Signature", "Pics", "LeaveMsgs", "IsMoreMsg" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGetPersonalSpaceResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SPersonalSpaceModifySignature), global::Msg.ClientMessage.C2SPersonalSpaceModifySignature.Parser, new[]{ "Signature" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SPersonalSpaceModifySignature.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CPersonalSpaceModifySignatureResult), global::Msg.ClientMessage.S2CPersonalSpaceModifySignatureResult.Parser, new[]{ "Signature" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CPersonalSpaceModifySignatureResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SPersonalSpaceZan), global::Msg.ClientMessage.C2SPersonalSpaceZan.Parser, new[]{ "PlayerId", "PicId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SPersonalSpaceZan.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CPersonalSpaceZanResult), global::Msg.ClientMessage.S2CPersonalSpaceZanResult.Parser, new[]{ "PlayerId", "PicId", "Zaned" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CPersonalSpaceZanResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SPersonalSpaceGetPicture), global::Msg.ClientMessage.C2SPersonalSpaceGetPicture.Parser, new[]{ "PlayerId", "PicId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SPersonalSpaceGetPicture.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CPersonalSpaceGetPictureResult), global::Msg.ClientMessage.S2CPersonalSpaceGetPictureResult.Parser, new[]{ "PlayerId", "PicId", "Url", "LeaveMsgs" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CPersonalSpaceGetPictureResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SPersonalSpaceDeletePic), global::Msg.ClientMessage.C2SPersonalSpaceDeletePic.Parser, new[]{ "PicId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SPersonalSpaceDeletePic.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2SPersonalSpaceDeletePicResult), global::Msg.ClientMessage.S2SPersonalSpaceDeletePicResult.Parser, new[]{ "PicId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2SPersonalSpaceDeletePicResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SPersonalSpacePullLeaveMsg), global::Msg.ClientMessage.C2SPersonalSpacePullLeaveMsg.Parser, new[]{ "PlayerId", "PicId", "StartIndex", "MsgNum" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SPersonalSpacePullLeaveMsg.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CPersonalSpacePullLeaveMsgResult), global::Msg.ClientMessage.S2CPersonalSpacePullLeaveMsgResult.Parser, new[]{ "PlayerId", "PicId", "StartIndex", "MsgNum", "LeaveMsgs" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CPersonalSpacePullLeaveMsgResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SPersonalSpaceSendLeaveMsg), global::Msg.ClientMessage.C2SPersonalSpaceSendLeaveMsg.Parser, new[]{ "PlayerId", "PicId", "LeaveMsg" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SPersonalSpaceSendLeaveMsg.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CPersonalSpaceSendLeaveMsgResult), global::Msg.ClientMessage.S2CPersonalSpaceSendLeaveMsgResult.Parser, new[]{ "PlayerId", "PicId", "LeaveMsg", "MsgId", "SendTime" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CPersonalSpaceSendLeaveMsgResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SPersonalSpaceDelLeaveMsg), global::Msg.ClientMessage.C2SPersonalSpaceDelLeaveMsg.Parser, new[]{ "PlayerId", "PicId", "MsgId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SPersonalSpaceDelLeaveMsg.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CPersonalSpaceDelLeaveMsgResult), global::Msg.ClientMessage.S2CPersonalSpaceDelLeaveMsgResult.Parser, new[]{ "PlayerId", "PicId", "MsgId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CPersonalSpaceDelLeaveMsgResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SPersonalSpaceSendLeaveMsgComment), global::Msg.ClientMessage.C2SPersonalSpaceSendLeaveMsgComment.Parser, new[]{ "PlayerId", "PicId", "MsgId", "Comment" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SPersonalSpaceSendLeaveMsgComment.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CPersonalSpaceSendLeaveMsgCommentResult), global::Msg.ClientMessage.S2CPersonalSpaceSendLeaveMsgCommentResult.Parser, new[]{ "PlayerId", "PicId", "MsgId", "Comment", "CommentId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CPersonalSpaceSendLeaveMsgCommentResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SPersonalSpaceDelLeaveMsgComment), global::Msg.ClientMessage.C2SPersonalSpaceDelLeaveMsgComment.Parser, new[]{ "PlayerId", "PicId", "MsgId", "CommentId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SPersonalSpaceDelLeaveMsgComment.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CPersonalSpaceDelLeaveMsgCommentResult), global::Msg.ClientMessage.S2CPersonalSpaceDelLeaveMsgCommentResult.Parser, new[]{ "PlayerId", "PicId", "MsgId", "CommentId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CPersonalSpaceDelLeaveMsgCommentResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SPersonalSpacePullLeaveMsgComment), global::Msg.ClientMessage.C2SPersonalSpacePullLeaveMsgComment.Parser, new[]{ "PlayerId", "PicId", "MsgId", "StartIndex", "CommentNum" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SPersonalSpacePullLeaveMsgComment.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CPersonalSpacePullLeaveMsgCommentResult), global::Msg.ClientMessage.S2CPersonalSpacePullLeaveMsgCommentResult.Parser, new[]{ "PlayerId", "PicId", "MsgId", "StartIndex", "CommentNum", "Comments" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CPersonalSpacePullLeaveMsgCommentResult.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SChargeDataRequest), global::Msg.ClientMessage.C2SChargeDataRequest.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SChargeDataRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.MonthCardData), global::Msg.ClientMessage.MonthCardData.Parser, new[]{ "Id", "EndTime", "SendMailNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CChargeDataResponse), global::Msg.ClientMessage.S2CChargeDataResponse.Parser, new[]{ "FirstChargeState", "Datas", "ChargedIds" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CChargeDataResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SChargeRequest), global::Msg.ClientMessage.C2SChargeRequest.Parser, new[]{ "ItemId", "Channel", "BundleId", "PurchareData", "ExtraData", "ClientIndex" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SChargeRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CChargeResponse), global::Msg.ClientMessage.S2CChargeResponse.Parser, new[]{ "ItemId", "Channel", "BundleId", "IsFirst", "ClientIndex" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CChargeResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CChargeFirstRewardNotify), global::Msg.ClientMessage.S2CChargeFirstRewardNotify.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.S2CChargeFirstRewardNotify.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SChargeFirstAwardRequest), global::Msg.ClientMessage.C2SChargeFirstAwardRequest.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SChargeFirstAwardRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CChargeFirstAwardResponse), global::Msg.ClientMessage.S2CChargeFirstAwardResponse.Parser, new[]{ "Rewards" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CChargeFirstAwardResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.SubActivityData), global::Msg.ClientMessage.SubActivityData.Parser, new[]{ "SubId", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.ActivityData), global::Msg.ClientMessage.ActivityData.Parser, new[]{ "Id", "RemainSeconds", "SubDatas" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SActivityDataRequest), global::Msg.ClientMessage.C2SActivityDataRequest.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SActivityDataRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CActivityDataResponse), global::Msg.ClientMessage.S2CActivityDataResponse.Parser, new[]{ "Data" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CActivityDataResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CActivityDataNotify), global::Msg.ClientMessage.S2CActivityDataNotify.Parser, new[]{ "Id", "SubId", "Value" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CActivityDataNotify.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SActivityExchangeRequest), global::Msg.ClientMessage.C2SActivityExchangeRequest.Parser, new[]{ "Id", "SubId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SActivityExchangeRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CActivityExchangeResponse), global::Msg.ClientMessage.S2CActivityExchangeResponse.Parser, new[]{ "Id", "SubId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CActivityExchangeResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.ActivityInfo), global::Msg.ClientMessage.ActivityInfo.Parser, new[]{ "CfgId", "States", "Vals" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetAllActivityInfos), global::Msg.ClientMessage.C2SGetAllActivityInfos.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetAllActivityInfos.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CActivityInfosUpdate), global::Msg.ClientMessage.S2CActivityInfosUpdate.Parser, new[]{ "Activityinfos" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CActivityInfosUpdate.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGetActivityReward), global::Msg.ClientMessage.C2SGetActivityReward.Parser, new[]{ "ActivityCfgId", "ExtraParams" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SGetActivityReward.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CRetActivityReward), global::Msg.ClientMessage.S2CRetActivityReward.Parser, new[]{ "ActivityCfgId", "Rewards" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CRetActivityReward.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SRedPointStatesRequest), global::Msg.ClientMessage.C2SRedPointStatesRequest.Parser, new[]{ "Modules" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SRedPointStatesRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CRedPointStatesResponse), global::Msg.ClientMessage.S2CRedPointStatesResponse.Parser, new[]{ "Modules", "States" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CRedPointStatesResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SGuideDataSaveRequest), global::Msg.ClientMessage.C2SGuideDataSaveRequest.Parser, new[]{ "Data" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SGuideDataSaveRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGuideDataSaveResponse), global::Msg.ClientMessage.S2CGuideDataSaveResponse.Parser, new[]{ "Data" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGuideDataSaveResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CGuideDataResponse), global::Msg.ClientMessage.S2CGuideDataResponse.Parser, new[]{ "Data" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CGuideDataResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.GuideDM), global::Msg.ClientMessage.GuideDM.Parser, new[]{ "GuideID", "StepID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SFocusDataRequest), global::Msg.ClientMessage.C2SFocusDataRequest.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SFocusDataRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.FocusPlayer), global::Msg.ClientMessage.FocusPlayer.Parser, new[]{ "Id", "Name", "Level", "Head" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CFocusDataResponse), global::Msg.ClientMessage.S2CFocusDataResponse.Parser, new[]{ "BeFocusNum", "Players" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CFocusDataResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SFocusPlayerRequest), global::Msg.ClientMessage.C2SFocusPlayerRequest.Parser, new[]{ "PlayerId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SFocusPlayerRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CFocusPlayerResponse), global::Msg.ClientMessage.S2CFocusPlayerResponse.Parser, new[]{ "PlayerInfo" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CFocusPlayerResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SFocusPlayerCancalRequest), global::Msg.ClientMessage.C2SFocusPlayerCancalRequest.Parser, new[]{ "PlayerId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SFocusPlayerCancalRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CFocusPlayerCancelResponse), global::Msg.ClientMessage.S2CFocusPlayerCancelResponse.Parser, new[]{ "PlayerId" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CFocusPlayerCancelResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SMyPictureDataRequest), global::Msg.ClientMessage.C2SMyPictureDataRequest.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SMyPictureDataRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CMyPictureDataResponse), global::Msg.ClientMessage.S2CMyPictureDataResponse.Parser, new[]{ "CatIds" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CMyPictureDataResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SMyPictureSetRequest), global::Msg.ClientMessage.C2SMyPictureSetRequest.Parser, new[]{ "CatId", "IsCancel" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SMyPictureSetRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CMyPictureSetResponse), global::Msg.ClientMessage.S2CMyPictureSetResponse.Parser, new[]{ "CatId", "IsCancel" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CMyPictureSetResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SSpaceDataRequest), global::Msg.ClientMessage.C2SSpaceDataRequest.Parser, new[]{ "PlayerId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SSpaceDataRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.SpaceCatData), global::Msg.ClientMessage.SpaceCatData.Parser, new[]{ "CatId", "CatTableId", "CatName", "CatOuqi", "CoinAbility", "MatchAbility", "ExploreAbility", "IsUnlock" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CSpaceDataResponse), global::Msg.ClientMessage.S2CSpaceDataResponse.Parser, new[]{ "PlayerId", "PlayerName", "PlayerLevel", "PlayerHead", "Zaned", "BeFocusNum", "Charm", "Cats", "Gender", "FashionIds" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CSpaceDataResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SSpaceSetGenderRequest), global::Msg.ClientMessage.C2SSpaceSetGenderRequest.Parser, new[]{ "Gender" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SSpaceSetGenderRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CSpaceSetGenderResponse), global::Msg.ClientMessage.S2CSpaceSetGenderResponse.Parser, new[]{ "Gender" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CSpaceSetGenderResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SSpaceFashionSaveRequest), global::Msg.ClientMessage.C2SSpaceFashionSaveRequest.Parser, new[]{ "FashionIds" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SSpaceFashionSaveRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CSpaceFashionSaveResponse), global::Msg.ClientMessage.S2CSpaceFashionSaveResponse.Parser, new[]{ "FashionIds" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CSpaceFashionSaveResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SSpaceFashionDataRequest), global::Msg.ClientMessage.C2SSpaceFashionDataRequest.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SSpaceFashionDataRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CSpaceFashionDataResponse), global::Msg.ClientMessage.S2CSpaceFashionDataResponse.Parser, new[]{ "Gender", "FashionIds" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CSpaceFashionDataResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SSpaceCatUnlockRequest), global::Msg.ClientMessage.C2SSpaceCatUnlockRequest.Parser, new[]{ "PlayerId", "CatId" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SSpaceCatUnlockRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CSpaceCatUnlockResponse), global::Msg.ClientMessage.S2CSpaceCatUnlockResponse.Parser, new[]{ "PlayerId", "CatId", "IsUnlock" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CSpaceCatUnlockResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SSignDataRequest), global::Msg.ClientMessage.C2SSignDataRequest.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SSignDataRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CSignDataResponse), global::Msg.ClientMessage.S2CSignDataResponse.Parser, new[]{ "Group", "TakeAwardIndex", "SignedIndex", "NextSignRemainSeconds" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CSignDataResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SSignAwardRequest), global::Msg.ClientMessage.C2SSignAwardRequest.Parser, new[]{ "Index" }, null, new[]{ typeof(global::Msg.ClientMessage.C2SSignAwardRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CSignAwardResponse), global::Msg.ClientMessage.S2CSignAwardResponse.Parser, new[]{ "Index", "Rewards" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CSignAwardResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SSevenDaysDataRequest), global::Msg.ClientMessage.C2SSevenDaysDataRequest.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SSevenDaysDataRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CSevenDaysDataResponse), global::Msg.ClientMessage.S2CSevenDaysDataResponse.Parser, new[]{ "AwardStates", "StartTime", "RemainSeconds" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CSevenDaysDataResponse.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.C2SSevenDaysAwardRequest), global::Msg.ClientMessage.C2SSevenDaysAwardRequest.Parser, null, null, new[]{ typeof(global::Msg.ClientMessage.C2SSevenDaysAwardRequest.Types.EProtocol) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.ClientMessage.S2CSevenDaysAwardResponse), global::Msg.ClientMessage.S2CSevenDaysAwardResponse.Parser, new[]{ "Days", "Rewards" }, null, new[]{ typeof(global::Msg.ClientMessage.S2CSevenDaysAwardResponse.Types.EProtocol) }, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum E_ERR {
    [pbr::OriginalName("NONE")] None = 0,
    /// <summary>
    /// 内部错误
    /// </summary>
    [pbr::OriginalName("INTERNAL")] Internal = -1,
    /// <summary>
    /// 账号或密码错误
    /// </summary>
    [pbr::OriginalName("PLAYER_ACC_OR_PASSWORD_ERROR")] PlayerAccOrPasswordError = -2,
    /// <summary>
    /// 玩家不存在
    /// </summary>
    [pbr::OriginalName("PLAYER_NOT_EXIST")] PlayerNotExist = -3,
    /// <summary>
    /// 玩家已经登陆
    /// </summary>
    [pbr::OriginalName("PLAYER_ALREADY_LOGINED")] PlayerAlreadyLogined = -4,
    /// <summary>
    /// 玩家在其他地方登陆
    /// </summary>
    [pbr::OriginalName("PLAYER_OTHER_PLACE_LOGIN")] PlayerOtherPlaceLogin = -5,
    /// <summary>
    /// 令牌错误
    /// </summary>
    [pbr::OriginalName("PLAYER_TOKEN_ERROR")] PlayerTokenError = -6,
    /// <summary>
    /// 选择服务器不存在
    /// </summary>
    [pbr::OriginalName("PLAYER_SELECT_SERVER_NOT_FOUND")] PlayerSelectServerNotFound = -7,
    /// <summary>
    /// 玩家已经选择过服务器
    /// </summary>
    [pbr::OriginalName("PLAYER_ALREADY_SELECTED_SERVER")] PlayerAlreadySelectedServer = -8,
    /// <summary>
    /// 玩家已离线
    /// </summary>
    [pbr::OriginalName("PLAYER_IS_OFFLINE")] PlayerIsOffline = -9,
    /// <summary>
    /// 发送消息太频繁
    /// </summary>
    [pbr::OriginalName("PLAYER_SEND_TOO_FREQUENTLY")] PlayerSendTooFrequently = -10,
    /// <summary>
    /// 金币不足
    /// </summary>
    [pbr::OriginalName("PLAYER_GOLD_NOT_ENOUGH")] PlayerGoldNotEnough = -11,
    /// <summary>
    /// 钻石不足
    /// </summary>
    [pbr::OriginalName("PLAYER_DIAMOND_NOT_ENOUGH")] PlayerDiamondNotEnough = -12,
    /// <summary>
    /// 昵称过长
    /// </summary>
    [pbr::OriginalName("PLAYER_NAME_TOO_LONG")] PlayerNameTooLong = -13,
    /// <summary>
    /// 头像配置不存在
    /// </summary>
    [pbr::OriginalName("PLAYER_HEAD_TABLE_DATA_NOT_FOUND")] PlayerHeadTableDataNotFound = -14,
    /// <summary>
    /// 没有该头像
    /// </summary>
    [pbr::OriginalName("PLAYER_NO_SUCH_HEAD")] PlayerNoSuchHead = -15,
    /// <summary>
    /// 等级不够
    /// </summary>
    [pbr::OriginalName("PLAYER_LEVEL_NOT_ENOUGH")] PlayerLevelNotEnough = -16,
    /// <summary>
    /// 断开状态下必须先重连
    /// </summary>
    [pbr::OriginalName("PLAYER_MUST_RECONN_WITH_DISCONN_STATE")] PlayerMustReconnWithDisconnState = -17,
    /// <summary>
    /// 消息号非法
    /// </summary>
    [pbr::OriginalName("PLAYER_MSG_ID_INVALID")] PlayerMsgIdInvalid = -18,
    /// <summary>
    /// 消息号不存在
    /// </summary>
    [pbr::OriginalName("PLAYER_MSG_ID_NOT_FOUND")] PlayerMsgIdNotFound = -19,
    /// <summary>
    /// 玩家对象不存在
    /// </summary>
    [pbr::OriginalName("PLAYER_NOT_FOUND_BY_TOKEN")] PlayerNotFoundByToken = -20,
    /// <summary>
    /// 玩家令牌找不到
    /// </summary>
    [pbr::OriginalName("PLAYER_TOKEN_NOT_FOUND")] PlayerTokenNotFound = -21,
    /// <summary>
    /// 账号
    /// </summary>
    [pbr::OriginalName("ACCOUNT_ALREADY_REGISTERED")] AccountAlreadyRegistered = -100,
    /// <summary>
    /// 账号名不合法
    /// </summary>
    [pbr::OriginalName("ACCOUNT_IS_INVALID")] AccountIsInvalid = -101,
    /// <summary>
    /// 密码不合法
    /// </summary>
    [pbr::OriginalName("ACCOUNT_PASSWORD_INVALID")] AccountPasswordInvalid = -102,
    /// <summary>
    /// 账号未注册
    /// </summary>
    [pbr::OriginalName("ACCOUNT_NOT_REGISTERED")] AccountNotRegistered = -103,
    /// <summary>
    /// 不是游客账号
    /// </summary>
    [pbr::OriginalName("ACCOUNT_NOT_GUEST")] AccountNotGuest = -104,
    /// <summary>
    /// 新绑定账号已存在
    /// </summary>
    [pbr::OriginalName("ACCOUNT_NEW_BIND_ALREADY_EXISTS")] AccountNewBindAlreadyExists = -105,
    /// <summary>
    /// 游客新绑定账号不能跟原来相同
    /// </summary>
    [pbr::OriginalName("ACCOUNT_NAME_MUST_DIFFRENT_TO_OLD")] AccountNameMustDiffrentToOld = -106,
    /// <summary>
    /// 账号已绑定过
    /// </summary>
    [pbr::OriginalName("ACCOUNT_ALREADY_BIND")] AccountAlreadyBind = -107,
    /// <summary>
    /// 账号被封禁
    /// </summary>
    [pbr::OriginalName("ACCOUNT_BE_BANNED")] AccountBeBanned = -108,
    /// <summary>
    /// 远程调用
    /// </summary>
    [pbr::OriginalName("REMOTE_FUNC_CALL_ERROR")] RemoteFuncCallError = -20000,
    /// <summary>
    /// 玩家
    /// </summary>
    [pbr::OriginalName("PLAYER_ALREADY_ZAN_TODAY")] PlayerAlreadyZanToday = -100000,
    /// <summary>
    /// 昵称不能与原来相同
    /// </summary>
    [pbr::OriginalName("PLAYER_RENAME_NEW_CANT_SAME_TO_OLD")] PlayerRenameNewCantSameToOld = -100001,
    /// <summary>
    /// 新昵称不能为空
    /// </summary>
    [pbr::OriginalName("PLAYER_RENAME_NEW_CANT_EMPTY")] PlayerRenameNewCantEmpty = -100002,
    /// <summary>
    /// 旧昵称删除失败
    /// </summary>
    [pbr::OriginalName("PLAYER_RENAME_REMOVE_OLD_FAILED")] PlayerRenameRemoveOldFailed = -100003,
    /// <summary>
    /// 新昵称太长
    /// </summary>
    [pbr::OriginalName("PLAYER_RENAME_TOO_LONG_NAME")] PlayerRenameTooLongName = -100004,
    /// <summary>
    /// 改昵称钻石不足
    /// </summary>
    [pbr::OriginalName("PLAYER_RENAME_NOT_ENOUGH_DIAMOND")] PlayerRenameNotEnoughDiamond = -100005,
    /// <summary>
    /// 签到错误骂
    /// </summary>
    [pbr::OriginalName("DAYSIGN_ALRADY_SUM_SIGN")] DaysignAlradySumSign = -100100,
    /// <summary>
    /// 建筑错误码
    /// </summary>
    [pbr::OriginalName("BUILDING_NOT_FIND_ITEM")] BuildingNotFindItem = -100200,
    /// <summary>
    /// 当前位置已经有建筑或者不能放置
    /// </summary>
    [pbr::OriginalName("BUILDING_POS_FORBIDEN")] BuildingPosForbiden = -100201,
    /// <summary>
    /// 建筑不存在
    /// </summary>
    [pbr::OriginalName("BUILDING_NOT_EXIST")] BuildingNotExist = -100202,
    /// <summary>
    /// 建筑的配置
    /// </summary>
    [pbr::OriginalName("BUILDING_NOT_CFG")] BuildingNotCfg = -100203,
    /// <summary>
    /// 建筑不能出售
    /// </summary>
    [pbr::OriginalName("BUILDING_NOT_FOR_SELL")] BuildingNotForSell = -100204,
    /// <summary>
    /// 设置建筑失败
    /// </summary>
    [pbr::OriginalName("BUILDING_FAILED_TO_SET_BUILDING")] BuildingFailedToSetBuilding = -100205,
    /// <summary>
    /// 金币不够不能设置建筑
    /// </summary>
    [pbr::OriginalName("BUILDING_NO_ENOUGH_COIN")] BuildingNoEnoughCoin = -100206,
    /// <summary>
    /// 建筑库里面没有相应建筑
    /// </summary>
    [pbr::OriginalName("BUILDING_NO_DEPOT_BUILDING")] BuildingNoDepotBuilding = -100207,
    /// <summary>
    /// 道具不够不能清除障碍
    /// </summary>
    [pbr::OriginalName("BUILDING_REMOVE_LESS_ITEM")] BuildingRemoveLessItem = -100208,
    /// <summary>
    /// 资源不足不能清除障碍
    /// </summary>
    [pbr::OriginalName("BUILDING_OPEN_MAP_CHEST_LESS_RES")] BuildingOpenMapChestLessRes = -100209,
    /// <summary>
    /// 不能直接购买设置
    /// </summary>
    [pbr::OriginalName("BUILDING_SET_CANNOT_BUY")] BuildingSetCannotBuy = -100210,
    /// <summary>
    /// 玩家等级不足不能直接购买
    /// </summary>
    [pbr::OriginalName("BUILDING_BUYSET_LESS_P_LVL")] BuildingBuysetLessPLvl = -100211,
    /// <summary>
    /// 玩家VIP等级不足不能直接购买
    /// </summary>
    [pbr::OriginalName("BUILDING_BUYSET_LESS_VIP_LVL")] BuildingBuysetLessVipLvl = -100212,
    /// <summary>
    /// 玩家缺少配方不能直接购买
    /// </summary>
    [pbr::OriginalName("BUILDING_BUYSET_LESS_FROMULA")] BuildingBuysetLessFromula = -100213,
    /// <summary>
    /// 达到最大放置数目
    /// </summary>
    [pbr::OriginalName("BUILDING_SET_MAX_COUNT")] BuildingSetMaxCount = -100214,
    /// <summary>
    /// 移动建筑失败
    /// </summary>
    [pbr::OriginalName("BUILDING_MOVE_FAILED")] BuildingMoveFailed = -100215,
    /// <summary>
    /// 地面类型不匹配
    /// </summary>
    [pbr::OriginalName("BUILDING_AREA_TYPE_NOT_MATCH")] BuildingAreaTypeNotMatch = -100216,
    /// <summary>
    /// 没有在开发区域中找到放置位置
    /// </summary>
    [pbr::OriginalName("BUILDING_AREA_TYPE_NO_POS")] BuildingAreaTypeNoPos = -100217,
    /// <summary>
    /// 抽奖错误码
    /// </summary>
    [pbr::OriginalName("DRAW_WRONG_DRAW_TYPE")] DrawWrongDrawType = -100300,
    /// <summary>
    /// 探险错误码
    /// </summary>
    [pbr::OriginalName("EXPEDITION_NO_TASK")] ExpeditionNoTask = -100400,
    /// <summary>
    /// 数量不够
    /// </summary>
    [pbr::OriginalName("EXPEDITION_LESS_CAT")] ExpeditionLessCat = -100401,
    /// <summary>
    /// 猫正在做其他工作
    /// </summary>
    [pbr::OriginalName("EXPEDITION_CAT_WORKING")] ExpeditionCatWorking = -100402,
    /// <summary>
    /// 任务正在进行中
    /// </summary>
    [pbr::OriginalName("EXPEDITION_TASK_DOING")] ExpeditionTaskDoing = -100403,
    /// <summary>
    /// 猫等级不够
    /// </summary>
    [pbr::OriginalName("EXPEDITION_LESS_LEVEL")] ExpeditionLessLevel = -100404,
    /// <summary>
    /// 猫品质不够
    /// </summary>
    [pbr::OriginalName("EXPEDITION_LESS_QUA")] ExpeditionLessQua = -100405,
    /// <summary>
    /// 猫星级不够
    /// </summary>
    [pbr::OriginalName("EXPEDITION_LESS_STAR")] ExpeditionLessStar = -100406,
    /// <summary>
    /// 猫颜色不对
    /// </summary>
    [pbr::OriginalName("EXPEDITION_WRONG_COLOR")] ExpeditionWrongColor = -100407,
    /// <summary>
    /// 猫配置找不到
    /// </summary>
    [pbr::OriginalName("EXPEDITION_NOT_CAT_CFG")] ExpeditionNotCatCfg = -100408,
    /// <summary>
    /// 不能删除限时任务
    /// </summary>
    [pbr::OriginalName("EXPEDITION_CANT_RM_LIMIT_TASK")] ExpeditionCantRmLimitTask = -100409,
    /// <summary>
    /// 不存在任务配置
    /// </summary>
    [pbr::OriginalName("EXPEDITION_NOT_TASK_CFG")] ExpeditionNotTaskCfg = -100410,
    /// <summary>
    /// 钻石不够
    /// </summary>
    [pbr::OriginalName("EXPEDITION_LESS_DIAMOND")] ExpeditionLessDiamond = -100411,
    /// <summary>
    /// 不在探索状态不能结束
    /// </summary>
    [pbr::OriginalName("EXPEDITION_STOP_NOT_DOING")] ExpeditionStopNotDoing = -100412,
    /// <summary>
    /// 不在探索状态不能结束
    /// </summary>
    [pbr::OriginalName("EXPEDITION_WRONG_STATE")] ExpeditionWrongState = -100413,
    /// <summary>
    /// 缺少资源
    /// </summary>
    [pbr::OriginalName("EXPEDITION_LESS_RES")] ExpeditionLessRes = -100414,
    /// <summary>
    /// 缺少次数不能开始
    /// </summary>
    [pbr::OriginalName("EXPEDITION_START_LESS_COUNT")] ExpeditionStartLessCount = -100415,
    /// <summary>
    /// 区域解锁错误码
    /// </summary>
    [pbr::OriginalName("BUILDING_AREA_ALERADY_UNLOCKED")] BuildingAreaAleradyUnlocked = -100500,
    /// <summary>
    /// 区域配置不存在
    /// </summary>
    [pbr::OriginalName("BUILDING_AREA_NO_CFG")] BuildingAreaNoCfg = -100501,
    /// <summary>
    /// 区域解锁配置不存在
    /// </summary>
    [pbr::OriginalName("BUILDING_AREA_NO_UNLOCK_CFG")] BuildingAreaNoUnlockCfg = -100502,
    /// <summary>
    /// 区域解锁资源不足
    /// </summary>
    [pbr::OriginalName("BUILDING_AREA_LESS_UNLOCK_RES")] BuildingAreaLessUnlockRes = -100503,
    /// <summary>
    /// 区域解锁等级不足
    /// </summary>
    [pbr::OriginalName("BUILDING_AREA_LESS_UNLOCK_LVL")] BuildingAreaLessUnlockLvl = -100504,
    /// <summary>
    /// 区域解锁星星不足
    /// </summary>
    [pbr::OriginalName("BUILDING_AREA_LESS_UNLOCK_STAR")] BuildingAreaLessUnlockStar = -100505,
    /// <summary>
    /// 该区域不能快速解锁
    /// </summary>
    [pbr::OriginalName("BUILDING_AREA_CANNOT_QUICK_UNLOCK")] BuildingAreaCannotQuickUnlock = -100506,
    /// <summary>
    /// 前置区域未解锁
    /// </summary>
    [pbr::OriginalName("BUILDING_AREA_NEED_PRE")] BuildingAreaNeedPre = -100507,
    /// <summary>
    /// 邮件错误码
    ///MAIL_FAILED_TO_FIND_MAIL 					= -100600; // 找不到邮件
    ///MAIL_ATTACH_ERROR 						= -100601; // 邮件附件错误
    /// </summary>
    [pbr::OriginalName("PLAYER_MAIL_OVER_MAX_COUNT")] PlayerMailOverMaxCount = -100600,
    /// <summary>
    /// 邮件不存在
    /// </summary>
    [pbr::OriginalName("PLAYER_MAIL_NOT_FOUND")] PlayerMailNotFound = -100601,
    /// <summary>
    /// 邮件没有附加物品
    /// </summary>
    [pbr::OriginalName("PLAYER_MAIL_NO_ATTACHED_ITEM")] PlayerMailNoAttachedItem = -100602,
    /// <summary>
    /// 发送邮件失败
    /// </summary>
    [pbr::OriginalName("PLAYER_MAIL_SEND_FAILED")] PlayerMailSendFailed = -100603,
    /// <summary>
    /// 邮件接受者不存在
    /// </summary>
    [pbr::OriginalName("PLAYER_MAIL_RECEIVER_NOT_FOUND")] PlayerMailReceiverNotFound = -100604,
    /// <summary>
    /// 个人邮件发送冷却中
    /// </summary>
    [pbr::OriginalName("PLAYER_MAIL_PLAYER_IS_COOLDOWN")] PlayerMailPlayerIsCooldown = -100605,
    /// <summary>
    /// 邮件标题太长
    /// </summary>
    [pbr::OriginalName("PLAYER_MAIL_TITLE_TOO_LONG")] PlayerMailTitleTooLong = -100606,
    /// <summary>
    /// 邮件内容太长
    /// </summary>
    [pbr::OriginalName("PLAYER_MAIL_CONTENT_TOO_LONG")] PlayerMailContentTooLong = -100607,
    /// <summary>
    /// 系统邮件子类型未知
    /// </summary>
    [pbr::OriginalName("PLAYER_MAIL_SUBTYPE_UNKNOWN")] PlayerMailSubtypeUnknown = -100608,
    /// <summary>
    /// 物品错误码
    /// </summary>
    [pbr::OriginalName("ITEM_TABLE_DATA_NOT_FOUND")] ItemTableDataNotFound = -101000,
    /// <summary>
    /// 物品不存在
    /// </summary>
    [pbr::OriginalName("ITEM_NOT_FOUND")] ItemNotFound = -101001,
    /// <summary>
    /// 物品数量不足
    /// </summary>
    [pbr::OriginalName("ITEM_NUM_NOT_ENOUGH")] ItemNumNotEnough = -101002,
    /// <summary>
    /// 行动力不足
    /// </summary>
    [pbr::OriginalName("ITEM_ACTION_NOT_ENOUGH")] ItemActionNotEnough = -101003,
    /// <summary>
    /// 猫错误码
    /// </summary>
    [pbr::OriginalName("CAT_TABLE_DATA_NOT_FOUND")] CatTableDataNotFound = -101100,
    /// <summary>
    /// 猫不存在
    /// </summary>
    [pbr::OriginalName("CAT_NOT_FOUND")] CatNotFound = -101101,
    /// <summary>
    /// 猫正在猫舍中
    /// </summary>
    [pbr::OriginalName("CAT_IN_CATHOUSE")] CatInCathouse = -101102,
    /// <summary>
    /// 猫正在探索中
    /// </summary>
    [pbr::OriginalName("CAT_IN_EXPEDITION")] CatInExpedition = -101103,
    /// <summary>
    /// 猫正在寄养所
    /// </summary>
    [pbr::OriginalName("CAT_IN_FOSTER")] CatInFoster = -101104,
    /// <summary>
    /// 猫升级失败
    /// </summary>
    [pbr::OriginalName("CAT_LEVELUP_FAILED")] CatLevelupFailed = -101105,
    /// <summary>
    /// 猫升星失败
    /// </summary>
    [pbr::OriginalName("CAT_UPSTAR_FAILED")] CatUpstarFailed = -101106,
    /// <summary>
    /// 猫升级技能失败
    /// </summary>
    [pbr::OriginalName("CAT_UPGRADE_SKILL_FAILED")] CatUpgradeSkillFailed = -101107,
    /// <summary>
    /// 猫已被锁
    /// </summary>
    [pbr::OriginalName("CAT_LOCKED")] CatLocked = -101108,
    /// <summary>
    /// 猫已解锁
    /// </summary>
    [pbr::OriginalName("CAT_UNLOCKED")] CatUnlocked = -101109,
    /// <summary>
    /// 猫粮不够
    /// </summary>
    [pbr::OriginalName("CAT_FOOD_NOT_ENOUGH")] CatFoodNotEnough = -101110,
    /// <summary>
    /// 猫的星级已达最大
    /// </summary>
    [pbr::OriginalName("CAT_STAR_IS_MAX")] CatStarIsMax = -101111,
    /// <summary>
    /// 升星需要消耗的猫不够
    /// </summary>
    [pbr::OriginalName("CAT_UPSTAR_COST_CAT_NOT_ENOUGH")] CatUpstarCostCatNotEnough = -101112,
    /// <summary>
    /// 升星需要消耗的猫找不到
    /// </summary>
    [pbr::OriginalName("CAT_UPSTAR_COST_CAT_NOT_FOUND")] CatUpstarCostCatNotFound = -101113,
    /// <summary>
    /// 升星需要消耗的猫未解锁
    /// </summary>
    [pbr::OriginalName("CAT_UPSTAR_COST_CAT_NOT_UNLOCK")] CatUpstarCostCatNotUnlock = -101114,
    /// <summary>
    /// 升星需要消耗的猫正在使用
    /// </summary>
    [pbr::OriginalName("CAT_UPSTAR_COST_CAT_IS_USING")] CatUpstarCostCatIsUsing = -101115,
    /// <summary>
    /// 升星需要消耗的猫星级不相等
    /// </summary>
    [pbr::OriginalName("CAT_UPSTAR_COST_CAT_STAR_DIFF")] CatUpstarCostCatStarDiff = -101116,
    /// <summary>
    /// 猫的技能等级已是最大
    /// </summary>
    [pbr::OriginalName("CAT_SKILL_LEVEL_IS_MAX")] CatSkillLevelIsMax = -101117,
    /// <summary>
    /// 猫升技能需要消耗的猫不能为空
    /// </summary>
    [pbr::OriginalName("CAT_UPSKILL_COST_CAT_CANT_EMPTY")] CatUpskillCostCatCantEmpty = -101118,
    /// <summary>
    /// 猫升技能消耗的猫不能为该猫自己
    /// </summary>
    [pbr::OriginalName("CAT_UPSKILL_COST_CAT_CANT_SELF")] CatUpskillCostCatCantSelf = -101119,
    /// <summary>
    /// 猫升技能消耗的猫不存在
    /// </summary>
    [pbr::OriginalName("CAT_UPSKILL_COST_CAT_NOT_FOUND")] CatUpskillCostCatNotFound = -101120,
    /// <summary>
    /// 猫升技能消耗的猫正在使用
    /// </summary>
    [pbr::OriginalName("CAT_UPSKILL_COST_CAT_IS_USING")] CatUpskillCostCatIsUsing = -101121,
    /// <summary>
    /// 猫升技能消耗的猫已被锁
    /// </summary>
    [pbr::OriginalName("CAT_UPSKILL_COST_CAT_LOCKED")] CatUpskillCostCatLocked = -101122,
    /// <summary>
    /// 猫升技能没有符合配置可消耗的猫
    /// </summary>
    [pbr::OriginalName("CAT_UPSKILL_NO_VALID_COST_CAT")] CatUpskillNoValidCostCat = -101123,
    /// <summary>
    /// 猫重命名不能相同
    /// </summary>
    [pbr::OriginalName("CAT_RENAME_CANT_USE_OLD")] CatRenameCantUseOld = -101124,
    /// <summary>
    /// 猫忙
    /// </summary>
    [pbr::OriginalName("CAT_IS_BUSY")] CatIsBusy = -101125,
    /// <summary>
    /// 星级受等级限制
    /// </summary>
    [pbr::OriginalName("CAT_UPSTAR_LEVEL_NOT_ENOUGH")] CatUpstarLevelNotEnough = -101126,
    /// <summary>
    /// 升级需要升星
    /// </summary>
    [pbr::OriginalName("CAT_UPLEVL_NEED_UPSTAR")] CatUplevlNeedUpstar = -101127,
    /// <summary>
    /// 升技能金币不够
    /// </summary>
    [pbr::OriginalName("CAT_UPSKILL_NOT_ENOUGH_COIN")] CatUpskillNotEnoughCoin = -101128,
    /// <summary>
    /// 作坊建筑配方错误码
    /// </summary>
    [pbr::OriginalName("FORMULA_TABLE_DATA_NOT_FOUND")] FormulaTableDataNotFound = -101200,
    /// <summary>
    /// 还未兑换配方
    /// </summary>
    [pbr::OriginalName("FORMULA_NOT_EXCHANGED")] FormulaNotExchanged = -101201,
    /// <summary>
    /// 兑换建筑配方需要解锁章节
    /// </summary>
    [pbr::OriginalName("FORMULA_EXCHANGE_NEED_UNLOCK_CHAPTER")] FormulaExchangeNeedUnlockChapter = -101202,
    /// <summary>
    /// 兑换建筑配方星星数不足
    /// </summary>
    [pbr::OriginalName("FORMULA_EXCHANGE_NOT_ENOUGH_STAR")] FormulaExchangeNotEnoughStar = -101203,
    /// <summary>
    /// 打造需要的金币不足
    /// </summary>
    [pbr::OriginalName("FORMULA_MAKING_NOT_ENOUGH_COIN")] FormulaMakingNotEnoughCoin = -101204,
    /// <summary>
    /// 打造需要的资源不足
    /// </summary>
    [pbr::OriginalName("FORMULA_MAKING_NOT_ENOUGH_RESOURCE")] FormulaMakingNotEnoughResource = -101205,
    /// <summary>
    /// 打造的槽位ID错误
    /// </summary>
    [pbr::OriginalName("FORMULA_MAKING_SLOT_ID_INVALID")] FormulaMakingSlotIdInvalid = -101206,
    /// <summary>
    /// 打造的槽位不能使用
    /// </summary>
    [pbr::OriginalName("FORMULA_MAKING_SLOT_IS_USING")] FormulaMakingSlotIsUsing = -101207,
    /// <summary>
    /// 加速槽位为空
    /// </summary>
    [pbr::OriginalName("FORMULA_MAKING_SPEEDUP_SLOT_EMPTY")] FormulaMakingSpeedupSlotEmpty = -101208,
    /// <summary>
    /// 还未开始打造
    /// </summary>
    [pbr::OriginalName("FORMULA_NOT_MAKING")] FormulaNotMaking = -101209,
    /// <summary>
    /// 加速打造已经完成
    /// </summary>
    [pbr::OriginalName("FORMULA_MAKING_SPEEDUP_ALREAY_COMPLETED")] FormulaMakingSpeedupAlreayCompleted = -101210,
    /// <summary>
    /// 没有正在建造的配方建筑
    /// </summary>
    [pbr::OriginalName("FORMULA_NO_MAKING_BUILDING")] FormulaNoMakingBuilding = -101211,
    /// <summary>
    /// 打造已经完成
    /// </summary>
    [pbr::OriginalName("FORMULA_MAKING_ALREADY_COMPLETED")] FormulaMakingAlreadyCompleted = -101212,
    /// <summary>
    /// 没有空余的槽位可供打造
    /// </summary>
    [pbr::OriginalName("FORMULA_NO_SLOT_TO_MAKING")] FormulaNoSlotToMaking = -101213,
    /// <summary>
    /// 农田错误码
    /// </summary>
    [pbr::OriginalName("CROP_TABLE_DATA_NOT_FOUND")] CropTableDataNotFound = -101300,
    /// <summary>
    /// 农田建筑不存在
    /// </summary>
    [pbr::OriginalName("CROP_NOT_FOUND")] CropNotFound = -101301,
    /// <summary>
    /// 作物未解锁
    /// </summary>
    [pbr::OriginalName("CROP_IS_NO_UNLOCK")] CropIsNoUnlock = -101302,
    /// <summary>
    /// 作物需要的金币不足
    /// </summary>
    [pbr::OriginalName("CROP_NEED_COIN_NOT_ENOUGH")] CropNeedCoinNotEnough = -101303,
    /// <summary>
    /// 农田建筑物不存在
    /// </summary>
    [pbr::OriginalName("CROP_BUILDING_NOT_FOUND")] CropBuildingNotFound = -101304,
    /// <summary>
    /// 种植的建筑物不是农田
    /// </summary>
    [pbr::OriginalName("CROP_BUILDING_IS_NOT_CROP")] CropBuildingIsNotCrop = -101305,
    /// <summary>
    /// 加速需要的钻石不够
    /// </summary>
    [pbr::OriginalName("CROP_SPEEDUP_DIAMOND_NOT_ENOUGH")] CropSpeedupDiamondNotEnough = -101306,
    /// <summary>
    /// 作物未成熟不能收割
    /// </summary>
    [pbr::OriginalName("CROP_NO_MATURITY_DONT_HARVEST")] CropNoMaturityDontHarvest = -101307,
    /// <summary>
    /// 已经种植上了
    /// </summary>
    [pbr::OriginalName("CROP_ALREADY_PLANT")] CropAlreadyPlant = -101308,
    /// <summary>
    /// 已成熟无需加速
    /// </summary>
    [pbr::OriginalName("CROP_ALREAY_MATURITY_NO_NEED_SPEEDUP")] CropAlreayMaturityNoNeedSpeedup = -101309,
    /// <summary>
    /// 猫舍错误码
    /// </summary>
    [pbr::OriginalName("CATHOUSE_TABLE_DATA_NOT_FOUND")] CathouseTableDataNotFound = -101400,
    /// <summary>
    /// 猫舍不存在
    /// </summary>
    [pbr::OriginalName("CATHOUSE_NOT_FOUND")] CathouseNotFound = -101401,
    /// <summary>
    /// 猫已在猫舍中
    /// </summary>
    [pbr::OriginalName("CATHOUSE_CAT_ALREADY_IN_HOUSE")] CathouseCatAlreadyInHouse = -101402,
    /// <summary>
    /// 猫舍已满
    /// </summary>
    [pbr::OriginalName("CATHOUSE_IS_FULL")] CathouseIsFull = -101403,
    /// <summary>
    /// 猫不在该猫舍中
    /// </summary>
    [pbr::OriginalName("CATHOUSE_CAT_NOT_IN_THE_HOUSE")] CathouseCatNotInTheHouse = -101404,
    /// <summary>
    /// 猫舍中没有发现该猫
    /// </summary>
    [pbr::OriginalName("CATHOUSE_NOT_FOUND_CAT_IN_HOUSE")] CathouseNotFoundCatInHouse = -101405,
    /// <summary>
    /// 猫舍已在升级中
    /// </summary>
    [pbr::OriginalName("CATHOUSE_IS_DOING_LEVEL_UP")] CathouseIsDoingLevelUp = -101406,
    /// <summary>
    /// 猫舍已达最大等级
    /// </summary>
    [pbr::OriginalName("CATHOUSE_LEVEL_IS_MAX")] CathouseLevelIsMax = -101407,
    /// <summary>
    /// 猫舍升级费用不够
    /// </summary>
    [pbr::OriginalName("CATHOUSE_LEVELUP_COST_NOT_ENOUGH")] CathouseLevelupCostNotEnough = -101408,
    /// <summary>
    /// 猫舍不在升级
    /// </summary>
    [pbr::OriginalName("CATHOUSE_NOT_DOING_LEVELUP")] CathouseNotDoingLevelup = -101409,
    /// <summary>
    /// 猫舍加速升级钻石不足
    /// </summary>
    [pbr::OriginalName("CATHOUSE_SPEEDUP_LEVELUP_NOT_ENOUGH_DIAMOND")] CathouseSpeedupLevelupNotEnoughDiamond = -101410,
    /// <summary>
    /// 不能出售猫舍
    /// </summary>
    [pbr::OriginalName("CATHOUSE_CANT_SELL")] CathouseCantSell = -101411,
    /// <summary>
    /// 猫的颜色不符
    /// </summary>
    [pbr::OriginalName("CATHOUSE_CAT_MUST_SAME_COLOR")] CathouseCatMustSameColor = -101412,
    /// <summary>
    /// 猫舍正在产金
    /// </summary>
    [pbr::OriginalName("CATHOUSE_CAT_PRODUCING_GOLD")] CathouseCatProducingGold = -101413,
    /// <summary>
    /// 猫舍没有猫不能产金
    /// </summary>
    [pbr::OriginalName("CATHOUSE_START_PRODUCE_GOLD_FAILED_NO_CAT")] CathouseStartProduceGoldFailedNoCat = -101414,
    /// <summary>
    /// 商店错误码
    /// </summary>
    [pbr::OriginalName("SHOP_NOT_FOUND")] ShopNotFound = -101501,
    /// <summary>
    /// 商店限定类型非法
    /// </summary>
    [pbr::OriginalName("SHOP_LIMITED_TYPE_INVALID")] ShopLimitedTypeInvalid = -101502,
    /// <summary>
    /// 钻石不足
    /// </summary>
    [pbr::OriginalName("SHOP_DIAMOND_NOT_ENOUGH")] ShopDiamondNotEnough = -101503,
    /// <summary>
    /// 金币不足
    /// </summary>
    [pbr::OriginalName("SHOP_COIN_NOT_ENOUGH")] ShopCoinNotEnough = -101504,
    /// <summary>
    /// 魅力值不足
    /// </summary>
    [pbr::OriginalName("SHOP_CHARM_NOT_ENOUGH")] ShopCharmNotEnough = -101505,
    /// <summary>
    /// 友情点不足
    /// </summary>
    [pbr::OriginalName("SHOP_FRIEND_POINT_NOT_ENOUGH")] ShopFriendPointNotEnough = -101506,
    /// <summary>
    /// 魂石不足
    /// </summary>
    [pbr::OriginalName("SHOP_SOUL_STONE_NOT_ENOUGH")] ShopSoulStoneNotEnough = -101507,
    /// <summary>
    /// 魅力勋章不足
    /// </summary>
    [pbr::OriginalName("SHOP_CHARM_MEDAL_NOT_ENOUGH")] ShopCharmMedalNotEnough = -101508,
    /// <summary>
    /// 支付类型非法
    /// </summary>
    [pbr::OriginalName("SHOP_PURCHASE_TYPE_INVALID")] ShopPurchaseTypeInvalid = -101509,
    /// <summary>
    /// 未买到
    /// </summary>
    [pbr::OriginalName("SHOP_PURCHASED_FAILED")] ShopPurchasedFailed = -101510,
    /// <summary>
    /// 商品不存在
    /// </summary>
    [pbr::OriginalName("SHOP_ITEM_NOT_FOUND")] ShopItemNotFound = -101511,
    /// <summary>
    /// 商品数不足
    /// </summary>
    [pbr::OriginalName("SHOP_ITEM_NOT_ENOUGH")] ShopItemNotEnough = -101512,
    /// <summary>
    /// 购买后添加物品失败
    /// </summary>
    [pbr::OriginalName("SHOP_AFTER_PURCHASE_FAILED")] ShopAfterPurchaseFailed = -101513,
    /// <summary>
    /// 任务
    /// </summary>
    [pbr::OriginalName("TASK_NOT_FOUND")] TaskNotFound = -101600,
    /// <summary>
    /// 任务未完成
    /// </summary>
    [pbr::OriginalName("TASK_NOT_COMPLETE")] TaskNotComplete = -101601,
    /// <summary>
    /// 任务未领奖
    /// </summary>
    [pbr::OriginalName("TASK_NOT_REWARD")] TaskNotReward = -101602,
    /// <summary>
    /// 任务已领奖
    /// </summary>
    [pbr::OriginalName("TASK_ALREADY_REWARDED")] TaskAlreadyRewarded = -101603,
    /// <summary>
    /// 前置任务未完成
    /// </summary>
    [pbr::OriginalName("TASK_PREV_NOT_COMPLETE")] TaskPrevNotComplete = -101604,
    /// <summary>
    /// 章节解锁
    /// </summary>
    [pbr::OriginalName("CHAPTER_UNLOCK_WRONG_CHAPTER_ID")] ChapterUnlockWrongChapterId = -101700,
    /// <summary>
    /// 星星不够不能解锁
    /// </summary>
    [pbr::OriginalName("CHAPTER_UNLOCK_LESS_STAR")] ChapterUnlockLessStar = -101701,
    /// <summary>
    /// 钻石不够不能解锁
    /// </summary>
    [pbr::OriginalName("CHAPTER_UNLOCK_LESS_DIAMOND")] ChapterUnlockLessDiamond = -101702,
    /// <summary>
    /// 缺少解锁配置
    /// </summary>
    [pbr::OriginalName("CHAPTER_UNLOCK_NO_UNLOCK_CFG")] ChapterUnlockNoUnlockCfg = -101703,
    /// <summary>
    /// 当前章节的解锁配置不存在
    /// </summary>
    [pbr::OriginalName("CHAPTER_UNLOCK_NO_CUR_UNLOCK_CFG")] ChapterUnlockNoCurUnlockCfg = -101704,
    /// <summary>
    /// 时间未到不能解锁
    /// </summary>
    [pbr::OriginalName("CHAPTER_UNLOCK_NO_ENOUGH_TIME")] ChapterUnlockNoEnoughTime = -101705,
    /// <summary>
    /// 请求的好友列表未空
    /// </summary>
    [pbr::OriginalName("CHAPTER_UNLOCK_NO_FRIEND_IDS")] ChapterUnlockNoFriendIds = -101706,
    /// <summary>
    /// 未通过当前章节的最后一关
    /// </summary>
    [pbr::OriginalName("CHAPTER_UNLOCK_NEED_PASS_STAGE")] ChapterUnlockNeedPassStage = -101707,
    /// <summary>
    /// 达到今天最大帮助次数
    /// </summary>
    [pbr::OriginalName("CHAPTER_HELP_UNLOCK_LESS_NUM")] ChapterHelpUnlockLessNum = -101708,
    /// <summary>
    /// 章节通关
    /// </summary>
    [pbr::OriginalName("STAGE_PASS_NOT_UNLOCK")] StagePassNotUnlock = -101800,
    /// <summary>
    /// 超过下一关卡
    /// </summary>
    [pbr::OriginalName("STAGE_PASS_OVER_NEXT_STATE")] StagePassOverNextState = -101801,
    /// <summary>
    /// 找不到配置数据
    /// </summary>
    [pbr::OriginalName("STAGE_TABLE_DATA_NOT_FOUND")] StageTableDataNotFound = -101802,
    /// <summary>
    /// 关卡ID结束与开始不匹配
    /// </summary>
    [pbr::OriginalName("STAGE_NO_MATCH_WITH_END")] StageNoMatchWithEnd = -101803,
    /// <summary>
    /// 关卡已结束
    /// </summary>
    [pbr::OriginalName("STAGE_ALREADY_FINISHED")] StageAlreadyFinished = -101804,
    /// <summary>
    /// 关卡已开始
    /// </summary>
    [pbr::OriginalName("STAGE_ALREADY_BEGAN")] StageAlreadyBegan = -101805,
    /// <summary>
    /// 关卡未开始
    /// </summary>
    [pbr::OriginalName("STAGE_NO_BEGIN")] StageNoBegin = -101806,
    /// <summary>
    /// 好友
    /// </summary>
    [pbr::OriginalName("FRIEND_NOT_FOUND_PLAYER")] FriendNotFoundPlayer = -101900,
    /// <summary>
    /// 好友不在线
    /// </summary>
    [pbr::OriginalName("FRIEND_OFFLINE")] FriendOffline = -101901,
    /// <summary>
    /// 赠送友情点过于频繁
    /// </summary>
    [pbr::OriginalName("FRIEND_GIVE_POINTS_FREQUENTLY")] FriendGivePointsFrequently = -101902,
    /// <summary>
    /// 一次赠送好友过多
    /// </summary>
    [pbr::OriginalName("FRIEND_TOO_MANY_FRIEND_GIVE_POINTS")] FriendTooManyFriendGivePoints = -101903,
    /// <summary>
    /// 友情点不够赠送
    /// </summary>
    [pbr::OriginalName("FRIEND_POINTS_NOT_ENOUGH_TO_GIVE")] FriendPointsNotEnoughToGive = -101904,
    /// <summary>
    /// 访问好友失败
    /// </summary>
    [pbr::OriginalName("FRIEND_VISIT_FRIEND_FAILED")] FriendVisitFriendFailed = -101905,
    /// <summary>
    /// 没有该好友
    /// </summary>
    [pbr::OriginalName("FRIEND_NO_THE_FRIEND")] FriendNoTheFriend = -101906,
    /// <summary>
    /// 聊天失败
    /// </summary>
    [pbr::OriginalName("FRIEND_CHAT_FAILED")] FriendChatFailed = -101907,
    /// <summary>
    /// 没有未读消息
    /// </summary>
    [pbr::OriginalName("FRIEND_NO_UNREAD_MESSAGE")] FriendNoUnreadMessage = -101908,
    /// <summary>
    /// 消息数量最大
    /// </summary>
    [pbr::OriginalName("FRIEND_MESSAGE_NUM_MAX")] FriendMessageNumMax = -101909,
    /// <summary>
    /// 消息过长
    /// </summary>
    [pbr::OriginalName("FRIEND_MESSAGE_TOO_LONG")] FriendMessageTooLong = -101910,
    /// <summary>
    /// 删除好友失败
    /// </summary>
    [pbr::OriginalName("FRIEND_REMOVE_FRIEND_FAILED")] FriendRemoveFriendFailed = -101911,
    /// <summary>
    /// 上次赠送的友情点还未收取
    /// </summary>
    [pbr::OriginalName("FRIEND_LAST_POINTS_NOT_GET")] FriendLastPointsNotGet = -101912,
    /// <summary>
    /// 该玩家已是好友
    /// </summary>
    [pbr::OriginalName("FRIEND_THE_PLAYER_ALREADY_FRIEND")] FriendThePlayerAlreadyFriend = -101913,
    /// <summary>
    /// 该玩家已申请过
    /// </summary>
    [pbr::OriginalName("FRIEND_THE_PLAYER_REQUESTED")] FriendThePlayerRequested = -101914,
    /// <summary>
    /// 赠送次数已达上限
    /// </summary>
    [pbr::OriginalName("FRIEND_GIVE_POINTS_MAX_NUM_LIMIT")] FriendGivePointsMaxNumLimit = -101915,
    /// <summary>
    /// 已赠送过友情点给该玩家
    /// </summary>
    [pbr::OriginalName("FRIEND_ALREDY_GIVED_POINTS_TO_PLAYER")] FriendAlredyGivedPointsToPlayer = -101916,
    /// <summary>
    /// 活动配置
    /// </summary>
    [pbr::OriginalName("ACTIVITY_NO_CFG")] ActivityNoCfg = -102000,
    /// <summary>
    /// 已经领取过奖励
    /// </summary>
    [pbr::OriginalName("ACTIVITY_HAVE_REWARDED")] ActivityHaveRewarded = -102001,
    /// <summary>
    /// 不满足领奖条件
    /// </summary>
    [pbr::OriginalName("ACTIVITY_NOT_FINISHED")] ActivityNotFinished = -102002,
    /// <summary>
    /// 未配置奖励
    /// </summary>
    [pbr::OriginalName("ACTIVITY_NO_REWARDED")] ActivityNoRewarded = -102003,
    /// <summary>
    /// 请求参数错误或者不全
    /// </summary>
    [pbr::OriginalName("ACTIVITY_GET_REWARD_REQ_ERROR")] ActivityGetRewardReqError = -102004,
    /// <summary>
    /// 没有对应等级的成长奖励
    /// </summary>
    [pbr::OriginalName("ACTIVITY_LVL_REWARD_NO_CFG")] ActivityLvlRewardNoCfg = -102005,
    /// <summary>
    /// 等级未到不能领取奖励
    /// </summary>
    [pbr::OriginalName("ACTIVITY_LVL_REWARD_LESS_LVL")] ActivityLvlRewardLessLvl = -102006,
    /// <summary>
    /// 等级未到不能领取奖励
    /// </summary>
    [pbr::OriginalName("ACTIVITY_VIPCARD_NOT_OPEN")] ActivityVipcardNotOpen = -102007,
    /// <summary>
    /// 没有对应的每日奖励配置
    /// </summary>
    [pbr::OriginalName("ACTIVITY_DAY_REWARD_NO_CFG")] ActivityDayRewardNoCfg = -102008,
    /// <summary>
    /// 没有对应的累计奖励配置
    /// </summary>
    [pbr::OriginalName("ACTIVITY_SUM_DAYREWARD_NO_CFG")] ActivitySumDayrewardNoCfg = -102009,
    /// <summary>
    /// 活动未开启
    /// </summary>
    [pbr::OriginalName("ACTIVITY_NOT_OPEN")] ActivityNotOpen = -102010,
    /// <summary>
    /// 寄养所
    /// </summary>
    [pbr::OriginalName("FOSTER_COMPOSE_NOT_ENOUGH_CARD")] FosterComposeNotEnoughCard = -102100,
    /// <summary>
    /// 合成的源卡非法
    /// </summary>
    [pbr::OriginalName("FOSTER_COMPOSE_CARD_INVALID")] FosterComposeCardInvalid = -102101,
    /// <summary>
    /// 寄养卡类型错误
    /// </summary>
    [pbr::OriginalName("FOSTER_COMPOSE_TYPE_INVALID")] FosterComposeTypeInvalid = -102102,
    /// <summary>
    /// 寄养所建筑不匹配
    /// </summary>
    [pbr::OriginalName("FOSTER_BUILDING_IS_DISMATCH")] FosterBuildingIsDismatch = -102103,
    /// <summary>
    /// 没有足够的位置放猫
    /// </summary>
    [pbr::OriginalName("FOSTER_NOT_ENOUGH_SPACE_TO_SET_CAT")] FosterNotEnoughSpaceToSetCat = -102104,
    /// <summary>
    /// 寄养所没有该猫
    /// </summary>
    [pbr::OriginalName("FOSTER_NO_SUCH_CAT_IN_FOSTER")] FosterNoSuchCatInFoster = -102105,
    /// <summary>
    /// 已达自己寄存数量上限
    /// </summary>
    [pbr::OriginalName("FOSTER_REACH_SELF_MAX_FOSTER_NUM")] FosterReachSelfMaxFosterNum = -102106,
    /// <summary>
    /// 好友寄存位置不足
    /// </summary>
    [pbr::OriginalName("FOSTER_FRIEND_NO_SPACE_TO_FOSTER")] FosterFriendNoSpaceToFoster = -102107,
    /// <summary>
    /// 已经在该玩家寄养了一只猫
    /// </summary>
    [pbr::OriginalName("FOSTER_ALREADY_CAT_IN_THE_FRIEND")] FosterAlreadyCatInTheFriend = -102108,
    /// <summary>
    /// 必须卸载已有的寄养卡才能装备新寄养卡
    /// </summary>
    [pbr::OriginalName("FOSTER_EQUIP_NEW_CARD_MUST_UNEQUIP_OLD")] FosterEquipNewCardMustUnequipOld = -102109,
    /// <summary>
    /// 没有寄养卡寄养
    /// </summary>
    [pbr::OriginalName("FOSTER_UNEQUIP_NO_EQUIP_CARD")] FosterUnequipNoEquipCard = -102110,
    /// <summary>
    /// 寄养到好友失败
    /// </summary>
    [pbr::OriginalName("FOSTER_SET_CAT_TO_FRIEND_FAILED")] FosterSetCatToFriendFailed = -102111,
    /// <summary>
    /// 没有装备寄养卡不能激活
    /// </summary>
    [pbr::OriginalName("FOSTER_NO_EQUIP_CARD_CANT_ACTIVE")] FosterNoEquipCardCantActive = -102112,
    /// <summary>
    /// 寄养卡已激活
    /// </summary>
    [pbr::OriginalName("FOSTER_CARD_ALREADY_ACTIVED")] FosterCardAlreadyActived = -102113,
    /// <summary>
    /// 可寄养的好友数量已达上限
    /// </summary>
    [pbr::OriginalName("FOSTER_MAX_FRIEND_NUM_TO_FOSTER")] FosterMaxFriendNumToFoster = -102114,
    /// <summary>
    /// 排行榜
    /// </summary>
    [pbr::OriginalName("RANK_GET_ITEMS_NUM_OVER_MAX")] RankGetItemsNumOverMax = -102200,
    /// <summary>
    /// 聊天
    /// </summary>
    [pbr::OriginalName("CHAT_SEND_MSG_COOLING_DOWN")] ChatSendMsgCoolingDown = -102350,
    /// <summary>
    /// 聊天消息超长
    /// </summary>
    [pbr::OriginalName("CHAT_SEND_MSG_BYTES_TOO_LONG")] ChatSendMsgBytesTooLong = -102351,
    /// <summary>
    /// 聊天内部错误没有空闲的节点
    /// </summary>
    [pbr::OriginalName("CHAT_CANT_SEND_WITH_NO_FREE")] ChatCantSendWithNoFree = -102352,
    /// <summary>
    /// 聊天拉取消息还在冷却中
    /// </summary>
    [pbr::OriginalName("CHAT_PULL_COOLING_DOWN")] ChatPullCoolingDown = -102353,
    /// <summary>
    /// 无法获得聊天频道
    /// </summary>
    [pbr::OriginalName("CHAT_CHANNEL_CANT_GET")] ChatChannelCantGet = -102354,
    /// <summary>
    /// 个人空间
    /// </summary>
    [pbr::OriginalName("SPACE_CANT_FOCUS_SELF")] SpaceCantFocusSelf = -102400,
    /// <summary>
    /// 已经关注过某玩家
    /// </summary>
    [pbr::OriginalName("SPACE_ALREADY_FOCUSED_PLAYER")] SpaceAlreadyFocusedPlayer = -102401,
    /// <summary>
    /// 还未关注某玩家
    /// </summary>
    [pbr::OriginalName("SPACE_NOT_FOCUS_PLAYER")] SpaceNotFocusPlayer = -102402,
    /// <summary>
    /// 空间没有猫的照片
    /// </summary>
    [pbr::OriginalName("SPACE_NOT_HAVE_CAT_PICTURE")] SpaceNotHaveCatPicture = -102403,
    /// <summary>
    /// 空间已满
    /// </summary>
    [pbr::OriginalName("SPACE_ALREADY_FULL")] SpaceAlreadyFull = -102404,
    /// <summary>
    /// 空间已设置性别
    /// </summary>
    [pbr::OriginalName("SPACE_ALREADY_SET_GENDER")] SpaceAlreadySetGender = -102405,
    /// <summary>
    /// 空间形象时装ID不存在
    /// </summary>
    [pbr::OriginalName("SPACE_FASHION_TABLE_ID_NOT_FOUND")] SpaceFashionTableIdNotFound = -102406,
    /// <summary>
    /// 空间时装性别不匹配
    /// </summary>
    [pbr::OriginalName("SPACE_FASHION_GENDER_NOT_MATCH")] SpaceFashionGenderNotMatch = -102407,
    /// <summary>
    /// 充值
    /// </summary>
    [pbr::OriginalName("CHARGE_ORDER_DATA_EMPTY")] ChargeOrderDataEmpty = -102500,
    /// <summary>
    /// 订单数据非法
    /// </summary>
    [pbr::OriginalName("CHARGE_ORDER_DATA_INVALID")] ChargeOrderDataInvalid = -102501,
    /// <summary>
    /// 订单签名数据非法
    /// </summary>
    [pbr::OriginalName("CHARGE_ORDER_SIGNATURE_INVALID")] ChargeOrderSignatureInvalid = -102502,
    /// <summary>
    /// 订单号为空
    /// </summary>
    [pbr::OriginalName("CHARGE_ORDER_SN_EMPTY")] ChargeOrderSnEmpty = -102503,
    /// <summary>
    /// 订单已使用过 
    /// </summary>
    [pbr::OriginalName("CHARGE_ORDER_SN_ALREDY_USED")] ChargeOrderSnAlredyUsed = -102504,
    /// <summary>
    /// 订单验证失败
    /// </summary>
    [pbr::OriginalName("CHARGE_ORDER_VERIFY_FAILED")] ChargeOrderVerifyFailed = -102505,
    /// <summary>
    /// 充值
    /// </summary>
    [pbr::OriginalName("CHARGE_TABLE_DATA_NOT_FOUND")] ChargeTableDataNotFound = -102510,
    /// <summary>
    /// 月卡已买
    /// </summary>
    [pbr::OriginalName("CHARGE_MONTH_CARD_ALREADY_PAYED")] ChargeMonthCardAlreadyPayed = -102511,
    /// <summary>
    /// 还未首充
    /// </summary>
    [pbr::OriginalName("CHARGE_FIRST_NO_DONE")] ChargeFirstNoDone = -102512,
    /// <summary>
    /// 首充已领过奖
    /// </summary>
    [pbr::OriginalName("CHARGE_FIRST_ALREADY_AWARD")] ChargeFirstAlreadyAward = -102513,
    /// <summary>
    /// google签名验证失败
    /// </summary>
    [pbr::OriginalName("CHARGE_GOOGLE_SIGNATURE_INVALID")] ChargeGoogleSignatureInvalid = -102514,
    /// <summary>
    /// google支付令牌验证失败
    /// </summary>
    [pbr::OriginalName("CHARGE_GOOGLE_PURCHASE_TOKEN_INVALID")] ChargeGooglePurchaseTokenInvalid = -102515,
    /// <summary>
    /// google订单已存在
    /// </summary>
    [pbr::OriginalName("CHARGE_GOOGLE_ORDER_ALREADY_EXIST")] ChargeGoogleOrderAlreadyExist = -102516,
    /// <summary>
    /// apple支付数据为空
    /// </summary>
    [pbr::OriginalName("CHARGE_APPLE_PURCHASE_DATA_EMPTY")] ChargeApplePurchaseDataEmpty = -102517,
    /// <summary>
    /// apple支付数据非法
    /// </summary>
    [pbr::OriginalName("CHARGE_APPLE_PURCHASE_DATA_INVALID")] ChargeApplePurchaseDataInvalid = -102518,
    /// <summary>
    /// apple支付验证请求创建失败
    /// </summary>
    [pbr::OriginalName("CHARGE_APPLE_PAY_NEW_REQUEST_FAILED")] ChargeApplePayNewRequestFailed = -102519,
    /// <summary>
    /// apple支付验证请求失败
    /// </summary>
    [pbr::OriginalName("CHARGE_APPLE_PAY_REQUEST_FAILED")] ChargeApplePayRequestFailed = -102520,
    /// <summary>
    /// apple支付验证结果反序列化失败
    /// </summary>
    [pbr::OriginalName("CHARGE_APPLE_PAY_RESULT_UNMARSHAL_FAILED")] ChargeApplePayResultUnmarshalFailed = -102521,
    /// <summary>
    /// apple支付验证未通过
    /// </summary>
    [pbr::OriginalName("CHARGE_APPLE_PAY_VERIFY_NO_PASS")] ChargeApplePayVerifyNoPass = -102522,
    /// <summary>
    /// apple支付订单已存在
    /// </summary>
    [pbr::OriginalName("CHARGE_APPLE_ORDER_ALREADY_EXIST")] ChargeAppleOrderAlreadyExist = -102523,
    /// <summary>
    /// 充值渠道非法
    /// </summary>
    [pbr::OriginalName("CHARGE_CHANNEL_INVALID")] ChargeChannelInvalid = -102524,
    /// <summary>
    /// 充值支付重复验证
    /// </summary>
    [pbr::OriginalName("CHARGE_PAY_REPEATED_VERIFY")] ChargePayRepeatedVerify = -102525,
    /// <summary>
    /// 无充值活动可用
    /// </summary>
    [pbr::OriginalName("CHARGE_NO_ACTIVITY_ON_THIS_TIME")] ChargeNoActivityOnThisTime = -102526,
    /// <summary>
    /// 商品ID验证不符
    /// </summary>
    [pbr::OriginalName("CHARGE_PRODUCT_ID_NOT_MATCH")] ChargeProductIdNotMatch = -102527,
    /// <summary>
    /// 排行榜
    /// </summary>
    [pbr::OriginalName("RANK_LIST_TYPE_INVALID")] RankListTypeInvalid = -102600,
    /// <summary>
    /// 签到
    /// </summary>
    [pbr::OriginalName("SIGN_TABLE_DATA_NOT_FOUND")] SignTableDataNotFound = -102700,
    /// <summary>
    /// 已领取过奖励
    /// </summary>
    [pbr::OriginalName("SIGN_ALREADY_AWARD")] SignAlreadyAward = -102701,
    /// <summary>
    /// 必须按签到顺序领奖
    /// </summary>
    [pbr::OriginalName("SIGN_MUST_AWARD_IN_SEQUENCE")] SignMustAwardInSequence = -102702,
    /// <summary>
    /// 签到的奖励都已领完
    /// </summary>
    [pbr::OriginalName("SIGN_ALL_AWARDED")] SignAllAwarded = -102703,
    /// <summary>
    /// 七天乐
    /// </summary>
    [pbr::OriginalName("SEVEN_DAYS_FINISHED")] SevenDaysFinished = -102800,
    /// <summary>
    /// 已领奖
    /// </summary>
    [pbr::OriginalName("SEVEN_DAYS_AWARDED")] SevenDaysAwarded = -102801,
  }

  /// <summary>
  /// --------------------------------- 红点提示 ---------------------------------
  /// 红点功能枚举
  /// </summary>
  public enum RED_POINT {
    [pbr::OriginalName("STATE_NONE")] StateNone = 0,
    /// <summary>
    /// 成就任务(有奖励)            按位与运算大于0 :  0x01 成就任务          0x02 每日任务
    /// </summary>
    [pbr::OriginalName("TASK")] Task = 1,
    /// <summary>
    /// 福利(有奖励)				按位与运算大于0 :  0x01 首充              0x02 七天乐
    /// </summary>
    [pbr::OriginalName("WELFARE")] Welfare = 2,
    /// <summary>
    /// 战役(有随机战利品)			按位与运算大于0 :  0x01 有战利品
    /// </summary>
    [pbr::OriginalName("CAMPAIN")] Campain = 3,
    /// <summary>
    /// 抽卡(免费抽卡)				按位与运算大于0 :  0x01 普通招募          0x02 高级招募
    /// </summary>
    [pbr::OriginalName("DRAW")] Draw = 4,
    /// <summary>
    /// 探索(有奖励)				按位与运算大于0 :  0x01 有奖励
    /// </summary>
    [pbr::OriginalName("EXPLORE")] Explore = 5,
    /// <summary>
    /// 聊天(有新聊天消息)          按位与运算大于0 :  0x01 世界频道          0x02 公会频道         0x04 招募频道         0x08 系统公告频道
    /// </summary>
    [pbr::OriginalName("CHAT")] Chat = 6,
    /// <summary>
    /// 邮件(有未读邮件)            按位与运算大于0 :  0x01 有未读邮件
    /// </summary>
    [pbr::OriginalName("MAIL")] Mail = 7,
    /// <summary>
    /// 好友                        按位与运算大于0 :  0x01 好友助战可以搜索  0x02 有新好友申请
    /// </summary>
    [pbr::OriginalName("FRIEND")] Friend = 8,
    /// <summary>
    /// 点金手(免费点金)            按位与运算大于0 :  0x01 有免费点金
    /// </summary>
    [pbr::OriginalName("GOLD_HAND")] GoldHand = 9,
    /// <summary>
    /// 公会(签到)                 按位与运算大于0 :  0x01 可签到
    /// </summary>
    [pbr::OriginalName("GUILD")] Guild = 10,
    /// <summary>
    /// 签到                       按位与运算大于0 :  0x01 可签到
    /// </summary>
    [pbr::OriginalName("SIGN")] Sign = 11,
    /// <summary>
    /// 最大值
    /// </summary>
    [pbr::OriginalName("MAX")] Max = 20,
  }

  #endregion

  #region Messages
  /// <summary>
  /// 测试用消息
  /// </summary>
  public sealed partial class C2S_TEST_COMMAND : pb::IMessage<C2S_TEST_COMMAND> {
    private static readonly pb::MessageParser<C2S_TEST_COMMAND> _parser = new pb::MessageParser<C2S_TEST_COMMAND>(() => new C2S_TEST_COMMAND());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_TEST_COMMAND> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_TEST_COMMAND() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_TEST_COMMAND(C2S_TEST_COMMAND other) : this() {
      cmd_ = other.cmd_;
      args_ = other.args_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_TEST_COMMAND Clone() {
      return new C2S_TEST_COMMAND(this);
    }

    /// <summary>Field number for the "cmd" field.</summary>
    public const int CmdFieldNumber = 1;
    private string cmd_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cmd {
      get { return cmd_; }
      set {
        cmd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "args" field.</summary>
    public const int ArgsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_args_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> args_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Args {
      get { return args_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_TEST_COMMAND);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_TEST_COMMAND other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cmd != other.Cmd) return false;
      if(!args_.Equals(other.args_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Cmd.Length != 0) hash ^= Cmd.GetHashCode();
      hash ^= args_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Cmd.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Cmd);
      }
      args_.WriteTo(output, _repeated_args_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Cmd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cmd);
      }
      size += args_.CalculateSize(_repeated_args_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_TEST_COMMAND other) {
      if (other == null) {
        return;
      }
      if (other.Cmd.Length != 0) {
        Cmd = other.Cmd;
      }
      args_.Add(other.args_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Cmd = input.ReadString();
            break;
          }
          case 18: {
            args_.AddEntriesFrom(input, _repeated_args_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2S_TEST_COMMAND message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// 心跳
  /// </summary>
  public sealed partial class C2SHeartbeat : pb::IMessage<C2SHeartbeat> {
    private static readonly pb::MessageParser<C2SHeartbeat> _parser = new pb::MessageParser<C2SHeartbeat>(() => new C2SHeartbeat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SHeartbeat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SHeartbeat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SHeartbeat(C2SHeartbeat other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SHeartbeat Clone() {
      return new C2SHeartbeat(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SHeartbeat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SHeartbeat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SHeartbeat other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SHeartbeat message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 2,
      }

    }
    #endregion

  }

  public sealed partial class S2CHeartbeat : pb::IMessage<S2CHeartbeat> {
    private static readonly pb::MessageParser<S2CHeartbeat> _parser = new pb::MessageParser<S2CHeartbeat>(() => new S2CHeartbeat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CHeartbeat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CHeartbeat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CHeartbeat(S2CHeartbeat other) : this() {
      sysTime_ = other.sysTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CHeartbeat Clone() {
      return new S2CHeartbeat(this);
    }

    /// <summary>Field number for the "SysTime" field.</summary>
    public const int SysTimeFieldNumber = 1;
    private int sysTime_;
    /// <summary>
    /// 系统标准时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SysTime {
      get { return sysTime_; }
      set {
        sysTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CHeartbeat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CHeartbeat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SysTime != other.SysTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SysTime != 0) hash ^= SysTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SysTime != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SysTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SysTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SysTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CHeartbeat other) {
      if (other == null) {
        return;
      }
      if (other.SysTime != 0) {
        SysTime = other.SysTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SysTime = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CHeartbeat message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// 注册
  /// </summary>
  public sealed partial class C2SRegisterRequest : pb::IMessage<C2SRegisterRequest> {
    private static readonly pb::MessageParser<C2SRegisterRequest> _parser = new pb::MessageParser<C2SRegisterRequest>(() => new C2SRegisterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SRegisterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SRegisterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SRegisterRequest(C2SRegisterRequest other) : this() {
      account_ = other.account_;
      password_ = other.password_;
      isGuest_ = other.isGuest_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SRegisterRequest Clone() {
      return new C2SRegisterRequest(this);
    }

    /// <summary>Field number for the "Account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    /// <summary>
    /// 账号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    /// <summary>
    /// 密码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsGuest" field.</summary>
    public const int IsGuestFieldNumber = 3;
    private bool isGuest_;
    /// <summary>
    /// 是否游客
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsGuest {
      get { return isGuest_; }
      set {
        isGuest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SRegisterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SRegisterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (Password != other.Password) return false;
      if (IsGuest != other.IsGuest) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (IsGuest != false) hash ^= IsGuest.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (IsGuest != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsGuest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (IsGuest != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SRegisterRequest other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.IsGuest != false) {
        IsGuest = other.IsGuest;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 24: {
            IsGuest = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SRegisterRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 1000,
      }

    }
    #endregion

  }

  public sealed partial class S2CRegisterResponse : pb::IMessage<S2CRegisterResponse> {
    private static readonly pb::MessageParser<S2CRegisterResponse> _parser = new pb::MessageParser<S2CRegisterResponse>(() => new S2CRegisterResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CRegisterResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRegisterResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRegisterResponse(S2CRegisterResponse other) : this() {
      account_ = other.account_;
      password_ = other.password_;
      isGuest_ = other.isGuest_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRegisterResponse Clone() {
      return new S2CRegisterResponse(this);
    }

    /// <summary>Field number for the "Account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    /// <summary>
    /// 账号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    /// <summary>
    /// 密码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsGuest" field.</summary>
    public const int IsGuestFieldNumber = 3;
    private bool isGuest_;
    /// <summary>
    /// 是否游客
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsGuest {
      get { return isGuest_; }
      set {
        isGuest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CRegisterResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CRegisterResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (Password != other.Password) return false;
      if (IsGuest != other.IsGuest) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (IsGuest != false) hash ^= IsGuest.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (IsGuest != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsGuest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (IsGuest != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CRegisterResponse other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.IsGuest != false) {
        IsGuest = other.IsGuest;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 24: {
            IsGuest = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CRegisterResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 1001,
      }

    }
    #endregion

  }

  /// <summary>
  /// 游客绑定新账号
  /// </summary>
  public sealed partial class C2SGuestBindNewAccountRequest : pb::IMessage<C2SGuestBindNewAccountRequest> {
    private static readonly pb::MessageParser<C2SGuestBindNewAccountRequest> _parser = new pb::MessageParser<C2SGuestBindNewAccountRequest>(() => new C2SGuestBindNewAccountRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGuestBindNewAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGuestBindNewAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGuestBindNewAccountRequest(C2SGuestBindNewAccountRequest other) : this() {
      serverId_ = other.serverId_;
      account_ = other.account_;
      password_ = other.password_;
      newAccount_ = other.newAccount_;
      newPassword_ = other.newPassword_;
      newChannel_ = other.newChannel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGuestBindNewAccountRequest Clone() {
      return new C2SGuestBindNewAccountRequest(this);
    }

    /// <summary>Field number for the "ServerId" field.</summary>
    public const int ServerIdFieldNumber = 1;
    private int serverId_;
    /// <summary>
    /// 服务器ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ServerId {
      get { return serverId_; }
      set {
        serverId_ = value;
      }
    }

    /// <summary>Field number for the "Account" field.</summary>
    public const int AccountFieldNumber = 2;
    private string account_ = "";
    /// <summary>
    /// 旧帐号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Password" field.</summary>
    public const int PasswordFieldNumber = 3;
    private string password_ = "";
    /// <summary>
    /// 旧密码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NewAccount" field.</summary>
    public const int NewAccountFieldNumber = 4;
    private string newAccount_ = "";
    /// <summary>
    /// 新账号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NewAccount {
      get { return newAccount_; }
      set {
        newAccount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NewPassword" field.</summary>
    public const int NewPasswordFieldNumber = 5;
    private string newPassword_ = "";
    /// <summary>
    /// 新密码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NewPassword {
      get { return newPassword_; }
      set {
        newPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NewChannel" field.</summary>
    public const int NewChannelFieldNumber = 6;
    private string newChannel_ = "";
    /// <summary>
    /// 渠道
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NewChannel {
      get { return newChannel_; }
      set {
        newChannel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGuestBindNewAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGuestBindNewAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServerId != other.ServerId) return false;
      if (Account != other.Account) return false;
      if (Password != other.Password) return false;
      if (NewAccount != other.NewAccount) return false;
      if (NewPassword != other.NewPassword) return false;
      if (NewChannel != other.NewChannel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServerId != 0) hash ^= ServerId.GetHashCode();
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (NewAccount.Length != 0) hash ^= NewAccount.GetHashCode();
      if (NewPassword.Length != 0) hash ^= NewPassword.GetHashCode();
      if (NewChannel.Length != 0) hash ^= NewChannel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ServerId);
      }
      if (Account.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Account);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (NewAccount.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NewAccount);
      }
      if (NewPassword.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NewPassword);
      }
      if (NewChannel.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(NewChannel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServerId);
      }
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (NewAccount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewAccount);
      }
      if (NewPassword.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewPassword);
      }
      if (NewChannel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewChannel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGuestBindNewAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.ServerId != 0) {
        ServerId = other.ServerId;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.NewAccount.Length != 0) {
        NewAccount = other.NewAccount;
      }
      if (other.NewPassword.Length != 0) {
        NewPassword = other.NewPassword;
      }
      if (other.NewChannel.Length != 0) {
        NewChannel = other.NewChannel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ServerId = input.ReadInt32();
            break;
          }
          case 18: {
            Account = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
          case 34: {
            NewAccount = input.ReadString();
            break;
          }
          case 42: {
            NewPassword = input.ReadString();
            break;
          }
          case 50: {
            NewChannel = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGuestBindNewAccountRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 1003,
      }

    }
    #endregion

  }

  public sealed partial class S2CGuestBindNewAccountResponse : pb::IMessage<S2CGuestBindNewAccountResponse> {
    private static readonly pb::MessageParser<S2CGuestBindNewAccountResponse> _parser = new pb::MessageParser<S2CGuestBindNewAccountResponse>(() => new S2CGuestBindNewAccountResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGuestBindNewAccountResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGuestBindNewAccountResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGuestBindNewAccountResponse(S2CGuestBindNewAccountResponse other) : this() {
      serverId_ = other.serverId_;
      account_ = other.account_;
      newAccount_ = other.newAccount_;
      newPassword_ = other.newPassword_;
      newChannel_ = other.newChannel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGuestBindNewAccountResponse Clone() {
      return new S2CGuestBindNewAccountResponse(this);
    }

    /// <summary>Field number for the "ServerId" field.</summary>
    public const int ServerIdFieldNumber = 1;
    private int serverId_;
    /// <summary>
    /// 服务器ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ServerId {
      get { return serverId_; }
      set {
        serverId_ = value;
      }
    }

    /// <summary>Field number for the "Account" field.</summary>
    public const int AccountFieldNumber = 2;
    private string account_ = "";
    /// <summary>
    /// 旧帐号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NewAccount" field.</summary>
    public const int NewAccountFieldNumber = 3;
    private string newAccount_ = "";
    /// <summary>
    /// 新账号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NewAccount {
      get { return newAccount_; }
      set {
        newAccount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NewPassword" field.</summary>
    public const int NewPasswordFieldNumber = 4;
    private string newPassword_ = "";
    /// <summary>
    /// 新密码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NewPassword {
      get { return newPassword_; }
      set {
        newPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NewChannel" field.</summary>
    public const int NewChannelFieldNumber = 5;
    private string newChannel_ = "";
    /// <summary>
    /// 渠道
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NewChannel {
      get { return newChannel_; }
      set {
        newChannel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGuestBindNewAccountResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGuestBindNewAccountResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServerId != other.ServerId) return false;
      if (Account != other.Account) return false;
      if (NewAccount != other.NewAccount) return false;
      if (NewPassword != other.NewPassword) return false;
      if (NewChannel != other.NewChannel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServerId != 0) hash ^= ServerId.GetHashCode();
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (NewAccount.Length != 0) hash ^= NewAccount.GetHashCode();
      if (NewPassword.Length != 0) hash ^= NewPassword.GetHashCode();
      if (NewChannel.Length != 0) hash ^= NewChannel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ServerId);
      }
      if (Account.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Account);
      }
      if (NewAccount.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NewAccount);
      }
      if (NewPassword.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NewPassword);
      }
      if (NewChannel.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NewChannel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServerId);
      }
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (NewAccount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewAccount);
      }
      if (NewPassword.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewPassword);
      }
      if (NewChannel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewChannel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGuestBindNewAccountResponse other) {
      if (other == null) {
        return;
      }
      if (other.ServerId != 0) {
        ServerId = other.ServerId;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.NewAccount.Length != 0) {
        NewAccount = other.NewAccount;
      }
      if (other.NewPassword.Length != 0) {
        NewPassword = other.NewPassword;
      }
      if (other.NewChannel.Length != 0) {
        NewChannel = other.NewChannel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ServerId = input.ReadInt32();
            break;
          }
          case 18: {
            Account = input.ReadString();
            break;
          }
          case 26: {
            NewAccount = input.ReadString();
            break;
          }
          case 34: {
            NewPassword = input.ReadString();
            break;
          }
          case 42: {
            NewChannel = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGuestBindNewAccountResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 1004,
      }

    }
    #endregion

  }

  /// <summary>
  /// 修改密码
  /// </summary>
  public sealed partial class C2SSetLoginPasswordRequest : pb::IMessage<C2SSetLoginPasswordRequest> {
    private static readonly pb::MessageParser<C2SSetLoginPasswordRequest> _parser = new pb::MessageParser<C2SSetLoginPasswordRequest>(() => new C2SSetLoginPasswordRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SSetLoginPasswordRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSetLoginPasswordRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSetLoginPasswordRequest(C2SSetLoginPasswordRequest other) : this() {
      account_ = other.account_;
      password_ = other.password_;
      newPassword_ = other.newPassword_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSetLoginPasswordRequest Clone() {
      return new C2SSetLoginPasswordRequest(this);
    }

    /// <summary>Field number for the "Account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NewPassword" field.</summary>
    public const int NewPasswordFieldNumber = 3;
    private string newPassword_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NewPassword {
      get { return newPassword_; }
      set {
        newPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SSetLoginPasswordRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SSetLoginPasswordRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (Password != other.Password) return false;
      if (NewPassword != other.NewPassword) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (NewPassword.Length != 0) hash ^= NewPassword.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (NewPassword.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NewPassword);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (NewPassword.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewPassword);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SSetLoginPasswordRequest other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.NewPassword.Length != 0) {
        NewPassword = other.NewPassword;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 26: {
            NewPassword = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SSetLoginPasswordRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 1005,
      }

    }
    #endregion

  }

  public sealed partial class S2CSetLoginPasswordResponse : pb::IMessage<S2CSetLoginPasswordResponse> {
    private static readonly pb::MessageParser<S2CSetLoginPasswordResponse> _parser = new pb::MessageParser<S2CSetLoginPasswordResponse>(() => new S2CSetLoginPasswordResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSetLoginPasswordResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSetLoginPasswordResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSetLoginPasswordResponse(S2CSetLoginPasswordResponse other) : this() {
      account_ = other.account_;
      password_ = other.password_;
      newPassword_ = other.newPassword_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSetLoginPasswordResponse Clone() {
      return new S2CSetLoginPasswordResponse(this);
    }

    /// <summary>Field number for the "Account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NewPassword" field.</summary>
    public const int NewPasswordFieldNumber = 3;
    private string newPassword_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NewPassword {
      get { return newPassword_; }
      set {
        newPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSetLoginPasswordResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSetLoginPasswordResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (Password != other.Password) return false;
      if (NewPassword != other.NewPassword) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (NewPassword.Length != 0) hash ^= NewPassword.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (NewPassword.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NewPassword);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (NewPassword.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewPassword);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSetLoginPasswordResponse other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.NewPassword.Length != 0) {
        NewPassword = other.NewPassword;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 26: {
            NewPassword = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CSetLoginPasswordResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 1006,
      }

    }
    #endregion

  }

  /// <summary>
  /// 登陆
  /// </summary>
  public sealed partial class C2SLoginRequest : pb::IMessage<C2SLoginRequest> {
    private static readonly pb::MessageParser<C2SLoginRequest> _parser = new pb::MessageParser<C2SLoginRequest>(() => new C2SLoginRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SLoginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SLoginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SLoginRequest(C2SLoginRequest other) : this() {
      acc_ = other.acc_;
      password_ = other.password_;
      channel_ = other.channel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SLoginRequest Clone() {
      return new C2SLoginRequest(this);
    }

    /// <summary>Field number for the "Acc" field.</summary>
    public const int AccFieldNumber = 1;
    private string acc_ = "";
    /// <summary>
    /// 账号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Acc {
      get { return acc_; }
      set {
        acc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    /// <summary>
    /// 密码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Channel" field.</summary>
    public const int ChannelFieldNumber = 3;
    private string channel_ = "";
    /// <summary>
    /// 渠道    目前三种情况，跟服务器设置是否验证账号有关  1. 空表示不需要渠道   2. "guest"表示游客登陆   3. "facebook" 表示facebook账号登陆
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SLoginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SLoginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Acc != other.Acc) return false;
      if (Password != other.Password) return false;
      if (Channel != other.Channel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Acc.Length != 0) hash ^= Acc.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Acc.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Acc);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Channel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Acc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Acc);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SLoginRequest other) {
      if (other == null) {
        return;
      }
      if (other.Acc.Length != 0) {
        Acc = other.Acc;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Acc = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 26: {
            Channel = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SLoginRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 1100,
      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器信息
  /// </summary>
  public sealed partial class ServerInfo : pb::IMessage<ServerInfo> {
    private static readonly pb::MessageParser<ServerInfo> _parser = new pb::MessageParser<ServerInfo>(() => new ServerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerInfo(ServerInfo other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      iP_ = other.iP_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerInfo Clone() {
      return new ServerInfo(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IP" field.</summary>
    public const int IPFieldNumber = 3;
    private string iP_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IP {
      get { return iP_; }
      set {
        iP_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (IP != other.IP) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (IP.Length != 0) hash ^= IP.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (IP.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IP);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (IP.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IP);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerInfo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.IP.Length != 0) {
        IP = other.IP;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            IP = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 玩家信息
  /// </summary>
  public sealed partial class AccountPlayerInfo : pb::IMessage<AccountPlayerInfo> {
    private static readonly pb::MessageParser<AccountPlayerInfo> _parser = new pb::MessageParser<AccountPlayerInfo>(() => new AccountPlayerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountPlayerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountPlayerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountPlayerInfo(AccountPlayerInfo other) : this() {
      serverId_ = other.serverId_;
      playerName_ = other.playerName_;
      playerLevel_ = other.playerLevel_;
      playerHead_ = other.playerHead_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountPlayerInfo Clone() {
      return new AccountPlayerInfo(this);
    }

    /// <summary>Field number for the "ServerId" field.</summary>
    public const int ServerIdFieldNumber = 1;
    private int serverId_;
    /// <summary>
    /// 服务器ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ServerId {
      get { return serverId_; }
      set {
        serverId_ = value;
      }
    }

    /// <summary>Field number for the "PlayerName" field.</summary>
    public const int PlayerNameFieldNumber = 2;
    private string playerName_ = "";
    /// <summary>
    /// 昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PlayerLevel" field.</summary>
    public const int PlayerLevelFieldNumber = 3;
    private int playerLevel_;
    /// <summary>
    /// 等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerLevel {
      get { return playerLevel_; }
      set {
        playerLevel_ = value;
      }
    }

    /// <summary>Field number for the "PlayerHead" field.</summary>
    public const int PlayerHeadFieldNumber = 4;
    private int playerHead_;
    /// <summary>
    /// 头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerHead {
      get { return playerHead_; }
      set {
        playerHead_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountPlayerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountPlayerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServerId != other.ServerId) return false;
      if (PlayerName != other.PlayerName) return false;
      if (PlayerLevel != other.PlayerLevel) return false;
      if (PlayerHead != other.PlayerHead) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServerId != 0) hash ^= ServerId.GetHashCode();
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (PlayerLevel != 0) hash ^= PlayerLevel.GetHashCode();
      if (PlayerHead != 0) hash ^= PlayerHead.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ServerId);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerName);
      }
      if (PlayerLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PlayerLevel);
      }
      if (PlayerHead != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PlayerHead);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServerId);
      }
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (PlayerLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerLevel);
      }
      if (PlayerHead != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerHead);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountPlayerInfo other) {
      if (other == null) {
        return;
      }
      if (other.ServerId != 0) {
        ServerId = other.ServerId;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      if (other.PlayerLevel != 0) {
        PlayerLevel = other.PlayerLevel;
      }
      if (other.PlayerHead != 0) {
        PlayerHead = other.PlayerHead;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ServerId = input.ReadInt32();
            break;
          }
          case 18: {
            PlayerName = input.ReadString();
            break;
          }
          case 24: {
            PlayerLevel = input.ReadInt32();
            break;
          }
          case 32: {
            PlayerHead = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 登陆返回
  /// </summary>
  public sealed partial class S2CLoginResponse : pb::IMessage<S2CLoginResponse> {
    private static readonly pb::MessageParser<S2CLoginResponse> _parser = new pb::MessageParser<S2CLoginResponse>(() => new S2CLoginResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CLoginResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CLoginResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CLoginResponse(S2CLoginResponse other) : this() {
      acc_ = other.acc_;
      token_ = other.token_;
      channel_ = other.channel_;
      playerInfo_ = other.playerInfo_ != null ? other.playerInfo_.Clone() : null;
      gameIP_ = other.gameIP_;
      boundAccount_ = other.boundAccount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CLoginResponse Clone() {
      return new S2CLoginResponse(this);
    }

    /// <summary>Field number for the "Acc" field.</summary>
    public const int AccFieldNumber = 1;
    private string acc_ = "";
    /// <summary>
    /// 账号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Acc {
      get { return acc_; }
      set {
        acc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Token" field.</summary>
    public const int TokenFieldNumber = 2;
    private string token_ = "";
    /// <summary>
    /// 令牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Channel" field.</summary>
    public const int ChannelFieldNumber = 3;
    private string channel_ = "";
    /// <summary>
    /// 渠道
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PlayerInfo" field.</summary>
    public const int PlayerInfoFieldNumber = 4;
    private global::Msg.ClientMessage.AccountPlayerInfo playerInfo_;
    /// <summary>
    /// 账号玩家列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ClientMessage.AccountPlayerInfo PlayerInfo {
      get { return playerInfo_; }
      set {
        playerInfo_ = value;
      }
    }

    /// <summary>Field number for the "GameIP" field.</summary>
    public const int GameIPFieldNumber = 5;
    private string gameIP_ = "";
    /// <summary>
    /// 游戏服地址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameIP {
      get { return gameIP_; }
      set {
        gameIP_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BoundAccount" field.</summary>
    public const int BoundAccountFieldNumber = 6;
    private string boundAccount_ = "";
    /// <summary>
    /// 已绑定账号，游客模式下
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BoundAccount {
      get { return boundAccount_; }
      set {
        boundAccount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CLoginResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CLoginResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Acc != other.Acc) return false;
      if (Token != other.Token) return false;
      if (Channel != other.Channel) return false;
      if (!object.Equals(PlayerInfo, other.PlayerInfo)) return false;
      if (GameIP != other.GameIP) return false;
      if (BoundAccount != other.BoundAccount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Acc.Length != 0) hash ^= Acc.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (playerInfo_ != null) hash ^= PlayerInfo.GetHashCode();
      if (GameIP.Length != 0) hash ^= GameIP.GetHashCode();
      if (BoundAccount.Length != 0) hash ^= BoundAccount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Acc.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Acc);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Channel);
      }
      if (playerInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PlayerInfo);
      }
      if (GameIP.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(GameIP);
      }
      if (BoundAccount.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(BoundAccount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Acc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Acc);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (playerInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerInfo);
      }
      if (GameIP.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameIP);
      }
      if (BoundAccount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BoundAccount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CLoginResponse other) {
      if (other == null) {
        return;
      }
      if (other.Acc.Length != 0) {
        Acc = other.Acc;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.playerInfo_ != null) {
        if (playerInfo_ == null) {
          PlayerInfo = new global::Msg.ClientMessage.AccountPlayerInfo();
        }
        PlayerInfo.MergeFrom(other.PlayerInfo);
      }
      if (other.GameIP.Length != 0) {
        GameIP = other.GameIP;
      }
      if (other.BoundAccount.Length != 0) {
        BoundAccount = other.BoundAccount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Acc = input.ReadString();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 26: {
            Channel = input.ReadString();
            break;
          }
          case 34: {
            if (playerInfo_ == null) {
              PlayerInfo = new global::Msg.ClientMessage.AccountPlayerInfo();
            }
            input.ReadMessage(PlayerInfo);
            break;
          }
          case 42: {
            GameIP = input.ReadString();
            break;
          }
          case 50: {
            BoundAccount = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CLoginResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 1102,
      }

    }
    #endregion

  }

  /// <summary>
  //// 其它地方登录
  /// </summary>
  public sealed partial class S2COtherPlaceLogin : pb::IMessage<S2COtherPlaceLogin> {
    private static readonly pb::MessageParser<S2COtherPlaceLogin> _parser = new pb::MessageParser<S2COtherPlaceLogin>(() => new S2COtherPlaceLogin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2COtherPlaceLogin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2COtherPlaceLogin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2COtherPlaceLogin(S2COtherPlaceLogin other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2COtherPlaceLogin Clone() {
      return new S2COtherPlaceLogin(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2COtherPlaceLogin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2COtherPlaceLogin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2COtherPlaceLogin other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2COtherPlaceLogin message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 1103,
      }

    }
    #endregion

  }

  /// <summary>
  /// 进入游戏服务器
  /// </summary>
  public sealed partial class C2SEnterGameRequest : pb::IMessage<C2SEnterGameRequest> {
    private static readonly pb::MessageParser<C2SEnterGameRequest> _parser = new pb::MessageParser<C2SEnterGameRequest>(() => new C2SEnterGameRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SEnterGameRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SEnterGameRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SEnterGameRequest(C2SEnterGameRequest other) : this() {
      acc_ = other.acc_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SEnterGameRequest Clone() {
      return new C2SEnterGameRequest(this);
    }

    /// <summary>Field number for the "Acc" field.</summary>
    public const int AccFieldNumber = 1;
    private string acc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Acc {
      get { return acc_; }
      set {
        acc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SEnterGameRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SEnterGameRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Acc != other.Acc) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Acc.Length != 0) hash ^= Acc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Acc.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Acc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Acc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Acc);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SEnterGameRequest other) {
      if (other == null) {
        return;
      }
      if (other.Acc.Length != 0) {
        Acc = other.Acc;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Acc = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SEnterGameRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 1110,
      }

    }
    #endregion

  }

  /// <summary>
  /// 返回
  /// </summary>
  public sealed partial class S2CEnterGameResponse : pb::IMessage<S2CEnterGameResponse> {
    private static readonly pb::MessageParser<S2CEnterGameResponse> _parser = new pb::MessageParser<S2CEnterGameResponse>(() => new S2CEnterGameResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CEnterGameResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CEnterGameResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CEnterGameResponse(S2CEnterGameResponse other) : this() {
      acc_ = other.acc_;
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CEnterGameResponse Clone() {
      return new S2CEnterGameResponse(this);
    }

    /// <summary>Field number for the "Acc" field.</summary>
    public const int AccFieldNumber = 1;
    private string acc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Acc {
      get { return acc_; }
      set {
        acc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CEnterGameResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CEnterGameResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Acc != other.Acc) return false;
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Acc.Length != 0) hash ^= Acc.GetHashCode();
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Acc.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Acc);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Acc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Acc);
      }
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CEnterGameResponse other) {
      if (other == null) {
        return;
      }
      if (other.Acc.Length != 0) {
        Acc = other.Acc;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Acc = input.ReadString();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CEnterGameResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 1111,
      }

    }
    #endregion

  }

  /// <summary>
  /// 通知客户端进入游戏服务器完成
  /// </summary>
  public sealed partial class S2CEnterGameCompleteNotify : pb::IMessage<S2CEnterGameCompleteNotify> {
    private static readonly pb::MessageParser<S2CEnterGameCompleteNotify> _parser = new pb::MessageParser<S2CEnterGameCompleteNotify>(() => new S2CEnterGameCompleteNotify());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CEnterGameCompleteNotify> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CEnterGameCompleteNotify() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CEnterGameCompleteNotify(S2CEnterGameCompleteNotify other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CEnterGameCompleteNotify Clone() {
      return new S2CEnterGameCompleteNotify(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CEnterGameCompleteNotify);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CEnterGameCompleteNotify other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CEnterGameCompleteNotify other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CEnterGameCompleteNotify message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 1112,
      }

    }
    #endregion

  }

  /// <summary>
  /// 离开游戏服务器
  /// </summary>
  public sealed partial class C2SLeaveGameRequest : pb::IMessage<C2SLeaveGameRequest> {
    private static readonly pb::MessageParser<C2SLeaveGameRequest> _parser = new pb::MessageParser<C2SLeaveGameRequest>(() => new C2SLeaveGameRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SLeaveGameRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SLeaveGameRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SLeaveGameRequest(C2SLeaveGameRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SLeaveGameRequest Clone() {
      return new C2SLeaveGameRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SLeaveGameRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SLeaveGameRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SLeaveGameRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SLeaveGameRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 1113,
      }

    }
    #endregion

  }

  /// <summary>
  /// 返回
  /// </summary>
  public sealed partial class S2CLeaveGameResponse : pb::IMessage<S2CLeaveGameResponse> {
    private static readonly pb::MessageParser<S2CLeaveGameResponse> _parser = new pb::MessageParser<S2CLeaveGameResponse>(() => new S2CLeaveGameResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CLeaveGameResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CLeaveGameResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CLeaveGameResponse(S2CLeaveGameResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CLeaveGameResponse Clone() {
      return new S2CLeaveGameResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CLeaveGameResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CLeaveGameResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CLeaveGameResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CLeaveGameResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 1114,
      }

    }
    #endregion

  }

  /// <summary>
  /// 请求玩家信息
  /// </summary>
  public sealed partial class C2SPlayerInfoRequest : pb::IMessage<C2SPlayerInfoRequest> {
    private static readonly pb::MessageParser<C2SPlayerInfoRequest> _parser = new pb::MessageParser<C2SPlayerInfoRequest>(() => new C2SPlayerInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SPlayerInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPlayerInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPlayerInfoRequest(C2SPlayerInfoRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPlayerInfoRequest Clone() {
      return new C2SPlayerInfoRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SPlayerInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SPlayerInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SPlayerInfoRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SPlayerInfoRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 1150,
      }

    }
    #endregion

  }

  /// <summary>
  /// 玩家信息
  /// </summary>
  public sealed partial class S2CPlayerInfoResponse : pb::IMessage<S2CPlayerInfoResponse> {
    private static readonly pb::MessageParser<S2CPlayerInfoResponse> _parser = new pb::MessageParser<S2CPlayerInfoResponse>(() => new S2CPlayerInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CPlayerInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPlayerInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPlayerInfoResponse(S2CPlayerInfoResponse other) : this() {
      level_ = other.level_;
      exp_ = other.exp_;
      gold_ = other.gold_;
      diamond_ = other.diamond_;
      head_ = other.head_;
      vipLevel_ = other.vipLevel_;
      name_ = other.name_;
      sysTime_ = other.sysTime_;
      curMaxStage_ = other.curMaxStage_;
      curUnlockMaxStage_ = other.curUnlockMaxStage_;
      charmVal_ = other.charmVal_;
      star_ = other.star_;
      zan_ = other.zan_;
      catFood_ = other.catFood_;
      spirit_ = other.spirit_;
      friendPoints_ = other.friendPoints_;
      soulStone_ = other.soulStone_;
      charmMetal_ = other.charmMetal_;
      historicalMaxStar_ = other.historicalMaxStar_;
      changeNameNum_ = other.changeNameNum_;
      changeNameFreeNum_ = other.changeNameFreeNum_;
      changeNameCostDiamond_ = other.changeNameCostDiamond_;
      nextStaminaRemainSecs_ = other.nextStaminaRemainSecs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPlayerInfoResponse Clone() {
      return new S2CPlayerInfoResponse(this);
    }

    /// <summary>Field number for the "Level" field.</summary>
    public const int LevelFieldNumber = 1;
    private int level_;
    /// <summary>
    /// 等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "Exp" field.</summary>
    public const int ExpFieldNumber = 2;
    private int exp_;
    /// <summary>
    /// 经验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Exp {
      get { return exp_; }
      set {
        exp_ = value;
      }
    }

    /// <summary>Field number for the "Gold" field.</summary>
    public const int GoldFieldNumber = 3;
    private int gold_;
    /// <summary>
    /// 金币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gold {
      get { return gold_; }
      set {
        gold_ = value;
      }
    }

    /// <summary>Field number for the "Diamond" field.</summary>
    public const int DiamondFieldNumber = 4;
    private int diamond_;
    /// <summary>
    /// 钻石
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Diamond {
      get { return diamond_; }
      set {
        diamond_ = value;
      }
    }

    /// <summary>Field number for the "Head" field.</summary>
    public const int HeadFieldNumber = 5;
    private int head_;
    /// <summary>
    /// 头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Head {
      get { return head_; }
      set {
        head_ = value;
      }
    }

    /// <summary>Field number for the "VipLevel" field.</summary>
    public const int VipLevelFieldNumber = 6;
    private int vipLevel_;
    /// <summary>
    /// VIP等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VipLevel {
      get { return vipLevel_; }
      set {
        vipLevel_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 7;
    private string name_ = "";
    /// <summary>
    /// 昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SysTime" field.</summary>
    public const int SysTimeFieldNumber = 8;
    private int sysTime_;
    /// <summary>
    /// 系统时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SysTime {
      get { return sysTime_; }
      set {
        sysTime_ = value;
      }
    }

    /// <summary>Field number for the "CurMaxStage" field.</summary>
    public const int CurMaxStageFieldNumber = 9;
    private int curMaxStage_;
    /// <summary>
    /// 当前通关关卡数目
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurMaxStage {
      get { return curMaxStage_; }
      set {
        curMaxStage_ = value;
      }
    }

    /// <summary>Field number for the "CurUnlockMaxStage" field.</summary>
    public const int CurUnlockMaxStageFieldNumber = 10;
    private int curUnlockMaxStage_;
    /// <summary>
    /// 最大可通关关卡
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurUnlockMaxStage {
      get { return curUnlockMaxStage_; }
      set {
        curUnlockMaxStage_ = value;
      }
    }

    /// <summary>Field number for the "CharmVal" field.</summary>
    public const int CharmValFieldNumber = 11;
    private int charmVal_;
    /// <summary>
    /// 魅力值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CharmVal {
      get { return charmVal_; }
      set {
        charmVal_ = value;
      }
    }

    /// <summary>Field number for the "Star" field.</summary>
    public const int StarFieldNumber = 12;
    private int star_;
    /// <summary>
    /// 星数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Star {
      get { return star_; }
      set {
        star_ = value;
      }
    }

    /// <summary>Field number for the "Zan" field.</summary>
    public const int ZanFieldNumber = 13;
    private int zan_;
    /// <summary>
    /// 点赞数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Zan {
      get { return zan_; }
      set {
        zan_ = value;
      }
    }

    /// <summary>Field number for the "CatFood" field.</summary>
    public const int CatFoodFieldNumber = 14;
    private int catFood_;
    /// <summary>
    /// 猫粮
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatFood {
      get { return catFood_; }
      set {
        catFood_ = value;
      }
    }

    /// <summary>Field number for the "Spirit" field.</summary>
    public const int SpiritFieldNumber = 15;
    private int spirit_;
    /// <summary>
    /// 体力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Spirit {
      get { return spirit_; }
      set {
        spirit_ = value;
      }
    }

    /// <summary>Field number for the "FriendPoints" field.</summary>
    public const int FriendPointsFieldNumber = 16;
    private int friendPoints_;
    /// <summary>
    /// 友情点
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendPoints {
      get { return friendPoints_; }
      set {
        friendPoints_ = value;
      }
    }

    /// <summary>Field number for the "SoulStone" field.</summary>
    public const int SoulStoneFieldNumber = 17;
    private int soulStone_;
    /// <summary>
    /// 魂石
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SoulStone {
      get { return soulStone_; }
      set {
        soulStone_ = value;
      }
    }

    /// <summary>Field number for the "CharmMetal" field.</summary>
    public const int CharmMetalFieldNumber = 18;
    private int charmMetal_;
    /// <summary>
    /// 魅力勋章
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CharmMetal {
      get { return charmMetal_; }
      set {
        charmMetal_ = value;
      }
    }

    /// <summary>Field number for the "HistoricalMaxStar" field.</summary>
    public const int HistoricalMaxStarFieldNumber = 19;
    private int historicalMaxStar_;
    /// <summary>
    /// 历史最大星星数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HistoricalMaxStar {
      get { return historicalMaxStar_; }
      set {
        historicalMaxStar_ = value;
      }
    }

    /// <summary>Field number for the "ChangeNameNum" field.</summary>
    public const int ChangeNameNumFieldNumber = 20;
    private int changeNameNum_;
    /// <summary>
    /// 改名次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChangeNameNum {
      get { return changeNameNum_; }
      set {
        changeNameNum_ = value;
      }
    }

    /// <summary>Field number for the "ChangeNameFreeNum" field.</summary>
    public const int ChangeNameFreeNumFieldNumber = 21;
    private int changeNameFreeNum_;
    /// <summary>
    /// 已用免费次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChangeNameFreeNum {
      get { return changeNameFreeNum_; }
      set {
        changeNameFreeNum_ = value;
      }
    }

    /// <summary>Field number for the "ChangeNameCostDiamond" field.</summary>
    public const int ChangeNameCostDiamondFieldNumber = 22;
    private int changeNameCostDiamond_;
    /// <summary>
    /// 改名价格
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChangeNameCostDiamond {
      get { return changeNameCostDiamond_; }
      set {
        changeNameCostDiamond_ = value;
      }
    }

    /// <summary>Field number for the "NextStaminaRemainSecs" field.</summary>
    public const int NextStaminaRemainSecsFieldNumber = 23;
    private int nextStaminaRemainSecs_;
    /// <summary>
    /// 下一次回复体力剩余时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NextStaminaRemainSecs {
      get { return nextStaminaRemainSecs_; }
      set {
        nextStaminaRemainSecs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CPlayerInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CPlayerInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Level != other.Level) return false;
      if (Exp != other.Exp) return false;
      if (Gold != other.Gold) return false;
      if (Diamond != other.Diamond) return false;
      if (Head != other.Head) return false;
      if (VipLevel != other.VipLevel) return false;
      if (Name != other.Name) return false;
      if (SysTime != other.SysTime) return false;
      if (CurMaxStage != other.CurMaxStage) return false;
      if (CurUnlockMaxStage != other.CurUnlockMaxStage) return false;
      if (CharmVal != other.CharmVal) return false;
      if (Star != other.Star) return false;
      if (Zan != other.Zan) return false;
      if (CatFood != other.CatFood) return false;
      if (Spirit != other.Spirit) return false;
      if (FriendPoints != other.FriendPoints) return false;
      if (SoulStone != other.SoulStone) return false;
      if (CharmMetal != other.CharmMetal) return false;
      if (HistoricalMaxStar != other.HistoricalMaxStar) return false;
      if (ChangeNameNum != other.ChangeNameNum) return false;
      if (ChangeNameFreeNum != other.ChangeNameFreeNum) return false;
      if (ChangeNameCostDiamond != other.ChangeNameCostDiamond) return false;
      if (NextStaminaRemainSecs != other.NextStaminaRemainSecs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Exp != 0) hash ^= Exp.GetHashCode();
      if (Gold != 0) hash ^= Gold.GetHashCode();
      if (Diamond != 0) hash ^= Diamond.GetHashCode();
      if (Head != 0) hash ^= Head.GetHashCode();
      if (VipLevel != 0) hash ^= VipLevel.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (SysTime != 0) hash ^= SysTime.GetHashCode();
      if (CurMaxStage != 0) hash ^= CurMaxStage.GetHashCode();
      if (CurUnlockMaxStage != 0) hash ^= CurUnlockMaxStage.GetHashCode();
      if (CharmVal != 0) hash ^= CharmVal.GetHashCode();
      if (Star != 0) hash ^= Star.GetHashCode();
      if (Zan != 0) hash ^= Zan.GetHashCode();
      if (CatFood != 0) hash ^= CatFood.GetHashCode();
      if (Spirit != 0) hash ^= Spirit.GetHashCode();
      if (FriendPoints != 0) hash ^= FriendPoints.GetHashCode();
      if (SoulStone != 0) hash ^= SoulStone.GetHashCode();
      if (CharmMetal != 0) hash ^= CharmMetal.GetHashCode();
      if (HistoricalMaxStar != 0) hash ^= HistoricalMaxStar.GetHashCode();
      if (ChangeNameNum != 0) hash ^= ChangeNameNum.GetHashCode();
      if (ChangeNameFreeNum != 0) hash ^= ChangeNameFreeNum.GetHashCode();
      if (ChangeNameCostDiamond != 0) hash ^= ChangeNameCostDiamond.GetHashCode();
      if (NextStaminaRemainSecs != 0) hash ^= NextStaminaRemainSecs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Level != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Level);
      }
      if (Exp != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Exp);
      }
      if (Gold != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Gold);
      }
      if (Diamond != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Diamond);
      }
      if (Head != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Head);
      }
      if (VipLevel != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(VipLevel);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (SysTime != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(SysTime);
      }
      if (CurMaxStage != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CurMaxStage);
      }
      if (CurUnlockMaxStage != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(CurUnlockMaxStage);
      }
      if (CharmVal != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(CharmVal);
      }
      if (Star != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Star);
      }
      if (Zan != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Zan);
      }
      if (CatFood != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(CatFood);
      }
      if (Spirit != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Spirit);
      }
      if (FriendPoints != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(FriendPoints);
      }
      if (SoulStone != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(SoulStone);
      }
      if (CharmMetal != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(CharmMetal);
      }
      if (HistoricalMaxStar != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(HistoricalMaxStar);
      }
      if (ChangeNameNum != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(ChangeNameNum);
      }
      if (ChangeNameFreeNum != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(ChangeNameFreeNum);
      }
      if (ChangeNameCostDiamond != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(ChangeNameCostDiamond);
      }
      if (NextStaminaRemainSecs != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(NextStaminaRemainSecs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (Exp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exp);
      }
      if (Gold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gold);
      }
      if (Diamond != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Diamond);
      }
      if (Head != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Head);
      }
      if (VipLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VipLevel);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (SysTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SysTime);
      }
      if (CurMaxStage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurMaxStage);
      }
      if (CurUnlockMaxStage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurUnlockMaxStage);
      }
      if (CharmVal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CharmVal);
      }
      if (Star != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Star);
      }
      if (Zan != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Zan);
      }
      if (CatFood != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatFood);
      }
      if (Spirit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Spirit);
      }
      if (FriendPoints != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(FriendPoints);
      }
      if (SoulStone != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SoulStone);
      }
      if (CharmMetal != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CharmMetal);
      }
      if (HistoricalMaxStar != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HistoricalMaxStar);
      }
      if (ChangeNameNum != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ChangeNameNum);
      }
      if (ChangeNameFreeNum != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ChangeNameFreeNum);
      }
      if (ChangeNameCostDiamond != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ChangeNameCostDiamond);
      }
      if (NextStaminaRemainSecs != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NextStaminaRemainSecs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CPlayerInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Exp != 0) {
        Exp = other.Exp;
      }
      if (other.Gold != 0) {
        Gold = other.Gold;
      }
      if (other.Diamond != 0) {
        Diamond = other.Diamond;
      }
      if (other.Head != 0) {
        Head = other.Head;
      }
      if (other.VipLevel != 0) {
        VipLevel = other.VipLevel;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.SysTime != 0) {
        SysTime = other.SysTime;
      }
      if (other.CurMaxStage != 0) {
        CurMaxStage = other.CurMaxStage;
      }
      if (other.CurUnlockMaxStage != 0) {
        CurUnlockMaxStage = other.CurUnlockMaxStage;
      }
      if (other.CharmVal != 0) {
        CharmVal = other.CharmVal;
      }
      if (other.Star != 0) {
        Star = other.Star;
      }
      if (other.Zan != 0) {
        Zan = other.Zan;
      }
      if (other.CatFood != 0) {
        CatFood = other.CatFood;
      }
      if (other.Spirit != 0) {
        Spirit = other.Spirit;
      }
      if (other.FriendPoints != 0) {
        FriendPoints = other.FriendPoints;
      }
      if (other.SoulStone != 0) {
        SoulStone = other.SoulStone;
      }
      if (other.CharmMetal != 0) {
        CharmMetal = other.CharmMetal;
      }
      if (other.HistoricalMaxStar != 0) {
        HistoricalMaxStar = other.HistoricalMaxStar;
      }
      if (other.ChangeNameNum != 0) {
        ChangeNameNum = other.ChangeNameNum;
      }
      if (other.ChangeNameFreeNum != 0) {
        ChangeNameFreeNum = other.ChangeNameFreeNum;
      }
      if (other.ChangeNameCostDiamond != 0) {
        ChangeNameCostDiamond = other.ChangeNameCostDiamond;
      }
      if (other.NextStaminaRemainSecs != 0) {
        NextStaminaRemainSecs = other.NextStaminaRemainSecs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Level = input.ReadInt32();
            break;
          }
          case 16: {
            Exp = input.ReadInt32();
            break;
          }
          case 24: {
            Gold = input.ReadInt32();
            break;
          }
          case 32: {
            Diamond = input.ReadInt32();
            break;
          }
          case 40: {
            Head = input.ReadInt32();
            break;
          }
          case 48: {
            VipLevel = input.ReadInt32();
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
          case 64: {
            SysTime = input.ReadInt32();
            break;
          }
          case 72: {
            CurMaxStage = input.ReadInt32();
            break;
          }
          case 80: {
            CurUnlockMaxStage = input.ReadInt32();
            break;
          }
          case 88: {
            CharmVal = input.ReadInt32();
            break;
          }
          case 96: {
            Star = input.ReadInt32();
            break;
          }
          case 104: {
            Zan = input.ReadInt32();
            break;
          }
          case 112: {
            CatFood = input.ReadInt32();
            break;
          }
          case 120: {
            Spirit = input.ReadInt32();
            break;
          }
          case 128: {
            FriendPoints = input.ReadInt32();
            break;
          }
          case 136: {
            SoulStone = input.ReadInt32();
            break;
          }
          case 144: {
            CharmMetal = input.ReadInt32();
            break;
          }
          case 152: {
            HistoricalMaxStar = input.ReadInt32();
            break;
          }
          case 160: {
            ChangeNameNum = input.ReadInt32();
            break;
          }
          case 168: {
            ChangeNameFreeNum = input.ReadInt32();
            break;
          }
          case 176: {
            ChangeNameCostDiamond = input.ReadInt32();
            break;
          }
          case 184: {
            NextStaminaRemainSecs = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CPlayerInfoResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 1151,
      }

    }
    #endregion

  }

  /// <summary>
  /// 改名
  /// </summary>
  public sealed partial class C2SPlayerChangeNameRequest : pb::IMessage<C2SPlayerChangeNameRequest> {
    private static readonly pb::MessageParser<C2SPlayerChangeNameRequest> _parser = new pb::MessageParser<C2SPlayerChangeNameRequest>(() => new C2SPlayerChangeNameRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SPlayerChangeNameRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPlayerChangeNameRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPlayerChangeNameRequest(C2SPlayerChangeNameRequest other) : this() {
      newName_ = other.newName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPlayerChangeNameRequest Clone() {
      return new C2SPlayerChangeNameRequest(this);
    }

    /// <summary>Field number for the "NewName" field.</summary>
    public const int NewNameFieldNumber = 1;
    private string newName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NewName {
      get { return newName_; }
      set {
        newName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SPlayerChangeNameRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SPlayerChangeNameRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NewName != other.NewName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NewName.Length != 0) hash ^= NewName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NewName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NewName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NewName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SPlayerChangeNameRequest other) {
      if (other == null) {
        return;
      }
      if (other.NewName.Length != 0) {
        NewName = other.NewName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NewName = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SPlayerChangeNameRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 1152,
      }

    }
    #endregion

  }

  public sealed partial class S2CPlayerChangeNameResponse : pb::IMessage<S2CPlayerChangeNameResponse> {
    private static readonly pb::MessageParser<S2CPlayerChangeNameResponse> _parser = new pb::MessageParser<S2CPlayerChangeNameResponse>(() => new S2CPlayerChangeNameResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CPlayerChangeNameResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPlayerChangeNameResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPlayerChangeNameResponse(S2CPlayerChangeNameResponse other) : this() {
      newName_ = other.newName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPlayerChangeNameResponse Clone() {
      return new S2CPlayerChangeNameResponse(this);
    }

    /// <summary>Field number for the "NewName" field.</summary>
    public const int NewNameFieldNumber = 1;
    private string newName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NewName {
      get { return newName_; }
      set {
        newName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CPlayerChangeNameResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CPlayerChangeNameResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NewName != other.NewName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NewName.Length != 0) hash ^= NewName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NewName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NewName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NewName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CPlayerChangeNameResponse other) {
      if (other == null) {
        return;
      }
      if (other.NewName.Length != 0) {
        NewName = other.NewName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NewName = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CPlayerChangeNameResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 1153,
      }

    }
    #endregion

  }

  /// <summary>
  /// 换头像
  /// </summary>
  public sealed partial class C2SPlayerChangeHeadRequest : pb::IMessage<C2SPlayerChangeHeadRequest> {
    private static readonly pb::MessageParser<C2SPlayerChangeHeadRequest> _parser = new pb::MessageParser<C2SPlayerChangeHeadRequest>(() => new C2SPlayerChangeHeadRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SPlayerChangeHeadRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPlayerChangeHeadRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPlayerChangeHeadRequest(C2SPlayerChangeHeadRequest other) : this() {
      newHead_ = other.newHead_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPlayerChangeHeadRequest Clone() {
      return new C2SPlayerChangeHeadRequest(this);
    }

    /// <summary>Field number for the "NewHead" field.</summary>
    public const int NewHeadFieldNumber = 1;
    private int newHead_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NewHead {
      get { return newHead_; }
      set {
        newHead_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SPlayerChangeHeadRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SPlayerChangeHeadRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NewHead != other.NewHead) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NewHead != 0) hash ^= NewHead.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NewHead != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NewHead);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NewHead != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NewHead);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SPlayerChangeHeadRequest other) {
      if (other == null) {
        return;
      }
      if (other.NewHead != 0) {
        NewHead = other.NewHead;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NewHead = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SPlayerChangeHeadRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 1154,
      }

    }
    #endregion

  }

  public sealed partial class S2CPlayerChangeHeadResponse : pb::IMessage<S2CPlayerChangeHeadResponse> {
    private static readonly pb::MessageParser<S2CPlayerChangeHeadResponse> _parser = new pb::MessageParser<S2CPlayerChangeHeadResponse>(() => new S2CPlayerChangeHeadResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CPlayerChangeHeadResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPlayerChangeHeadResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPlayerChangeHeadResponse(S2CPlayerChangeHeadResponse other) : this() {
      newHead_ = other.newHead_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPlayerChangeHeadResponse Clone() {
      return new S2CPlayerChangeHeadResponse(this);
    }

    /// <summary>Field number for the "NewHead" field.</summary>
    public const int NewHeadFieldNumber = 1;
    private int newHead_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NewHead {
      get { return newHead_; }
      set {
        newHead_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CPlayerChangeHeadResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CPlayerChangeHeadResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NewHead != other.NewHead) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NewHead != 0) hash ^= NewHead.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NewHead != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NewHead);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NewHead != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NewHead);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CPlayerChangeHeadResponse other) {
      if (other == null) {
        return;
      }
      if (other.NewHead != 0) {
        NewHead = other.NewHead;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NewHead = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CPlayerChangeHeadResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 1155,
      }

    }
    #endregion

  }

  /// <summary>
  /// 重连
  /// </summary>
  public sealed partial class C2SReconnectRequest : pb::IMessage<C2SReconnectRequest> {
    private static readonly pb::MessageParser<C2SReconnectRequest> _parser = new pb::MessageParser<C2SReconnectRequest>(() => new C2SReconnectRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SReconnectRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SReconnectRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SReconnectRequest(C2SReconnectRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SReconnectRequest Clone() {
      return new C2SReconnectRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SReconnectRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SReconnectRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SReconnectRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SReconnectRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 1160,
      }

    }
    #endregion

  }

  public sealed partial class S2CReconnectResponse : pb::IMessage<S2CReconnectResponse> {
    private static readonly pb::MessageParser<S2CReconnectResponse> _parser = new pb::MessageParser<S2CReconnectResponse>(() => new S2CReconnectResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CReconnectResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CReconnectResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CReconnectResponse(S2CReconnectResponse other) : this() {
      newToken_ = other.newToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CReconnectResponse Clone() {
      return new S2CReconnectResponse(this);
    }

    /// <summary>Field number for the "NewToken" field.</summary>
    public const int NewTokenFieldNumber = 1;
    private string newToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NewToken {
      get { return newToken_; }
      set {
        newToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CReconnectResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CReconnectResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NewToken != other.NewToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NewToken.Length != 0) hash ^= NewToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NewToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NewToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NewToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CReconnectResponse other) {
      if (other == null) {
        return;
      }
      if (other.NewToken.Length != 0) {
        NewToken = other.NewToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NewToken = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CReconnectResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 1161,
      }

    }
    #endregion

  }

  public sealed partial class C2S_ONE_MSG : pb::IMessage<C2S_ONE_MSG> {
    private static readonly pb::MessageParser<C2S_ONE_MSG> _parser = new pb::MessageParser<C2S_ONE_MSG>(() => new C2S_ONE_MSG());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_ONE_MSG> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_ONE_MSG() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_ONE_MSG(C2S_ONE_MSG other) : this() {
      msgCode_ = other.msgCode_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_ONE_MSG Clone() {
      return new C2S_ONE_MSG(this);
    }

    /// <summary>Field number for the "MsgCode" field.</summary>
    public const int MsgCodeFieldNumber = 1;
    private int msgCode_;
    /// <summary>
    /// 消息ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgCode {
      get { return msgCode_; }
      set {
        msgCode_ = value;
      }
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 2;
    private pb::ByteString data_ = pb::ByteString.Empty;
    /// <summary>
    /// 消息数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_ONE_MSG);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_ONE_MSG other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgCode != other.MsgCode) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgCode != 0) hash ^= MsgCode.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MsgCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MsgCode);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgCode);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_ONE_MSG other) {
      if (other == null) {
        return;
      }
      if (other.MsgCode != 0) {
        MsgCode = other.MsgCode;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MsgCode = input.ReadInt32();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C2S_MSG_DATA : pb::IMessage<C2S_MSG_DATA> {
    private static readonly pb::MessageParser<C2S_MSG_DATA> _parser = new pb::MessageParser<C2S_MSG_DATA>(() => new C2S_MSG_DATA());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_MSG_DATA> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_MSG_DATA() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_MSG_DATA(C2S_MSG_DATA other) : this() {
      token_ = other.token_;
      msgList_ = other.msgList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_MSG_DATA Clone() {
      return new C2S_MSG_DATA(this);
    }

    /// <summary>Field number for the "Token" field.</summary>
    public const int TokenFieldNumber = 1;
    private string token_ = "";
    /// <summary>
    /// 令牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MsgList" field.</summary>
    public const int MsgListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.C2S_ONE_MSG> _repeated_msgList_codec
        = pb::FieldCodec.ForMessage(18, global::Msg.ClientMessage.C2S_ONE_MSG.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.C2S_ONE_MSG> msgList_ = new pbc::RepeatedField<global::Msg.ClientMessage.C2S_ONE_MSG>();
    /// <summary>
    /// 消息队列
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.C2S_ONE_MSG> MsgList {
      get { return msgList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_MSG_DATA);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_MSG_DATA other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      if(!msgList_.Equals(other.msgList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      hash ^= msgList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Token.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      msgList_.WriteTo(output, _repeated_msgList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      size += msgList_.CalculateSize(_repeated_msgList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_MSG_DATA other) {
      if (other == null) {
        return;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      msgList_.Add(other.msgList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 18: {
            msgList_.AddEntriesFrom(input, _repeated_msgList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2C_ONE_MSG : pb::IMessage<S2C_ONE_MSG> {
    private static readonly pb::MessageParser<S2C_ONE_MSG> _parser = new pb::MessageParser<S2C_ONE_MSG>(() => new S2C_ONE_MSG());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_ONE_MSG> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ONE_MSG() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ONE_MSG(S2C_ONE_MSG other) : this() {
      msgCode_ = other.msgCode_;
      errorCode_ = other.errorCode_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ONE_MSG Clone() {
      return new S2C_ONE_MSG(this);
    }

    /// <summary>Field number for the "MsgCode" field.</summary>
    public const int MsgCodeFieldNumber = 1;
    private int msgCode_;
    /// <summary>
    /// 消息ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgCode {
      get { return msgCode_; }
      set {
        msgCode_ = value;
      }
    }

    /// <summary>Field number for the "ErrorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 2;
    private int errorCode_;
    /// <summary>
    /// 错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 3;
    private pb::ByteString data_ = pb::ByteString.Empty;
    /// <summary>
    /// 数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_ONE_MSG);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_ONE_MSG other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgCode != other.MsgCode) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgCode != 0) hash ^= MsgCode.GetHashCode();
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MsgCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MsgCode);
      }
      if (ErrorCode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ErrorCode);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgCode);
      }
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_ONE_MSG other) {
      if (other == null) {
        return;
      }
      if (other.MsgCode != 0) {
        MsgCode = other.MsgCode;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MsgCode = input.ReadInt32();
            break;
          }
          case 16: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 26: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2C_MSG_DATA : pb::IMessage<S2C_MSG_DATA> {
    private static readonly pb::MessageParser<S2C_MSG_DATA> _parser = new pb::MessageParser<S2C_MSG_DATA>(() => new S2C_MSG_DATA());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_MSG_DATA> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_MSG_DATA() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_MSG_DATA(S2C_MSG_DATA other) : this() {
      msgList_ = other.msgList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_MSG_DATA Clone() {
      return new S2C_MSG_DATA(this);
    }

    /// <summary>Field number for the "MsgList" field.</summary>
    public const int MsgListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.S2C_ONE_MSG> _repeated_msgList_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.S2C_ONE_MSG.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.S2C_ONE_MSG> msgList_ = new pbc::RepeatedField<global::Msg.ClientMessage.S2C_ONE_MSG>();
    /// <summary>
    /// 返回的消息数据队列
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.S2C_ONE_MSG> MsgList {
      get { return msgList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_MSG_DATA);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_MSG_DATA other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!msgList_.Equals(other.msgList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= msgList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      msgList_.WriteTo(output, _repeated_msgList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += msgList_.CalculateSize(_repeated_msgList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_MSG_DATA other) {
      if (other == null) {
        return;
      }
      msgList_.Add(other.msgList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            msgList_.AddEntriesFrom(input, _repeated_msgList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Id Num 结构
  /// </summary>
  public sealed partial class IdNum : pb::IMessage<IdNum> {
    private static readonly pb::MessageParser<IdNum> _parser = new pb::MessageParser<IdNum>(() => new IdNum());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IdNum> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdNum() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdNum(IdNum other) : this() {
      id_ = other.id_;
      num_ = other.num_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdNum Clone() {
      return new IdNum(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Num" field.</summary>
    public const int NumFieldNumber = 2;
    private int num_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IdNum);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IdNum other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Num != other.Num) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Num != 0) hash ^= Num.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Num != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Num != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IdNum other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Num != 0) {
        Num = other.Num;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Num = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 物品
  /// </summary>
  public sealed partial class ItemInfo : pb::IMessage<ItemInfo> {
    private static readonly pb::MessageParser<ItemInfo> _parser = new pb::MessageParser<ItemInfo>(() => new ItemInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemInfo(ItemInfo other) : this() {
      itemCfgId_ = other.itemCfgId_;
      itemNum_ = other.itemNum_;
      remainSeconds_ = other.remainSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemInfo Clone() {
      return new ItemInfo(this);
    }

    /// <summary>Field number for the "ItemCfgId" field.</summary>
    public const int ItemCfgIdFieldNumber = 1;
    private int itemCfgId_;
    /// <summary>
    /// 配置物品
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemCfgId {
      get { return itemCfgId_; }
      set {
        itemCfgId_ = value;
      }
    }

    /// <summary>Field number for the "ItemNum" field.</summary>
    public const int ItemNumFieldNumber = 2;
    private int itemNum_;
    /// <summary>
    /// 物品数目
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemNum {
      get { return itemNum_; }
      set {
        itemNum_ = value;
      }
    }

    /// <summary>Field number for the "RemainSeconds" field.</summary>
    public const int RemainSecondsFieldNumber = 3;
    private int remainSeconds_;
    /// <summary>
    /// 物品剩余时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RemainSeconds {
      get { return remainSeconds_; }
      set {
        remainSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemCfgId != other.ItemCfgId) return false;
      if (ItemNum != other.ItemNum) return false;
      if (RemainSeconds != other.RemainSeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemCfgId != 0) hash ^= ItemCfgId.GetHashCode();
      if (ItemNum != 0) hash ^= ItemNum.GetHashCode();
      if (RemainSeconds != 0) hash ^= RemainSeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ItemCfgId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ItemCfgId);
      }
      if (ItemNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemNum);
      }
      if (RemainSeconds != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RemainSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemCfgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemCfgId);
      }
      if (ItemNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemNum);
      }
      if (RemainSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainSeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemInfo other) {
      if (other == null) {
        return;
      }
      if (other.ItemCfgId != 0) {
        ItemCfgId = other.ItemCfgId;
      }
      if (other.ItemNum != 0) {
        ItemNum = other.ItemNum;
      }
      if (other.RemainSeconds != 0) {
        RemainSeconds = other.RemainSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemCfgId = input.ReadInt32();
            break;
          }
          case 16: {
            ItemNum = input.ReadInt32();
            break;
          }
          case 24: {
            RemainSeconds = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ItemInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 1200,
      }

    }
    #endregion

  }

  /// <summary>
  /// 猫
  /// </summary>
  public sealed partial class CatInfo : pb::IMessage<CatInfo> {
    private static readonly pb::MessageParser<CatInfo> _parser = new pb::MessageParser<CatInfo>(() => new CatInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CatInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CatInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CatInfo(CatInfo other) : this() {
      id_ = other.id_;
      catCfgId_ = other.catCfgId_;
      exp_ = other.exp_;
      level_ = other.level_;
      star_ = other.star_;
      nick_ = other.nick_;
      skillLevel_ = other.skillLevel_;
      locked_ = other.locked_;
      coinAbility_ = other.coinAbility_;
      exploreAbility_ = other.exploreAbility_;
      matchAbility_ = other.matchAbility_;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CatInfo Clone() {
      return new CatInfo(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 猫唯一Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "CatCfgId" field.</summary>
    public const int CatCfgIdFieldNumber = 2;
    private int catCfgId_;
    /// <summary>
    /// 猫配置Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatCfgId {
      get { return catCfgId_; }
      set {
        catCfgId_ = value;
      }
    }

    /// <summary>Field number for the "Exp" field.</summary>
    public const int ExpFieldNumber = 3;
    private int exp_;
    /// <summary>
    /// 经验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Exp {
      get { return exp_; }
      set {
        exp_ = value;
      }
    }

    /// <summary>Field number for the "Level" field.</summary>
    public const int LevelFieldNumber = 4;
    private int level_;
    /// <summary>
    /// 等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "Star" field.</summary>
    public const int StarFieldNumber = 5;
    private int star_;
    /// <summary>
    /// 星级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Star {
      get { return star_; }
      set {
        star_ = value;
      }
    }

    /// <summary>Field number for the "Nick" field.</summary>
    public const int NickFieldNumber = 6;
    private string nick_ = "";
    /// <summary>
    /// 昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nick {
      get { return nick_; }
      set {
        nick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SkillLevel" field.</summary>
    public const int SkillLevelFieldNumber = 7;
    private int skillLevel_;
    /// <summary>
    /// 技能等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SkillLevel {
      get { return skillLevel_; }
      set {
        skillLevel_ = value;
      }
    }

    /// <summary>Field number for the "Locked" field.</summary>
    public const int LockedFieldNumber = 8;
    private bool locked_;
    /// <summary>
    /// 是否锁住
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Locked {
      get { return locked_; }
      set {
        locked_ = value;
      }
    }

    /// <summary>Field number for the "CoinAbility" field.</summary>
    public const int CoinAbilityFieldNumber = 9;
    private int coinAbility_;
    /// <summary>
    /// 产金能力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CoinAbility {
      get { return coinAbility_; }
      set {
        coinAbility_ = value;
      }
    }

    /// <summary>Field number for the "ExploreAbility" field.</summary>
    public const int ExploreAbilityFieldNumber = 10;
    private int exploreAbility_;
    /// <summary>
    /// 探索能力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExploreAbility {
      get { return exploreAbility_; }
      set {
        exploreAbility_ = value;
      }
    }

    /// <summary>Field number for the "MatchAbility" field.</summary>
    public const int MatchAbilityFieldNumber = 11;
    private int matchAbility_;
    /// <summary>
    /// 消除能力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MatchAbility {
      get { return matchAbility_; }
      set {
        matchAbility_ = value;
      }
    }

    /// <summary>Field number for the "State" field.</summary>
    public const int StateFieldNumber = 12;
    private int state_;
    /// <summary>
    /// 猫的状态 (0 空闲  1 猫舍  2 探索  3 寄养所)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CatInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CatInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (CatCfgId != other.CatCfgId) return false;
      if (Exp != other.Exp) return false;
      if (Level != other.Level) return false;
      if (Star != other.Star) return false;
      if (Nick != other.Nick) return false;
      if (SkillLevel != other.SkillLevel) return false;
      if (Locked != other.Locked) return false;
      if (CoinAbility != other.CoinAbility) return false;
      if (ExploreAbility != other.ExploreAbility) return false;
      if (MatchAbility != other.MatchAbility) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (CatCfgId != 0) hash ^= CatCfgId.GetHashCode();
      if (Exp != 0) hash ^= Exp.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Star != 0) hash ^= Star.GetHashCode();
      if (Nick.Length != 0) hash ^= Nick.GetHashCode();
      if (SkillLevel != 0) hash ^= SkillLevel.GetHashCode();
      if (Locked != false) hash ^= Locked.GetHashCode();
      if (CoinAbility != 0) hash ^= CoinAbility.GetHashCode();
      if (ExploreAbility != 0) hash ^= ExploreAbility.GetHashCode();
      if (MatchAbility != 0) hash ^= MatchAbility.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (CatCfgId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CatCfgId);
      }
      if (Exp != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Exp);
      }
      if (Level != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Level);
      }
      if (Star != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Star);
      }
      if (Nick.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Nick);
      }
      if (SkillLevel != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SkillLevel);
      }
      if (Locked != false) {
        output.WriteRawTag(64);
        output.WriteBool(Locked);
      }
      if (CoinAbility != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CoinAbility);
      }
      if (ExploreAbility != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ExploreAbility);
      }
      if (MatchAbility != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(MatchAbility);
      }
      if (State != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (CatCfgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatCfgId);
      }
      if (Exp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exp);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (Star != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Star);
      }
      if (Nick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nick);
      }
      if (SkillLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillLevel);
      }
      if (Locked != false) {
        size += 1 + 1;
      }
      if (CoinAbility != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CoinAbility);
      }
      if (ExploreAbility != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExploreAbility);
      }
      if (MatchAbility != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MatchAbility);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CatInfo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.CatCfgId != 0) {
        CatCfgId = other.CatCfgId;
      }
      if (other.Exp != 0) {
        Exp = other.Exp;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Star != 0) {
        Star = other.Star;
      }
      if (other.Nick.Length != 0) {
        Nick = other.Nick;
      }
      if (other.SkillLevel != 0) {
        SkillLevel = other.SkillLevel;
      }
      if (other.Locked != false) {
        Locked = other.Locked;
      }
      if (other.CoinAbility != 0) {
        CoinAbility = other.CoinAbility;
      }
      if (other.ExploreAbility != 0) {
        ExploreAbility = other.ExploreAbility;
      }
      if (other.MatchAbility != 0) {
        MatchAbility = other.MatchAbility;
      }
      if (other.State != 0) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            CatCfgId = input.ReadInt32();
            break;
          }
          case 24: {
            Exp = input.ReadInt32();
            break;
          }
          case 32: {
            Level = input.ReadInt32();
            break;
          }
          case 40: {
            Star = input.ReadInt32();
            break;
          }
          case 50: {
            Nick = input.ReadString();
            break;
          }
          case 56: {
            SkillLevel = input.ReadInt32();
            break;
          }
          case 64: {
            Locked = input.ReadBool();
            break;
          }
          case 72: {
            CoinAbility = input.ReadInt32();
            break;
          }
          case 80: {
            ExploreAbility = input.ReadInt32();
            break;
          }
          case 88: {
            MatchAbility = input.ReadInt32();
            break;
          }
          case 96: {
            State = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CatInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 1201,
      }

    }
    #endregion

  }

  /// <summary>
  /// 地图上的建筑物
  /// </summary>
  public sealed partial class BuildingInfo : pb::IMessage<BuildingInfo> {
    private static readonly pb::MessageParser<BuildingInfo> _parser = new pb::MessageParser<BuildingInfo>(() => new BuildingInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildingInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildingInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildingInfo(BuildingInfo other) : this() {
      id_ = other.id_;
      cfgId_ = other.cfgId_;
      x_ = other.x_;
      y_ = other.y_;
      dir_ = other.dir_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildingInfo Clone() {
      return new BuildingInfo(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 建筑唯一Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "CfgId" field.</summary>
    public const int CfgIdFieldNumber = 2;
    private int cfgId_;
    /// <summary>
    /// 建筑配置Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CfgId {
      get { return cfgId_; }
      set {
        cfgId_ = value;
      }
    }

    /// <summary>Field number for the "X" field.</summary>
    public const int XFieldNumber = 3;
    private int x_;
    /// <summary>
    /// 建筑x坐标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "Y" field.</summary>
    public const int YFieldNumber = 4;
    private int y_;
    /// <summary>
    /// 建筑y左边
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "Dir" field.</summary>
    public const int DirFieldNumber = 5;
    private int dir_;
    /// <summary>
    /// 方向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuildingInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildingInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (CfgId != other.CfgId) return false;
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Dir != other.Dir) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (CfgId != 0) hash ^= CfgId.GetHashCode();
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (Dir != 0) hash ^= Dir.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (CfgId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CfgId);
      }
      if (X != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Y);
      }
      if (Dir != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Dir);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (CfgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CfgId);
      }
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (Dir != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dir);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildingInfo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.CfgId != 0) {
        CfgId = other.CfgId;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      if (other.Dir != 0) {
        Dir = other.Dir;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            CfgId = input.ReadInt32();
            break;
          }
          case 24: {
            X = input.ReadInt32();
            break;
          }
          case 32: {
            Y = input.ReadInt32();
            break;
          }
          case 40: {
            Dir = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 仓库建筑物，没有实例ID
  /// </summary>
  public sealed partial class DepotBuildingInfo : pb::IMessage<DepotBuildingInfo> {
    private static readonly pb::MessageParser<DepotBuildingInfo> _parser = new pb::MessageParser<DepotBuildingInfo>(() => new DepotBuildingInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DepotBuildingInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DepotBuildingInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DepotBuildingInfo(DepotBuildingInfo other) : this() {
      cfgId_ = other.cfgId_;
      num_ = other.num_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DepotBuildingInfo Clone() {
      return new DepotBuildingInfo(this);
    }

    /// <summary>Field number for the "CfgId" field.</summary>
    public const int CfgIdFieldNumber = 1;
    private int cfgId_;
    /// <summary>
    /// 配置ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CfgId {
      get { return cfgId_; }
      set {
        cfgId_ = value;
      }
    }

    /// <summary>Field number for the "Num" field.</summary>
    public const int NumFieldNumber = 2;
    private int num_;
    /// <summary>
    /// 数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DepotBuildingInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DepotBuildingInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CfgId != other.CfgId) return false;
      if (Num != other.Num) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CfgId != 0) hash ^= CfgId.GetHashCode();
      if (Num != 0) hash ^= Num.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CfgId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CfgId);
      }
      if (Num != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CfgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CfgId);
      }
      if (Num != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DepotBuildingInfo other) {
      if (other == null) {
        return;
      }
      if (other.CfgId != 0) {
        CfgId = other.CfgId;
      }
      if (other.Num != 0) {
        Num = other.Num;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CfgId = input.ReadInt32();
            break;
          }
          case 16: {
            Num = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DepotBuildingInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 1202,
      }

    }
    #endregion

  }

  /// <summary>
  /// 消耗的资源物品类型数量(Other表里配置的属性，像金币，钻石，体力，魅力值，猫粮等)
  /// </summary>
  public sealed partial class ResourceInfo : pb::IMessage<ResourceInfo> {
    private static readonly pb::MessageParser<ResourceInfo> _parser = new pb::MessageParser<ResourceInfo>(() => new ResourceInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResourceInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceInfo(ResourceInfo other) : this() {
      resourceType_ = other.resourceType_;
      resourceValue_ = other.resourceValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceInfo Clone() {
      return new ResourceInfo(this);
    }

    /// <summary>Field number for the "ResourceType" field.</summary>
    public const int ResourceTypeFieldNumber = 1;
    private int resourceType_;
    /// <summary>
    /// 类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ResourceType {
      get { return resourceType_; }
      set {
        resourceType_ = value;
      }
    }

    /// <summary>Field number for the "ResourceValue" field.</summary>
    public const int ResourceValueFieldNumber = 2;
    private int resourceValue_;
    /// <summary>
    /// 数值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ResourceValue {
      get { return resourceValue_; }
      set {
        resourceValue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResourceInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResourceInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceType != other.ResourceType) return false;
      if (ResourceValue != other.ResourceValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceType != 0) hash ^= ResourceType.GetHashCode();
      if (ResourceValue != 0) hash ^= ResourceValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResourceType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ResourceType);
      }
      if (ResourceValue != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ResourceValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResourceType);
      }
      if (ResourceValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResourceValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResourceInfo other) {
      if (other == null) {
        return;
      }
      if (other.ResourceType != 0) {
        ResourceType = other.ResourceType;
      }
      if (other.ResourceValue != 0) {
        ResourceValue = other.ResourceValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ResourceType = input.ReadInt32();
            break;
          }
          case 16: {
            ResourceValue = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ResourceInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 1203,
      }

    }
    #endregion

  }

  public sealed partial class AreaInfo : pb::IMessage<AreaInfo> {
    private static readonly pb::MessageParser<AreaInfo> _parser = new pb::MessageParser<AreaInfo>(() => new AreaInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AreaInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AreaInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AreaInfo(AreaInfo other) : this() {
      cfgId_ = other.cfgId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AreaInfo Clone() {
      return new AreaInfo(this);
    }

    /// <summary>Field number for the "CfgId" field.</summary>
    public const int CfgIdFieldNumber = 1;
    private int cfgId_;
    /// <summary>
    /// 配置Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CfgId {
      get { return cfgId_; }
      set {
        cfgId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AreaInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AreaInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CfgId != other.CfgId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CfgId != 0) hash ^= CfgId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CfgId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CfgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CfgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CfgId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AreaInfo other) {
      if (other == null) {
        return;
      }
      if (other.CfgId != 0) {
        CfgId = other.CfgId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CfgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StageInfo : pb::IMessage<StageInfo> {
    private static readonly pb::MessageParser<StageInfo> _parser = new pb::MessageParser<StageInfo>(() => new StageInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StageInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StageInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StageInfo(StageInfo other) : this() {
      stageId_ = other.stageId_;
      star_ = other.star_;
      topScore_ = other.topScore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StageInfo Clone() {
      return new StageInfo(this);
    }

    /// <summary>Field number for the "StageId" field.</summary>
    public const int StageIdFieldNumber = 1;
    private int stageId_;
    /// <summary>
    /// 关卡ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StageId {
      get { return stageId_; }
      set {
        stageId_ = value;
      }
    }

    /// <summary>Field number for the "Star" field.</summary>
    public const int StarFieldNumber = 2;
    private int star_;
    /// <summary>
    /// 通关星数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Star {
      get { return star_; }
      set {
        star_ = value;
      }
    }

    /// <summary>Field number for the "TopScore" field.</summary>
    public const int TopScoreFieldNumber = 3;
    private int topScore_;
    /// <summary>
    /// 最高分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TopScore {
      get { return topScore_; }
      set {
        topScore_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StageInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StageInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StageId != other.StageId) return false;
      if (Star != other.Star) return false;
      if (TopScore != other.TopScore) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StageId != 0) hash ^= StageId.GetHashCode();
      if (Star != 0) hash ^= Star.GetHashCode();
      if (TopScore != 0) hash ^= TopScore.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StageId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(StageId);
      }
      if (Star != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Star);
      }
      if (TopScore != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TopScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StageId);
      }
      if (Star != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Star);
      }
      if (TopScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TopScore);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StageInfo other) {
      if (other == null) {
        return;
      }
      if (other.StageId != 0) {
        StageId = other.StageId;
      }
      if (other.Star != 0) {
        Star = other.Star;
      }
      if (other.TopScore != 0) {
        TopScore = other.TopScore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StageId = input.ReadInt32();
            break;
          }
          case 16: {
            Star = input.ReadInt32();
            break;
          }
          case 24: {
            TopScore = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //////////////////////////////////////////////////////////////////////////
  /// 物品变化
  /// </summary>
  public sealed partial class S2CItemsInfoUpdate : pb::IMessage<S2CItemsInfoUpdate> {
    private static readonly pb::MessageParser<S2CItemsInfoUpdate> _parser = new pb::MessageParser<S2CItemsInfoUpdate>(() => new S2CItemsInfoUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CItemsInfoUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CItemsInfoUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CItemsInfoUpdate(S2CItemsInfoUpdate other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CItemsInfoUpdate Clone() {
      return new S2CItemsInfoUpdate(this);
    }

    /// <summary>Field number for the "Items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ItemInfo> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.ItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> items_ = new pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CItemsInfoUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CItemsInfoUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CItemsInfoUpdate other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CItemsInfoUpdate message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10000,
      }

    }
    #endregion

  }

  /// <summary>
  /// 猫实例的变化
  /// </summary>
  public sealed partial class S2CCatsInfoUpdate : pb::IMessage<S2CCatsInfoUpdate> {
    private static readonly pb::MessageParser<S2CCatsInfoUpdate> _parser = new pb::MessageParser<S2CCatsInfoUpdate>(() => new S2CCatsInfoUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CCatsInfoUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatsInfoUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatsInfoUpdate(S2CCatsInfoUpdate other) : this() {
      addCats_ = other.addCats_.Clone();
      updateCats_ = other.updateCats_.Clone();
      removeCats_ = other.removeCats_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatsInfoUpdate Clone() {
      return new S2CCatsInfoUpdate(this);
    }

    /// <summary>Field number for the "AddCats" field.</summary>
    public const int AddCatsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.CatInfo> _repeated_addCats_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.CatInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.CatInfo> addCats_ = new pbc::RepeatedField<global::Msg.ClientMessage.CatInfo>();
    /// <summary>
    /// 增加
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.CatInfo> AddCats {
      get { return addCats_; }
    }

    /// <summary>Field number for the "UpdateCats" field.</summary>
    public const int UpdateCatsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.CatInfo> _repeated_updateCats_codec
        = pb::FieldCodec.ForMessage(18, global::Msg.ClientMessage.CatInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.CatInfo> updateCats_ = new pbc::RepeatedField<global::Msg.ClientMessage.CatInfo>();
    /// <summary>
    /// 更新
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.CatInfo> UpdateCats {
      get { return updateCats_; }
    }

    /// <summary>Field number for the "RemoveCats" field.</summary>
    public const int RemoveCatsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_removeCats_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> removeCats_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 删除
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> RemoveCats {
      get { return removeCats_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CCatsInfoUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CCatsInfoUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!addCats_.Equals(other.addCats_)) return false;
      if(!updateCats_.Equals(other.updateCats_)) return false;
      if(!removeCats_.Equals(other.removeCats_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= addCats_.GetHashCode();
      hash ^= updateCats_.GetHashCode();
      hash ^= removeCats_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      addCats_.WriteTo(output, _repeated_addCats_codec);
      updateCats_.WriteTo(output, _repeated_updateCats_codec);
      removeCats_.WriteTo(output, _repeated_removeCats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += addCats_.CalculateSize(_repeated_addCats_codec);
      size += updateCats_.CalculateSize(_repeated_updateCats_codec);
      size += removeCats_.CalculateSize(_repeated_removeCats_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CCatsInfoUpdate other) {
      if (other == null) {
        return;
      }
      addCats_.Add(other.addCats_);
      updateCats_.Add(other.updateCats_);
      removeCats_.Add(other.removeCats_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            addCats_.AddEntriesFrom(input, _repeated_addCats_codec);
            break;
          }
          case 18: {
            updateCats_.AddEntriesFrom(input, _repeated_updateCats_codec);
            break;
          }
          case 26:
          case 24: {
            removeCats_.AddEntriesFrom(input, _repeated_removeCats_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CCatsInfoUpdate message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10001,
      }

    }
    #endregion

  }

  /// <summary>
  /// 建筑物变化
  /// </summary>
  public sealed partial class S2CBuildingsInfoUpdate : pb::IMessage<S2CBuildingsInfoUpdate> {
    private static readonly pb::MessageParser<S2CBuildingsInfoUpdate> _parser = new pb::MessageParser<S2CBuildingsInfoUpdate>(() => new S2CBuildingsInfoUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CBuildingsInfoUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CBuildingsInfoUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CBuildingsInfoUpdate(S2CBuildingsInfoUpdate other) : this() {
      addBuildings_ = other.addBuildings_.Clone();
      updateBuildings_ = other.updateBuildings_.Clone();
      removeBuildings_ = other.removeBuildings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CBuildingsInfoUpdate Clone() {
      return new S2CBuildingsInfoUpdate(this);
    }

    /// <summary>Field number for the "AddBuildings" field.</summary>
    public const int AddBuildingsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.BuildingInfo> _repeated_addBuildings_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.BuildingInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.BuildingInfo> addBuildings_ = new pbc::RepeatedField<global::Msg.ClientMessage.BuildingInfo>();
    /// <summary>
    /// 增加
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.BuildingInfo> AddBuildings {
      get { return addBuildings_; }
    }

    /// <summary>Field number for the "UpdateBuildings" field.</summary>
    public const int UpdateBuildingsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.BuildingInfo> _repeated_updateBuildings_codec
        = pb::FieldCodec.ForMessage(18, global::Msg.ClientMessage.BuildingInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.BuildingInfo> updateBuildings_ = new pbc::RepeatedField<global::Msg.ClientMessage.BuildingInfo>();
    /// <summary>
    /// 更新
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.BuildingInfo> UpdateBuildings {
      get { return updateBuildings_; }
    }

    /// <summary>Field number for the "RemoveBuildings" field.</summary>
    public const int RemoveBuildingsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_removeBuildings_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> removeBuildings_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 删除
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> RemoveBuildings {
      get { return removeBuildings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CBuildingsInfoUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CBuildingsInfoUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!addBuildings_.Equals(other.addBuildings_)) return false;
      if(!updateBuildings_.Equals(other.updateBuildings_)) return false;
      if(!removeBuildings_.Equals(other.removeBuildings_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= addBuildings_.GetHashCode();
      hash ^= updateBuildings_.GetHashCode();
      hash ^= removeBuildings_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      addBuildings_.WriteTo(output, _repeated_addBuildings_codec);
      updateBuildings_.WriteTo(output, _repeated_updateBuildings_codec);
      removeBuildings_.WriteTo(output, _repeated_removeBuildings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += addBuildings_.CalculateSize(_repeated_addBuildings_codec);
      size += updateBuildings_.CalculateSize(_repeated_updateBuildings_codec);
      size += removeBuildings_.CalculateSize(_repeated_removeBuildings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CBuildingsInfoUpdate other) {
      if (other == null) {
        return;
      }
      addBuildings_.Add(other.addBuildings_);
      updateBuildings_.Add(other.updateBuildings_);
      removeBuildings_.Add(other.removeBuildings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            addBuildings_.AddEntriesFrom(input, _repeated_addBuildings_codec);
            break;
          }
          case 18: {
            updateBuildings_.AddEntriesFrom(input, _repeated_updateBuildings_codec);
            break;
          }
          case 26:
          case 24: {
            removeBuildings_.AddEntriesFrom(input, _repeated_removeBuildings_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CBuildingsInfoUpdate message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10002,
      }

    }
    #endregion

  }

  /// <summary>
  /// 仓库建筑物变化
  /// </summary>
  public sealed partial class S2CDepotBuildingInfoUpdate : pb::IMessage<S2CDepotBuildingInfoUpdate> {
    private static readonly pb::MessageParser<S2CDepotBuildingInfoUpdate> _parser = new pb::MessageParser<S2CDepotBuildingInfoUpdate>(() => new S2CDepotBuildingInfoUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CDepotBuildingInfoUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CDepotBuildingInfoUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CDepotBuildingInfoUpdate(S2CDepotBuildingInfoUpdate other) : this() {
      buildings_ = other.buildings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CDepotBuildingInfoUpdate Clone() {
      return new S2CDepotBuildingInfoUpdate(this);
    }

    /// <summary>Field number for the "Buildings" field.</summary>
    public const int BuildingsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.DepotBuildingInfo> _repeated_buildings_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.DepotBuildingInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.DepotBuildingInfo> buildings_ = new pbc::RepeatedField<global::Msg.ClientMessage.DepotBuildingInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.DepotBuildingInfo> Buildings {
      get { return buildings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CDepotBuildingInfoUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CDepotBuildingInfoUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!buildings_.Equals(other.buildings_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= buildings_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      buildings_.WriteTo(output, _repeated_buildings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += buildings_.CalculateSize(_repeated_buildings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CDepotBuildingInfoUpdate other) {
      if (other == null) {
        return;
      }
      buildings_.Add(other.buildings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            buildings_.AddEntriesFrom(input, _repeated_buildings_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CDepotBuildingInfoUpdate message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10003,
      }

    }
    #endregion

  }

  /// <summary>
  //////////////////////////////////////////////////////////////////////////
  /// 拉取数据（基础数据，物品，猫，建筑，区域等）
  /// </summary>
  public sealed partial class C2SGetInfo : pb::IMessage<C2SGetInfo> {
    private static readonly pb::MessageParser<C2SGetInfo> _parser = new pb::MessageParser<C2SGetInfo>(() => new C2SGetInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetInfo(C2SGetInfo other) : this() {
      base_ = other.base_;
      item_ = other.item_;
      cat_ = other.cat_;
      building_ = other.building_;
      area_ = other.area_;
      stage_ = other.stage_;
      depotBuilding_ = other.depotBuilding_;
      formula_ = other.formula_;
      guide_ = other.guide_;
      catHouse_ = other.catHouse_;
      workShop_ = other.workShop_;
      farm_ = other.farm_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetInfo Clone() {
      return new C2SGetInfo(this);
    }

    /// <summary>Field number for the "Base" field.</summary>
    public const int BaseFieldNumber = 1;
    private bool base_;
    /// <summary>
    /// 基础信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Base {
      get { return base_; }
      set {
        base_ = value;
      }
    }

    /// <summary>Field number for the "Item" field.</summary>
    public const int ItemFieldNumber = 2;
    private bool item_;
    /// <summary>
    /// 物品信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "Cat" field.</summary>
    public const int CatFieldNumber = 3;
    private bool cat_;
    /// <summary>
    /// 猫信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Cat {
      get { return cat_; }
      set {
        cat_ = value;
      }
    }

    /// <summary>Field number for the "Building" field.</summary>
    public const int BuildingFieldNumber = 4;
    private bool building_;
    /// <summary>
    /// 建筑信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Building {
      get { return building_; }
      set {
        building_ = value;
      }
    }

    /// <summary>Field number for the "Area" field.</summary>
    public const int AreaFieldNumber = 5;
    private bool area_;
    /// <summary>
    /// 区域信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Area {
      get { return area_; }
      set {
        area_ = value;
      }
    }

    /// <summary>Field number for the "Stage" field.</summary>
    public const int StageFieldNumber = 6;
    private bool stage_;
    /// <summary>
    /// 关卡信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Stage {
      get { return stage_; }
      set {
        stage_ = value;
      }
    }

    /// <summary>Field number for the "DepotBuilding" field.</summary>
    public const int DepotBuildingFieldNumber = 7;
    private bool depotBuilding_;
    /// <summary>
    /// 仓库建筑信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DepotBuilding {
      get { return depotBuilding_; }
      set {
        depotBuilding_ = value;
      }
    }

    /// <summary>Field number for the "Formula" field.</summary>
    public const int FormulaFieldNumber = 8;
    private bool formula_;
    /// <summary>
    /// 配方信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Formula {
      get { return formula_; }
      set {
        formula_ = value;
      }
    }

    /// <summary>Field number for the "Guide" field.</summary>
    public const int GuideFieldNumber = 9;
    private bool guide_;
    /// <summary>
    /// 新手引导
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Guide {
      get { return guide_; }
      set {
        guide_ = value;
      }
    }

    /// <summary>Field number for the "CatHouse" field.</summary>
    public const int CatHouseFieldNumber = 10;
    private bool catHouse_;
    /// <summary>
    /// 猫舍
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CatHouse {
      get { return catHouse_; }
      set {
        catHouse_ = value;
      }
    }

    /// <summary>Field number for the "WorkShop" field.</summary>
    public const int WorkShopFieldNumber = 11;
    private bool workShop_;
    /// <summary>
    /// 手工作坊
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool WorkShop {
      get { return workShop_; }
      set {
        workShop_ = value;
      }
    }

    /// <summary>Field number for the "Farm" field.</summary>
    public const int FarmFieldNumber = 12;
    private bool farm_;
    /// <summary>
    /// 农田
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Farm {
      get { return farm_; }
      set {
        farm_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Base != other.Base) return false;
      if (Item != other.Item) return false;
      if (Cat != other.Cat) return false;
      if (Building != other.Building) return false;
      if (Area != other.Area) return false;
      if (Stage != other.Stage) return false;
      if (DepotBuilding != other.DepotBuilding) return false;
      if (Formula != other.Formula) return false;
      if (Guide != other.Guide) return false;
      if (CatHouse != other.CatHouse) return false;
      if (WorkShop != other.WorkShop) return false;
      if (Farm != other.Farm) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Base != false) hash ^= Base.GetHashCode();
      if (Item != false) hash ^= Item.GetHashCode();
      if (Cat != false) hash ^= Cat.GetHashCode();
      if (Building != false) hash ^= Building.GetHashCode();
      if (Area != false) hash ^= Area.GetHashCode();
      if (Stage != false) hash ^= Stage.GetHashCode();
      if (DepotBuilding != false) hash ^= DepotBuilding.GetHashCode();
      if (Formula != false) hash ^= Formula.GetHashCode();
      if (Guide != false) hash ^= Guide.GetHashCode();
      if (CatHouse != false) hash ^= CatHouse.GetHashCode();
      if (WorkShop != false) hash ^= WorkShop.GetHashCode();
      if (Farm != false) hash ^= Farm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Base != false) {
        output.WriteRawTag(8);
        output.WriteBool(Base);
      }
      if (Item != false) {
        output.WriteRawTag(16);
        output.WriteBool(Item);
      }
      if (Cat != false) {
        output.WriteRawTag(24);
        output.WriteBool(Cat);
      }
      if (Building != false) {
        output.WriteRawTag(32);
        output.WriteBool(Building);
      }
      if (Area != false) {
        output.WriteRawTag(40);
        output.WriteBool(Area);
      }
      if (Stage != false) {
        output.WriteRawTag(48);
        output.WriteBool(Stage);
      }
      if (DepotBuilding != false) {
        output.WriteRawTag(56);
        output.WriteBool(DepotBuilding);
      }
      if (Formula != false) {
        output.WriteRawTag(64);
        output.WriteBool(Formula);
      }
      if (Guide != false) {
        output.WriteRawTag(72);
        output.WriteBool(Guide);
      }
      if (CatHouse != false) {
        output.WriteRawTag(80);
        output.WriteBool(CatHouse);
      }
      if (WorkShop != false) {
        output.WriteRawTag(88);
        output.WriteBool(WorkShop);
      }
      if (Farm != false) {
        output.WriteRawTag(96);
        output.WriteBool(Farm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Base != false) {
        size += 1 + 1;
      }
      if (Item != false) {
        size += 1 + 1;
      }
      if (Cat != false) {
        size += 1 + 1;
      }
      if (Building != false) {
        size += 1 + 1;
      }
      if (Area != false) {
        size += 1 + 1;
      }
      if (Stage != false) {
        size += 1 + 1;
      }
      if (DepotBuilding != false) {
        size += 1 + 1;
      }
      if (Formula != false) {
        size += 1 + 1;
      }
      if (Guide != false) {
        size += 1 + 1;
      }
      if (CatHouse != false) {
        size += 1 + 1;
      }
      if (WorkShop != false) {
        size += 1 + 1;
      }
      if (Farm != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetInfo other) {
      if (other == null) {
        return;
      }
      if (other.Base != false) {
        Base = other.Base;
      }
      if (other.Item != false) {
        Item = other.Item;
      }
      if (other.Cat != false) {
        Cat = other.Cat;
      }
      if (other.Building != false) {
        Building = other.Building;
      }
      if (other.Area != false) {
        Area = other.Area;
      }
      if (other.Stage != false) {
        Stage = other.Stage;
      }
      if (other.DepotBuilding != false) {
        DepotBuilding = other.DepotBuilding;
      }
      if (other.Formula != false) {
        Formula = other.Formula;
      }
      if (other.Guide != false) {
        Guide = other.Guide;
      }
      if (other.CatHouse != false) {
        CatHouse = other.CatHouse;
      }
      if (other.WorkShop != false) {
        WorkShop = other.WorkShop;
      }
      if (other.Farm != false) {
        Farm = other.Farm;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Base = input.ReadBool();
            break;
          }
          case 16: {
            Item = input.ReadBool();
            break;
          }
          case 24: {
            Cat = input.ReadBool();
            break;
          }
          case 32: {
            Building = input.ReadBool();
            break;
          }
          case 40: {
            Area = input.ReadBool();
            break;
          }
          case 48: {
            Stage = input.ReadBool();
            break;
          }
          case 56: {
            DepotBuilding = input.ReadBool();
            break;
          }
          case 64: {
            Formula = input.ReadBool();
            break;
          }
          case 72: {
            Guide = input.ReadBool();
            break;
          }
          case 80: {
            CatHouse = input.ReadBool();
            break;
          }
          case 88: {
            WorkShop = input.ReadBool();
            break;
          }
          case 96: {
            Farm = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10004,
      }

    }
    #endregion

  }

  /// <summary>
  //// 拉物品信息
  /// </summary>
  public sealed partial class C2SGetItemInfos : pb::IMessage<C2SGetItemInfos> {
    private static readonly pb::MessageParser<C2SGetItemInfos> _parser = new pb::MessageParser<C2SGetItemInfos>(() => new C2SGetItemInfos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetItemInfos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetItemInfos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetItemInfos(C2SGetItemInfos other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetItemInfos Clone() {
      return new C2SGetItemInfos(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetItemInfos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetItemInfos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetItemInfos other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetItemInfos message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10007,
      }

    }
    #endregion

  }

  /// <summary>
  /// 物品同步结果
  /// </summary>
  public sealed partial class S2CGetItemInfos : pb::IMessage<S2CGetItemInfos> {
    private static readonly pb::MessageParser<S2CGetItemInfos> _parser = new pb::MessageParser<S2CGetItemInfos>(() => new S2CGetItemInfos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGetItemInfos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetItemInfos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetItemInfos(S2CGetItemInfos other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetItemInfos Clone() {
      return new S2CGetItemInfos(this);
    }

    /// <summary>Field number for the "Items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ItemInfo> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.ItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> items_ = new pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGetItemInfos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGetItemInfos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGetItemInfos other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGetItemInfos message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10008,
      }

    }
    #endregion

  }

  /// <summary>
  /// 拉建筑信息
  /// </summary>
  public sealed partial class C2SGetBuildingInfos : pb::IMessage<C2SGetBuildingInfos> {
    private static readonly pb::MessageParser<C2SGetBuildingInfos> _parser = new pb::MessageParser<C2SGetBuildingInfos>(() => new C2SGetBuildingInfos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetBuildingInfos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetBuildingInfos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetBuildingInfos(C2SGetBuildingInfos other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetBuildingInfos Clone() {
      return new C2SGetBuildingInfos(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetBuildingInfos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetBuildingInfos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetBuildingInfos other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetBuildingInfos message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10009,
      }

    }
    #endregion

  }

  public sealed partial class S2CGetBuildingInfos : pb::IMessage<S2CGetBuildingInfos> {
    private static readonly pb::MessageParser<S2CGetBuildingInfos> _parser = new pb::MessageParser<S2CGetBuildingInfos>(() => new S2CGetBuildingInfos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGetBuildingInfos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetBuildingInfos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetBuildingInfos(S2CGetBuildingInfos other) : this() {
      builds_ = other.builds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetBuildingInfos Clone() {
      return new S2CGetBuildingInfos(this);
    }

    /// <summary>Field number for the "Builds" field.</summary>
    public const int BuildsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.BuildingInfo> _repeated_builds_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.BuildingInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.BuildingInfo> builds_ = new pbc::RepeatedField<global::Msg.ClientMessage.BuildingInfo>();
    /// <summary>
    /// 地图建筑物
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.BuildingInfo> Builds {
      get { return builds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGetBuildingInfos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGetBuildingInfos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!builds_.Equals(other.builds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= builds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      builds_.WriteTo(output, _repeated_builds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += builds_.CalculateSize(_repeated_builds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGetBuildingInfos other) {
      if (other == null) {
        return;
      }
      builds_.Add(other.builds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            builds_.AddEntriesFrom(input, _repeated_builds_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGetBuildingInfos message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10010,
      }

    }
    #endregion

  }

  /// <summary>
  /// 拉取仓库建筑信息
  /// </summary>
  public sealed partial class C2SGetDepotBuildingInfos : pb::IMessage<C2SGetDepotBuildingInfos> {
    private static readonly pb::MessageParser<C2SGetDepotBuildingInfos> _parser = new pb::MessageParser<C2SGetDepotBuildingInfos>(() => new C2SGetDepotBuildingInfos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetDepotBuildingInfos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetDepotBuildingInfos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetDepotBuildingInfos(C2SGetDepotBuildingInfos other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetDepotBuildingInfos Clone() {
      return new C2SGetDepotBuildingInfos(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetDepotBuildingInfos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetDepotBuildingInfos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetDepotBuildingInfos other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetDepotBuildingInfos message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10011,
      }

    }
    #endregion

  }

  public sealed partial class S2CGetDepotBuildingInfos : pb::IMessage<S2CGetDepotBuildingInfos> {
    private static readonly pb::MessageParser<S2CGetDepotBuildingInfos> _parser = new pb::MessageParser<S2CGetDepotBuildingInfos>(() => new S2CGetDepotBuildingInfos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGetDepotBuildingInfos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetDepotBuildingInfos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetDepotBuildingInfos(S2CGetDepotBuildingInfos other) : this() {
      depotBuilds_ = other.depotBuilds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetDepotBuildingInfos Clone() {
      return new S2CGetDepotBuildingInfos(this);
    }

    /// <summary>Field number for the "DepotBuilds" field.</summary>
    public const int DepotBuildsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.DepotBuildingInfo> _repeated_depotBuilds_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.DepotBuildingInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.DepotBuildingInfo> depotBuilds_ = new pbc::RepeatedField<global::Msg.ClientMessage.DepotBuildingInfo>();
    /// <summary>
    /// 仓库建筑物
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.DepotBuildingInfo> DepotBuilds {
      get { return depotBuilds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGetDepotBuildingInfos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGetDepotBuildingInfos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!depotBuilds_.Equals(other.depotBuilds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= depotBuilds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      depotBuilds_.WriteTo(output, _repeated_depotBuilds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += depotBuilds_.CalculateSize(_repeated_depotBuilds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGetDepotBuildingInfos other) {
      if (other == null) {
        return;
      }
      depotBuilds_.Add(other.depotBuilds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            depotBuilds_.AddEntriesFrom(input, _repeated_depotBuilds_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGetDepotBuildingInfos message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10012,
      }

    }
    #endregion

  }

  /// <summary>
  /// 拉猫信息
  /// </summary>
  public sealed partial class C2SGetCatInfos : pb::IMessage<C2SGetCatInfos> {
    private static readonly pb::MessageParser<C2SGetCatInfos> _parser = new pb::MessageParser<C2SGetCatInfos>(() => new C2SGetCatInfos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetCatInfos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetCatInfos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetCatInfos(C2SGetCatInfos other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetCatInfos Clone() {
      return new C2SGetCatInfos(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetCatInfos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetCatInfos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetCatInfos other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetCatInfos message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10013,
      }

    }
    #endregion

  }

  public sealed partial class S2CGetCatInfos : pb::IMessage<S2CGetCatInfos> {
    private static readonly pb::MessageParser<S2CGetCatInfos> _parser = new pb::MessageParser<S2CGetCatInfos>(() => new S2CGetCatInfos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGetCatInfos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetCatInfos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetCatInfos(S2CGetCatInfos other) : this() {
      cats_ = other.cats_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetCatInfos Clone() {
      return new S2CGetCatInfos(this);
    }

    /// <summary>Field number for the "Cats" field.</summary>
    public const int CatsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.CatInfo> _repeated_cats_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.CatInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.CatInfo> cats_ = new pbc::RepeatedField<global::Msg.ClientMessage.CatInfo>();
    /// <summary>
    /// 猫信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.CatInfo> Cats {
      get { return cats_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGetCatInfos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGetCatInfos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!cats_.Equals(other.cats_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= cats_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      cats_.WriteTo(output, _repeated_cats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += cats_.CalculateSize(_repeated_cats_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGetCatInfos other) {
      if (other == null) {
        return;
      }
      cats_.Add(other.cats_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            cats_.AddEntriesFrom(input, _repeated_cats_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGetCatInfos message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10014,
      }

    }
    #endregion

  }

  /// <summary>
  /// 拉取区域信息
  /// </summary>
  public sealed partial class C2SGetAreasInfos : pb::IMessage<C2SGetAreasInfos> {
    private static readonly pb::MessageParser<C2SGetAreasInfos> _parser = new pb::MessageParser<C2SGetAreasInfos>(() => new C2SGetAreasInfos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetAreasInfos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetAreasInfos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetAreasInfos(C2SGetAreasInfos other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetAreasInfos Clone() {
      return new C2SGetAreasInfos(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetAreasInfos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetAreasInfos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetAreasInfos other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetAreasInfos message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10015,
      }

    }
    #endregion

  }

  public sealed partial class S2CGetAreasInfos : pb::IMessage<S2CGetAreasInfos> {
    private static readonly pb::MessageParser<S2CGetAreasInfos> _parser = new pb::MessageParser<S2CGetAreasInfos>(() => new S2CGetAreasInfos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGetAreasInfos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetAreasInfos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetAreasInfos(S2CGetAreasInfos other) : this() {
      areas_ = other.areas_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetAreasInfos Clone() {
      return new S2CGetAreasInfos(this);
    }

    /// <summary>Field number for the "Areas" field.</summary>
    public const int AreasFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.AreaInfo> _repeated_areas_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.AreaInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.AreaInfo> areas_ = new pbc::RepeatedField<global::Msg.ClientMessage.AreaInfo>();
    /// <summary>
    /// 区域信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.AreaInfo> Areas {
      get { return areas_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGetAreasInfos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGetAreasInfos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!areas_.Equals(other.areas_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= areas_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      areas_.WriteTo(output, _repeated_areas_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += areas_.CalculateSize(_repeated_areas_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGetAreasInfos other) {
      if (other == null) {
        return;
      }
      areas_.Add(other.areas_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            areas_.AddEntriesFrom(input, _repeated_areas_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGetAreasInfos message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10016,
      }

    }
    #endregion

  }

  /// <summary>
  /// 拉取关卡信息
  /// </summary>
  public sealed partial class C2SGetStageInfos : pb::IMessage<C2SGetStageInfos> {
    private static readonly pb::MessageParser<C2SGetStageInfos> _parser = new pb::MessageParser<C2SGetStageInfos>(() => new C2SGetStageInfos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetStageInfos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetStageInfos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetStageInfos(C2SGetStageInfos other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetStageInfos Clone() {
      return new C2SGetStageInfos(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetStageInfos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetStageInfos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetStageInfos other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetStageInfos message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10017,
      }

    }
    #endregion

  }

  public sealed partial class S2CGetStageInfos : pb::IMessage<S2CGetStageInfos> {
    private static readonly pb::MessageParser<S2CGetStageInfos> _parser = new pb::MessageParser<S2CGetStageInfos>(() => new S2CGetStageInfos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGetStageInfos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetStageInfos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetStageInfos(S2CGetStageInfos other) : this() {
      stages_ = other.stages_.Clone();
      curMaxStage_ = other.curMaxStage_;
      curUnlockMaxStage_ = other.curUnlockMaxStage_;
      unlockLeftSec_ = other.unlockLeftSec_;
      curUnlockStageId_ = other.curUnlockStageId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetStageInfos Clone() {
      return new S2CGetStageInfos(this);
    }

    /// <summary>Field number for the "Stages" field.</summary>
    public const int StagesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.StageInfo> _repeated_stages_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.StageInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.StageInfo> stages_ = new pbc::RepeatedField<global::Msg.ClientMessage.StageInfo>();
    /// <summary>
    /// 关卡信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.StageInfo> Stages {
      get { return stages_; }
    }

    /// <summary>Field number for the "CurMaxStage" field.</summary>
    public const int CurMaxStageFieldNumber = 2;
    private int curMaxStage_;
    /// <summary>
    /// 当前通关关卡数目
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurMaxStage {
      get { return curMaxStage_; }
      set {
        curMaxStage_ = value;
      }
    }

    /// <summary>Field number for the "CurUnlockMaxStage" field.</summary>
    public const int CurUnlockMaxStageFieldNumber = 3;
    private int curUnlockMaxStage_;
    /// <summary>
    /// 最大可通关关卡
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurUnlockMaxStage {
      get { return curUnlockMaxStage_; }
      set {
        curUnlockMaxStage_ = value;
      }
    }

    /// <summary>Field number for the "UnlockLeftSec" field.</summary>
    public const int UnlockLeftSecFieldNumber = 4;
    private int unlockLeftSec_;
    /// <summary>
    /// 解锁剩余时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnlockLeftSec {
      get { return unlockLeftSec_; }
      set {
        unlockLeftSec_ = value;
      }
    }

    /// <summary>Field number for the "CurUnlockStageId" field.</summary>
    public const int CurUnlockStageIdFieldNumber = 5;
    private int curUnlockStageId_;
    /// <summary>
    /// 当前正在解锁的关卡Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurUnlockStageId {
      get { return curUnlockStageId_; }
      set {
        curUnlockStageId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGetStageInfos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGetStageInfos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!stages_.Equals(other.stages_)) return false;
      if (CurMaxStage != other.CurMaxStage) return false;
      if (CurUnlockMaxStage != other.CurUnlockMaxStage) return false;
      if (UnlockLeftSec != other.UnlockLeftSec) return false;
      if (CurUnlockStageId != other.CurUnlockStageId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= stages_.GetHashCode();
      if (CurMaxStage != 0) hash ^= CurMaxStage.GetHashCode();
      if (CurUnlockMaxStage != 0) hash ^= CurUnlockMaxStage.GetHashCode();
      if (UnlockLeftSec != 0) hash ^= UnlockLeftSec.GetHashCode();
      if (CurUnlockStageId != 0) hash ^= CurUnlockStageId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      stages_.WriteTo(output, _repeated_stages_codec);
      if (CurMaxStage != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurMaxStage);
      }
      if (CurUnlockMaxStage != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CurUnlockMaxStage);
      }
      if (UnlockLeftSec != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UnlockLeftSec);
      }
      if (CurUnlockStageId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CurUnlockStageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += stages_.CalculateSize(_repeated_stages_codec);
      if (CurMaxStage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurMaxStage);
      }
      if (CurUnlockMaxStage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurUnlockMaxStage);
      }
      if (UnlockLeftSec != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnlockLeftSec);
      }
      if (CurUnlockStageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurUnlockStageId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGetStageInfos other) {
      if (other == null) {
        return;
      }
      stages_.Add(other.stages_);
      if (other.CurMaxStage != 0) {
        CurMaxStage = other.CurMaxStage;
      }
      if (other.CurUnlockMaxStage != 0) {
        CurUnlockMaxStage = other.CurUnlockMaxStage;
      }
      if (other.UnlockLeftSec != 0) {
        UnlockLeftSec = other.UnlockLeftSec;
      }
      if (other.CurUnlockStageId != 0) {
        CurUnlockStageId = other.CurUnlockStageId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            stages_.AddEntriesFrom(input, _repeated_stages_codec);
            break;
          }
          case 16: {
            CurMaxStage = input.ReadInt32();
            break;
          }
          case 24: {
            CurUnlockMaxStage = input.ReadInt32();
            break;
          }
          case 32: {
            UnlockLeftSec = input.ReadInt32();
            break;
          }
          case 40: {
            CurUnlockStageId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGetStageInfos message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10018,
      }

    }
    #endregion

  }

  /// <summary>
  /// 金币
  /// </summary>
  public sealed partial class C2SGetCoin : pb::IMessage<C2SGetCoin> {
    private static readonly pb::MessageParser<C2SGetCoin> _parser = new pb::MessageParser<C2SGetCoin>(() => new C2SGetCoin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetCoin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetCoin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetCoin(C2SGetCoin other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetCoin Clone() {
      return new C2SGetCoin(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetCoin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetCoin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetCoin other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetCoin message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10019,
      }

    }
    #endregion

  }

  public sealed partial class S2CGetCoin : pb::IMessage<S2CGetCoin> {
    private static readonly pb::MessageParser<S2CGetCoin> _parser = new pb::MessageParser<S2CGetCoin>(() => new S2CGetCoin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGetCoin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetCoin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetCoin(S2CGetCoin other) : this() {
      coin_ = other.coin_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetCoin Clone() {
      return new S2CGetCoin(this);
    }

    /// <summary>Field number for the "Coin" field.</summary>
    public const int CoinFieldNumber = 1;
    private int coin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Coin {
      get { return coin_; }
      set {
        coin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGetCoin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGetCoin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Coin != other.Coin) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Coin != 0) hash ^= Coin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Coin != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Coin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Coin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Coin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGetCoin other) {
      if (other == null) {
        return;
      }
      if (other.Coin != 0) {
        Coin = other.Coin;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Coin = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGetCoin message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10020,
      }

    }
    #endregion

  }

  /// <summary>
  /// 钻石
  /// </summary>
  public sealed partial class C2SGetDiamond : pb::IMessage<C2SGetDiamond> {
    private static readonly pb::MessageParser<C2SGetDiamond> _parser = new pb::MessageParser<C2SGetDiamond>(() => new C2SGetDiamond());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetDiamond> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetDiamond() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetDiamond(C2SGetDiamond other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetDiamond Clone() {
      return new C2SGetDiamond(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetDiamond);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetDiamond other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetDiamond other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetDiamond message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10021,
      }

    }
    #endregion

  }

  public sealed partial class S2CGetDiamond : pb::IMessage<S2CGetDiamond> {
    private static readonly pb::MessageParser<S2CGetDiamond> _parser = new pb::MessageParser<S2CGetDiamond>(() => new S2CGetDiamond());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGetDiamond> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetDiamond() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetDiamond(S2CGetDiamond other) : this() {
      diamond_ = other.diamond_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetDiamond Clone() {
      return new S2CGetDiamond(this);
    }

    /// <summary>Field number for the "Diamond" field.</summary>
    public const int DiamondFieldNumber = 1;
    private int diamond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Diamond {
      get { return diamond_; }
      set {
        diamond_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGetDiamond);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGetDiamond other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Diamond != other.Diamond) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Diamond != 0) hash ^= Diamond.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Diamond != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Diamond);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Diamond != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Diamond);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGetDiamond other) {
      if (other == null) {
        return;
      }
      if (other.Diamond != 0) {
        Diamond = other.Diamond;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Diamond = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGetDiamond message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10022,
      }

    }
    #endregion

  }

  /// <summary>
  /// 魅力值
  /// </summary>
  public sealed partial class C2SGetCharmVal : pb::IMessage<C2SGetCharmVal> {
    private static readonly pb::MessageParser<C2SGetCharmVal> _parser = new pb::MessageParser<C2SGetCharmVal>(() => new C2SGetCharmVal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetCharmVal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetCharmVal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetCharmVal(C2SGetCharmVal other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetCharmVal Clone() {
      return new C2SGetCharmVal(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetCharmVal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetCharmVal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetCharmVal other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetCharmVal message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10023,
      }

    }
    #endregion

  }

  public sealed partial class S2CGetCharmVal : pb::IMessage<S2CGetCharmVal> {
    private static readonly pb::MessageParser<S2CGetCharmVal> _parser = new pb::MessageParser<S2CGetCharmVal>(() => new S2CGetCharmVal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGetCharmVal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetCharmVal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetCharmVal(S2CGetCharmVal other) : this() {
      charmVal_ = other.charmVal_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetCharmVal Clone() {
      return new S2CGetCharmVal(this);
    }

    /// <summary>Field number for the "CharmVal" field.</summary>
    public const int CharmValFieldNumber = 1;
    private int charmVal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CharmVal {
      get { return charmVal_; }
      set {
        charmVal_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGetCharmVal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGetCharmVal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CharmVal != other.CharmVal) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CharmVal != 0) hash ^= CharmVal.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CharmVal != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CharmVal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CharmVal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CharmVal);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGetCharmVal other) {
      if (other == null) {
        return;
      }
      if (other.CharmVal != 0) {
        CharmVal = other.CharmVal;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CharmVal = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGetCharmVal message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10024,
      }

    }
    #endregion

  }

  /// <summary>
  /// 点赞数
  /// </summary>
  public sealed partial class C2SGetZan : pb::IMessage<C2SGetZan> {
    private static readonly pb::MessageParser<C2SGetZan> _parser = new pb::MessageParser<C2SGetZan>(() => new C2SGetZan());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetZan> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetZan() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetZan(C2SGetZan other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetZan Clone() {
      return new C2SGetZan(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetZan);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetZan other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetZan other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetZan message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10025,
      }

    }
    #endregion

  }

  public sealed partial class S2CGetZan : pb::IMessage<S2CGetZan> {
    private static readonly pb::MessageParser<S2CGetZan> _parser = new pb::MessageParser<S2CGetZan>(() => new S2CGetZan());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGetZan> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetZan() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetZan(S2CGetZan other) : this() {
      zan_ = other.zan_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetZan Clone() {
      return new S2CGetZan(this);
    }

    /// <summary>Field number for the "Zan" field.</summary>
    public const int ZanFieldNumber = 1;
    private int zan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Zan {
      get { return zan_; }
      set {
        zan_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGetZan);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGetZan other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Zan != other.Zan) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Zan != 0) hash ^= Zan.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Zan != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Zan);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Zan != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Zan);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGetZan other) {
      if (other == null) {
        return;
      }
      if (other.Zan != 0) {
        Zan = other.Zan;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Zan = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGetZan message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10026,
      }

    }
    #endregion

  }

  /// <summary>
  /// 猫粮
  /// </summary>
  public sealed partial class C2SGetCatFood : pb::IMessage<C2SGetCatFood> {
    private static readonly pb::MessageParser<C2SGetCatFood> _parser = new pb::MessageParser<C2SGetCatFood>(() => new C2SGetCatFood());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetCatFood> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetCatFood() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetCatFood(C2SGetCatFood other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetCatFood Clone() {
      return new C2SGetCatFood(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetCatFood);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetCatFood other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetCatFood other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetCatFood message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10027,
      }

    }
    #endregion

  }

  public sealed partial class S2CGetCatFood : pb::IMessage<S2CGetCatFood> {
    private static readonly pb::MessageParser<S2CGetCatFood> _parser = new pb::MessageParser<S2CGetCatFood>(() => new S2CGetCatFood());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGetCatFood> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetCatFood() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetCatFood(S2CGetCatFood other) : this() {
      catFood_ = other.catFood_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetCatFood Clone() {
      return new S2CGetCatFood(this);
    }

    /// <summary>Field number for the "CatFood" field.</summary>
    public const int CatFoodFieldNumber = 1;
    private int catFood_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatFood {
      get { return catFood_; }
      set {
        catFood_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGetCatFood);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGetCatFood other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatFood != other.CatFood) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatFood != 0) hash ^= CatFood.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatFood != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatFood);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatFood != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatFood);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGetCatFood other) {
      if (other == null) {
        return;
      }
      if (other.CatFood != 0) {
        CatFood = other.CatFood;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatFood = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGetCatFood message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10028,
      }

    }
    #endregion

  }

  /// <summary>
  /// 体力
  /// </summary>
  public sealed partial class C2SGetSpirit : pb::IMessage<C2SGetSpirit> {
    private static readonly pb::MessageParser<C2SGetSpirit> _parser = new pb::MessageParser<C2SGetSpirit>(() => new C2SGetSpirit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetSpirit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetSpirit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetSpirit(C2SGetSpirit other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetSpirit Clone() {
      return new C2SGetSpirit(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetSpirit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetSpirit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetSpirit other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetSpirit message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10029,
      }

    }
    #endregion

  }

  public sealed partial class S2CGetSpirit : pb::IMessage<S2CGetSpirit> {
    private static readonly pb::MessageParser<S2CGetSpirit> _parser = new pb::MessageParser<S2CGetSpirit>(() => new S2CGetSpirit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGetSpirit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetSpirit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetSpirit(S2CGetSpirit other) : this() {
      spirit_ = other.spirit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetSpirit Clone() {
      return new S2CGetSpirit(this);
    }

    /// <summary>Field number for the "Spirit" field.</summary>
    public const int SpiritFieldNumber = 1;
    private int spirit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Spirit {
      get { return spirit_; }
      set {
        spirit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGetSpirit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGetSpirit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Spirit != other.Spirit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Spirit != 0) hash ^= Spirit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Spirit != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Spirit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Spirit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Spirit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGetSpirit other) {
      if (other == null) {
        return;
      }
      if (other.Spirit != 0) {
        Spirit = other.Spirit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Spirit = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGetSpirit message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10030,
      }

    }
    #endregion

  }

  public sealed partial class C2SStagePass : pb::IMessage<C2SStagePass> {
    private static readonly pb::MessageParser<C2SStagePass> _parser = new pb::MessageParser<C2SStagePass>(() => new C2SStagePass());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SStagePass> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SStagePass() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SStagePass(C2SStagePass other) : this() {
      stageId_ = other.stageId_;
      stars_ = other.stars_;
      score_ = other.score_;
      items_ = other.items_.Clone();
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SStagePass Clone() {
      return new C2SStagePass(this);
    }

    /// <summary>Field number for the "StageId" field.</summary>
    public const int StageIdFieldNumber = 1;
    private int stageId_;
    /// <summary>
    /// 关卡Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StageId {
      get { return stageId_; }
      set {
        stageId_ = value;
      }
    }

    /// <summary>Field number for the "Stars" field.</summary>
    public const int StarsFieldNumber = 2;
    private int stars_;
    /// <summary>
    /// 通关星星
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Stars {
      get { return stars_; }
      set {
        stars_ = value;
      }
    }

    /// <summary>Field number for the "Score" field.</summary>
    public const int ScoreFieldNumber = 3;
    private int score_;
    /// <summary>
    /// 通关积分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "Items" field.</summary>
    public const int ItemsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ItemInfo> _repeated_items_codec
        = pb::FieldCodec.ForMessage(34, global::Msg.ClientMessage.ItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> items_ = new pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo>();
    /// <summary>
    /// 使用的物品
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 5;
    private int result_;
    /// <summary>
    /// 通关结果  1 过关  0 失败
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SStagePass);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SStagePass other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StageId != other.StageId) return false;
      if (Stars != other.Stars) return false;
      if (Score != other.Score) return false;
      if(!items_.Equals(other.items_)) return false;
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StageId != 0) hash ^= StageId.GetHashCode();
      if (Stars != 0) hash ^= Stars.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      hash ^= items_.GetHashCode();
      if (Result != 0) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StageId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(StageId);
      }
      if (Stars != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Stars);
      }
      if (Score != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Score);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (Result != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StageId);
      }
      if (Stars != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stars);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SStagePass other) {
      if (other == null) {
        return;
      }
      if (other.StageId != 0) {
        StageId = other.StageId;
      }
      if (other.Stars != 0) {
        Stars = other.Stars;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      items_.Add(other.items_);
      if (other.Result != 0) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StageId = input.ReadInt32();
            break;
          }
          case 16: {
            Stars = input.ReadInt32();
            break;
          }
          case 24: {
            Score = input.ReadInt32();
            break;
          }
          case 34: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
          case 40: {
            Result = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SStagePass message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10100,
      }

    }
    #endregion

  }

  public sealed partial class PlayerStageInfo : pb::IMessage<PlayerStageInfo> {
    private static readonly pb::MessageParser<PlayerStageInfo> _parser = new pb::MessageParser<PlayerStageInfo>(() => new PlayerStageInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerStageInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStageInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStageInfo(PlayerStageInfo other) : this() {
      playerId_ = other.playerId_;
      score_ = other.score_;
      name_ = other.name_;
      lvl_ = other.lvl_;
      head_ = other.head_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStageInfo Clone() {
      return new PlayerStageInfo(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    /// <summary>
    /// 玩家Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "Score" field.</summary>
    public const int ScoreFieldNumber = 2;
    private int score_;
    /// <summary>
    /// 我的积分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    /// <summary>
    /// 玩家名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Lvl" field.</summary>
    public const int LvlFieldNumber = 4;
    private int lvl_;
    /// <summary>
    /// 玩家等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Lvl {
      get { return lvl_; }
      set {
        lvl_ = value;
      }
    }

    /// <summary>Field number for the "Head" field.</summary>
    public const int HeadFieldNumber = 5;
    private int head_;
    /// <summary>
    /// 玩家头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Head {
      get { return head_; }
      set {
        head_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerStageInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerStageInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (Score != other.Score) return false;
      if (Name != other.Name) return false;
      if (Lvl != other.Lvl) return false;
      if (Head != other.Head) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Lvl != 0) hash ^= Lvl.GetHashCode();
      if (Head != 0) hash ^= Head.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (Score != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Score);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Lvl != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Lvl);
      }
      if (Head != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Head);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Lvl != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Lvl);
      }
      if (Head != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Head);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerStageInfo other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Lvl != 0) {
        Lvl = other.Lvl;
      }
      if (other.Head != 0) {
        Head = other.Head;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            Score = input.ReadInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            Lvl = input.ReadInt32();
            break;
          }
          case 40: {
            Head = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CStagePass : pb::IMessage<S2CStagePass> {
    private static readonly pb::MessageParser<S2CStagePass> _parser = new pb::MessageParser<S2CStagePass>(() => new S2CStagePass());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CStagePass> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CStagePass() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CStagePass(S2CStagePass other) : this() {
      stageId_ = other.stageId_;
      stars_ = other.stars_;
      score_ = other.score_;
      topScore_ = other.topScore_;
      useItems_ = other.useItems_.Clone();
      getCoin_ = other.getCoin_;
      getItems_ = other.getItems_.Clone();
      friendItems_ = other.friendItems_.Clone();
      getCats_ = other.getCats_.Clone();
      getBuildings_ = other.getBuildings_.Clone();
      result_ = other.result_;
      getItemsFirst_ = other.getItemsFirst_.Clone();
      getItems3Star_ = other.getItems3Star_.Clone();
      catExtraAddCoin_ = other.catExtraAddCoin_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CStagePass Clone() {
      return new S2CStagePass(this);
    }

    /// <summary>Field number for the "StageId" field.</summary>
    public const int StageIdFieldNumber = 1;
    private int stageId_;
    /// <summary>
    /// 关卡Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StageId {
      get { return stageId_; }
      set {
        stageId_ = value;
      }
    }

    /// <summary>Field number for the "Stars" field.</summary>
    public const int StarsFieldNumber = 2;
    private int stars_;
    /// <summary>
    /// 通关星星
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Stars {
      get { return stars_; }
      set {
        stars_ = value;
      }
    }

    /// <summary>Field number for the "Score" field.</summary>
    public const int ScoreFieldNumber = 3;
    private int score_;
    /// <summary>
    /// 通关积分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "TopScore" field.</summary>
    public const int TopScoreFieldNumber = 4;
    private int topScore_;
    /// <summary>
    /// 最高积分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TopScore {
      get { return topScore_; }
      set {
        topScore_ = value;
      }
    }

    /// <summary>Field number for the "UseItems" field.</summary>
    public const int UseItemsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ItemInfo> _repeated_useItems_codec
        = pb::FieldCodec.ForMessage(42, global::Msg.ClientMessage.ItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> useItems_ = new pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo>();
    /// <summary>
    /// 使用的物品
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> UseItems {
      get { return useItems_; }
    }

    /// <summary>Field number for the "GetCoin" field.</summary>
    public const int GetCoinFieldNumber = 6;
    private int getCoin_;
    /// <summary>
    /// 获取的金币 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GetCoin {
      get { return getCoin_; }
      set {
        getCoin_ = value;
      }
    }

    /// <summary>Field number for the "GetItems" field.</summary>
    public const int GetItemsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ItemInfo> _repeated_getItems_codec
        = pb::FieldCodec.ForMessage(58, global::Msg.ClientMessage.ItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> getItems_ = new pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo>();
    /// <summary>
    /// 获得的物品
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> GetItems {
      get { return getItems_; }
    }

    /// <summary>Field number for the "FriendItems" field.</summary>
    public const int FriendItemsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.PlayerStageInfo> _repeated_friendItems_codec
        = pb::FieldCodec.ForMessage(74, global::Msg.ClientMessage.PlayerStageInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.PlayerStageInfo> friendItems_ = new pbc::RepeatedField<global::Msg.ClientMessage.PlayerStageInfo>();
    /// <summary>
    /// 好友信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.PlayerStageInfo> FriendItems {
      get { return friendItems_; }
    }

    /// <summary>Field number for the "GetCats" field.</summary>
    public const int GetCatsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.CatInfo> _repeated_getCats_codec
        = pb::FieldCodec.ForMessage(82, global::Msg.ClientMessage.CatInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.CatInfo> getCats_ = new pbc::RepeatedField<global::Msg.ClientMessage.CatInfo>();
    /// <summary>
    /// 猫
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.CatInfo> GetCats {
      get { return getCats_; }
    }

    /// <summary>Field number for the "GetBuildings" field.</summary>
    public const int GetBuildingsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.DepotBuildingInfo> _repeated_getBuildings_codec
        = pb::FieldCodec.ForMessage(90, global::Msg.ClientMessage.DepotBuildingInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.DepotBuildingInfo> getBuildings_ = new pbc::RepeatedField<global::Msg.ClientMessage.DepotBuildingInfo>();
    /// <summary>
    /// 建筑
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.DepotBuildingInfo> GetBuildings {
      get { return getBuildings_; }
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 12;
    private int result_;
    /// <summary>
    /// 通关结果  0 失败  1 过关
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "GetItemsFirst" field.</summary>
    public const int GetItemsFirstFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ItemInfo> _repeated_getItemsFirst_codec
        = pb::FieldCodec.ForMessage(106, global::Msg.ClientMessage.ItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> getItemsFirst_ = new pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo>();
    /// <summary>
    /// 获得的首通奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> GetItemsFirst {
      get { return getItemsFirst_; }
    }

    /// <summary>Field number for the "GetItems3Star" field.</summary>
    public const int GetItems3StarFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ItemInfo> _repeated_getItems3Star_codec
        = pb::FieldCodec.ForMessage(114, global::Msg.ClientMessage.ItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> getItems3Star_ = new pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo>();
    /// <summary>
    /// 获得的首次3星奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> GetItems3Star {
      get { return getItems3Star_; }
    }

    /// <summary>Field number for the "CatExtraAddCoin" field.</summary>
    public const int CatExtraAddCoinFieldNumber = 15;
    private int catExtraAddCoin_;
    /// <summary>
    /// 消除能力额外获得的金币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatExtraAddCoin {
      get { return catExtraAddCoin_; }
      set {
        catExtraAddCoin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CStagePass);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CStagePass other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StageId != other.StageId) return false;
      if (Stars != other.Stars) return false;
      if (Score != other.Score) return false;
      if (TopScore != other.TopScore) return false;
      if(!useItems_.Equals(other.useItems_)) return false;
      if (GetCoin != other.GetCoin) return false;
      if(!getItems_.Equals(other.getItems_)) return false;
      if(!friendItems_.Equals(other.friendItems_)) return false;
      if(!getCats_.Equals(other.getCats_)) return false;
      if(!getBuildings_.Equals(other.getBuildings_)) return false;
      if (Result != other.Result) return false;
      if(!getItemsFirst_.Equals(other.getItemsFirst_)) return false;
      if(!getItems3Star_.Equals(other.getItems3Star_)) return false;
      if (CatExtraAddCoin != other.CatExtraAddCoin) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StageId != 0) hash ^= StageId.GetHashCode();
      if (Stars != 0) hash ^= Stars.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (TopScore != 0) hash ^= TopScore.GetHashCode();
      hash ^= useItems_.GetHashCode();
      if (GetCoin != 0) hash ^= GetCoin.GetHashCode();
      hash ^= getItems_.GetHashCode();
      hash ^= friendItems_.GetHashCode();
      hash ^= getCats_.GetHashCode();
      hash ^= getBuildings_.GetHashCode();
      if (Result != 0) hash ^= Result.GetHashCode();
      hash ^= getItemsFirst_.GetHashCode();
      hash ^= getItems3Star_.GetHashCode();
      if (CatExtraAddCoin != 0) hash ^= CatExtraAddCoin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StageId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(StageId);
      }
      if (Stars != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Stars);
      }
      if (Score != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Score);
      }
      if (TopScore != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TopScore);
      }
      useItems_.WriteTo(output, _repeated_useItems_codec);
      if (GetCoin != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(GetCoin);
      }
      getItems_.WriteTo(output, _repeated_getItems_codec);
      friendItems_.WriteTo(output, _repeated_friendItems_codec);
      getCats_.WriteTo(output, _repeated_getCats_codec);
      getBuildings_.WriteTo(output, _repeated_getBuildings_codec);
      if (Result != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Result);
      }
      getItemsFirst_.WriteTo(output, _repeated_getItemsFirst_codec);
      getItems3Star_.WriteTo(output, _repeated_getItems3Star_codec);
      if (CatExtraAddCoin != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(CatExtraAddCoin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StageId);
      }
      if (Stars != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stars);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (TopScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TopScore);
      }
      size += useItems_.CalculateSize(_repeated_useItems_codec);
      if (GetCoin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GetCoin);
      }
      size += getItems_.CalculateSize(_repeated_getItems_codec);
      size += friendItems_.CalculateSize(_repeated_friendItems_codec);
      size += getCats_.CalculateSize(_repeated_getCats_codec);
      size += getBuildings_.CalculateSize(_repeated_getBuildings_codec);
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      size += getItemsFirst_.CalculateSize(_repeated_getItemsFirst_codec);
      size += getItems3Star_.CalculateSize(_repeated_getItems3Star_codec);
      if (CatExtraAddCoin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatExtraAddCoin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CStagePass other) {
      if (other == null) {
        return;
      }
      if (other.StageId != 0) {
        StageId = other.StageId;
      }
      if (other.Stars != 0) {
        Stars = other.Stars;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.TopScore != 0) {
        TopScore = other.TopScore;
      }
      useItems_.Add(other.useItems_);
      if (other.GetCoin != 0) {
        GetCoin = other.GetCoin;
      }
      getItems_.Add(other.getItems_);
      friendItems_.Add(other.friendItems_);
      getCats_.Add(other.getCats_);
      getBuildings_.Add(other.getBuildings_);
      if (other.Result != 0) {
        Result = other.Result;
      }
      getItemsFirst_.Add(other.getItemsFirst_);
      getItems3Star_.Add(other.getItems3Star_);
      if (other.CatExtraAddCoin != 0) {
        CatExtraAddCoin = other.CatExtraAddCoin;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StageId = input.ReadInt32();
            break;
          }
          case 16: {
            Stars = input.ReadInt32();
            break;
          }
          case 24: {
            Score = input.ReadInt32();
            break;
          }
          case 32: {
            TopScore = input.ReadInt32();
            break;
          }
          case 42: {
            useItems_.AddEntriesFrom(input, _repeated_useItems_codec);
            break;
          }
          case 48: {
            GetCoin = input.ReadInt32();
            break;
          }
          case 58: {
            getItems_.AddEntriesFrom(input, _repeated_getItems_codec);
            break;
          }
          case 74: {
            friendItems_.AddEntriesFrom(input, _repeated_friendItems_codec);
            break;
          }
          case 82: {
            getCats_.AddEntriesFrom(input, _repeated_getCats_codec);
            break;
          }
          case 90: {
            getBuildings_.AddEntriesFrom(input, _repeated_getBuildings_codec);
            break;
          }
          case 96: {
            Result = input.ReadInt32();
            break;
          }
          case 106: {
            getItemsFirst_.AddEntriesFrom(input, _repeated_getItemsFirst_codec);
            break;
          }
          case 114: {
            getItems3Star_.AddEntriesFrom(input, _repeated_getItems3Star_codec);
            break;
          }
          case 120: {
            CatExtraAddCoin = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CStagePass message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10101,
      }

    }
    #endregion

  }

  public sealed partial class C2SChapterUnlock : pb::IMessage<C2SChapterUnlock> {
    private static readonly pb::MessageParser<C2SChapterUnlock> _parser = new pb::MessageParser<C2SChapterUnlock>(() => new C2SChapterUnlock());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SChapterUnlock> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChapterUnlock() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChapterUnlock(C2SChapterUnlock other) : this() {
      unLockType_ = other.unLockType_;
      chapterId_ = other.chapterId_;
      friendIds_ = other.friendIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChapterUnlock Clone() {
      return new C2SChapterUnlock(this);
    }

    /// <summary>Field number for the "UnLockType" field.</summary>
    public const int UnLockTypeFieldNumber = 1;
    private int unLockType_;
    /// <summary>
    /// 解锁方式 0时间解锁 1星星解锁 2钻石解锁 3请求好友
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnLockType {
      get { return unLockType_; }
      set {
        unLockType_ = value;
      }
    }

    /// <summary>Field number for the "ChapterId" field.</summary>
    public const int ChapterIdFieldNumber = 2;
    private int chapterId_;
    /// <summary>
    /// 章节Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChapterId {
      get { return chapterId_; }
      set {
        chapterId_ = value;
      }
    }

    /// <summary>Field number for the "FriendIds" field.</summary>
    public const int FriendIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_friendIds_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> friendIds_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 好友Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> FriendIds {
      get { return friendIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SChapterUnlock);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SChapterUnlock other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnLockType != other.UnLockType) return false;
      if (ChapterId != other.ChapterId) return false;
      if(!friendIds_.Equals(other.friendIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnLockType != 0) hash ^= UnLockType.GetHashCode();
      if (ChapterId != 0) hash ^= ChapterId.GetHashCode();
      hash ^= friendIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnLockType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnLockType);
      }
      if (ChapterId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ChapterId);
      }
      friendIds_.WriteTo(output, _repeated_friendIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnLockType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnLockType);
      }
      if (ChapterId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChapterId);
      }
      size += friendIds_.CalculateSize(_repeated_friendIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SChapterUnlock other) {
      if (other == null) {
        return;
      }
      if (other.UnLockType != 0) {
        UnLockType = other.UnLockType;
      }
      if (other.ChapterId != 0) {
        ChapterId = other.ChapterId;
      }
      friendIds_.Add(other.friendIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UnLockType = input.ReadInt32();
            break;
          }
          case 16: {
            ChapterId = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            friendIds_.AddEntriesFrom(input, _repeated_friendIds_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SChapterUnlock message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10102,
      }

    }
    #endregion

  }

  public sealed partial class S2CChapterUnlock : pb::IMessage<S2CChapterUnlock> {
    private static readonly pb::MessageParser<S2CChapterUnlock> _parser = new pb::MessageParser<S2CChapterUnlock>(() => new S2CChapterUnlock());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CChapterUnlock> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChapterUnlock() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChapterUnlock(S2CChapterUnlock other) : this() {
      chapterId_ = other.chapterId_;
      maxUnlockStageId_ = other.maxUnlockStageId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChapterUnlock Clone() {
      return new S2CChapterUnlock(this);
    }

    /// <summary>Field number for the "ChapterId" field.</summary>
    public const int ChapterIdFieldNumber = 1;
    private int chapterId_;
    /// <summary>
    /// 章节Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChapterId {
      get { return chapterId_; }
      set {
        chapterId_ = value;
      }
    }

    /// <summary>Field number for the "MaxUnlockStageId" field.</summary>
    public const int MaxUnlockStageIdFieldNumber = 2;
    private int maxUnlockStageId_;
    /// <summary>
    /// 最大场景Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxUnlockStageId {
      get { return maxUnlockStageId_; }
      set {
        maxUnlockStageId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CChapterUnlock);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CChapterUnlock other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChapterId != other.ChapterId) return false;
      if (MaxUnlockStageId != other.MaxUnlockStageId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChapterId != 0) hash ^= ChapterId.GetHashCode();
      if (MaxUnlockStageId != 0) hash ^= MaxUnlockStageId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ChapterId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChapterId);
      }
      if (MaxUnlockStageId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxUnlockStageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChapterId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChapterId);
      }
      if (MaxUnlockStageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxUnlockStageId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CChapterUnlock other) {
      if (other == null) {
        return;
      }
      if (other.ChapterId != 0) {
        ChapterId = other.ChapterId;
      }
      if (other.MaxUnlockStageId != 0) {
        MaxUnlockStageId = other.MaxUnlockStageId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChapterId = input.ReadInt32();
            break;
          }
          case 16: {
            MaxUnlockStageId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CChapterUnlock message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10103,
      }

    }
    #endregion

  }

  public sealed partial class C2SGetCurHelpReqPIds : pb::IMessage<C2SGetCurHelpReqPIds> {
    private static readonly pb::MessageParser<C2SGetCurHelpReqPIds> _parser = new pb::MessageParser<C2SGetCurHelpReqPIds>(() => new C2SGetCurHelpReqPIds());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetCurHelpReqPIds> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetCurHelpReqPIds() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetCurHelpReqPIds(C2SGetCurHelpReqPIds other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetCurHelpReqPIds Clone() {
      return new C2SGetCurHelpReqPIds(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetCurHelpReqPIds);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetCurHelpReqPIds other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetCurHelpReqPIds other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetCurHelpReqPIds message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10104,
      }

    }
    #endregion

  }

  public sealed partial class S2CRetCurHelpReqPIds : pb::IMessage<S2CRetCurHelpReqPIds> {
    private static readonly pb::MessageParser<S2CRetCurHelpReqPIds> _parser = new pb::MessageParser<S2CRetCurHelpReqPIds>(() => new S2CRetCurHelpReqPIds());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CRetCurHelpReqPIds> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRetCurHelpReqPIds() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRetCurHelpReqPIds(S2CRetCurHelpReqPIds other) : this() {
      pIds_ = other.pIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRetCurHelpReqPIds Clone() {
      return new S2CRetCurHelpReqPIds(this);
    }

    /// <summary>Field number for the "PIds" field.</summary>
    public const int PIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_pIds_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> pIds_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 当前请求过的玩家Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> PIds {
      get { return pIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CRetCurHelpReqPIds);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CRetCurHelpReqPIds other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pIds_.Equals(other.pIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      pIds_.WriteTo(output, _repeated_pIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += pIds_.CalculateSize(_repeated_pIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CRetCurHelpReqPIds other) {
      if (other == null) {
        return;
      }
      pIds_.Add(other.pIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            pIds_.AddEntriesFrom(input, _repeated_pIds_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CRetCurHelpReqPIds message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10105,
      }

    }
    #endregion

  }

  public sealed partial class S2CRetDayHelpUnlockCount : pb::IMessage<S2CRetDayHelpUnlockCount> {
    private static readonly pb::MessageParser<S2CRetDayHelpUnlockCount> _parser = new pb::MessageParser<S2CRetDayHelpUnlockCount>(() => new S2CRetDayHelpUnlockCount());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CRetDayHelpUnlockCount> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRetDayHelpUnlockCount() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRetDayHelpUnlockCount(S2CRetDayHelpUnlockCount other) : this() {
      helpOtherNum_ = other.helpOtherNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRetDayHelpUnlockCount Clone() {
      return new S2CRetDayHelpUnlockCount(this);
    }

    /// <summary>Field number for the "HelpOtherNum" field.</summary>
    public const int HelpOtherNumFieldNumber = 1;
    private int helpOtherNum_;
    /// <summary>
    /// 今天剩余帮助别人的次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HelpOtherNum {
      get { return helpOtherNum_; }
      set {
        helpOtherNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CRetDayHelpUnlockCount);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CRetDayHelpUnlockCount other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HelpOtherNum != other.HelpOtherNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HelpOtherNum != 0) hash ^= HelpOtherNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HelpOtherNum != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(HelpOtherNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HelpOtherNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HelpOtherNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CRetDayHelpUnlockCount other) {
      if (other == null) {
        return;
      }
      if (other.HelpOtherNum != 0) {
        HelpOtherNum = other.HelpOtherNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HelpOtherNum = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CRetDayHelpUnlockCount message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10106,
      }

    }
    #endregion

  }

  /// <summary>
  /// 关卡开始
  /// </summary>
  public sealed partial class C2SStageBegin : pb::IMessage<C2SStageBegin> {
    private static readonly pb::MessageParser<C2SStageBegin> _parser = new pb::MessageParser<C2SStageBegin>(() => new C2SStageBegin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SStageBegin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SStageBegin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SStageBegin(C2SStageBegin other) : this() {
      stageId_ = other.stageId_;
      catId_ = other.catId_;
      itemIds_ = other.itemIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SStageBegin Clone() {
      return new C2SStageBegin(this);
    }

    /// <summary>Field number for the "StageId" field.</summary>
    public const int StageIdFieldNumber = 1;
    private int stageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StageId {
      get { return stageId_; }
      set {
        stageId_ = value;
      }
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 2;
    private int catId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    /// <summary>Field number for the "ItemIds" field.</summary>
    public const int ItemIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_itemIds_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> itemIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ItemIds {
      get { return itemIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SStageBegin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SStageBegin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StageId != other.StageId) return false;
      if (CatId != other.CatId) return false;
      if(!itemIds_.Equals(other.itemIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StageId != 0) hash ^= StageId.GetHashCode();
      if (CatId != 0) hash ^= CatId.GetHashCode();
      hash ^= itemIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StageId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(StageId);
      }
      if (CatId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CatId);
      }
      itemIds_.WriteTo(output, _repeated_itemIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StageId);
      }
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      size += itemIds_.CalculateSize(_repeated_itemIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SStageBegin other) {
      if (other == null) {
        return;
      }
      if (other.StageId != 0) {
        StageId = other.StageId;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      itemIds_.Add(other.itemIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StageId = input.ReadInt32();
            break;
          }
          case 16: {
            CatId = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            itemIds_.AddEntriesFrom(input, _repeated_itemIds_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SStageBegin message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10107,
      }

    }
    #endregion

  }

  public sealed partial class S2CStageBeginResult : pb::IMessage<S2CStageBeginResult> {
    private static readonly pb::MessageParser<S2CStageBeginResult> _parser = new pb::MessageParser<S2CStageBeginResult>(() => new S2CStageBeginResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CStageBeginResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CStageBeginResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CStageBeginResult(S2CStageBeginResult other) : this() {
      stageId_ = other.stageId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CStageBeginResult Clone() {
      return new S2CStageBeginResult(this);
    }

    /// <summary>Field number for the "StageId" field.</summary>
    public const int StageIdFieldNumber = 1;
    private int stageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StageId {
      get { return stageId_; }
      set {
        stageId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CStageBeginResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CStageBeginResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StageId != other.StageId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StageId != 0) hash ^= StageId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StageId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(StageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StageId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CStageBeginResult other) {
      if (other == null) {
        return;
      }
      if (other.StageId != 0) {
        StageId = other.StageId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StageId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CStageBeginResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10108,
      }

    }
    #endregion

  }

  /// <summary>
  /// =================================== 物品 ===================================
  /// </summary>
  public sealed partial class S2COpenChest : pb::IMessage<S2COpenChest> {
    private static readonly pb::MessageParser<S2COpenChest> _parser = new pb::MessageParser<S2COpenChest>(() => new S2COpenChest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2COpenChest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2COpenChest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2COpenChest(S2COpenChest other) : this() {
      chestId_ = other.chestId_;
      curCoins_ = other.curCoins_;
      curDiamond_ = other.curDiamond_;
      newItems_ = other.newItems_.Clone();
      costDiamond_ = other.costDiamond_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2COpenChest Clone() {
      return new S2COpenChest(this);
    }

    /// <summary>Field number for the "ChestId" field.</summary>
    public const int ChestIdFieldNumber = 1;
    private int chestId_;
    /// <summary>
    /// 宝箱Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChestId {
      get { return chestId_; }
      set {
        chestId_ = value;
      }
    }

    /// <summary>Field number for the "CurCoins" field.</summary>
    public const int CurCoinsFieldNumber = 2;
    private int curCoins_;
    /// <summary>
    /// 当前金币数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurCoins {
      get { return curCoins_; }
      set {
        curCoins_ = value;
      }
    }

    /// <summary>Field number for the "CurDiamond" field.</summary>
    public const int CurDiamondFieldNumber = 3;
    private int curDiamond_;
    /// <summary>
    /// 当前钻石
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurDiamond {
      get { return curDiamond_; }
      set {
        curDiamond_ = value;
      }
    }

    /// <summary>Field number for the "NewItems" field.</summary>
    public const int NewItemsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ItemInfo> _repeated_newItems_codec
        = pb::FieldCodec.ForMessage(34, global::Msg.ClientMessage.ItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> newItems_ = new pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo>();
    /// <summary>
    /// 新增的物品
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> NewItems {
      get { return newItems_; }
    }

    /// <summary>Field number for the "CostDiamond" field.</summary>
    public const int CostDiamondFieldNumber = 5;
    private int costDiamond_;
    /// <summary>
    /// 消耗的钻石
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CostDiamond {
      get { return costDiamond_; }
      set {
        costDiamond_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2COpenChest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2COpenChest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChestId != other.ChestId) return false;
      if (CurCoins != other.CurCoins) return false;
      if (CurDiamond != other.CurDiamond) return false;
      if(!newItems_.Equals(other.newItems_)) return false;
      if (CostDiamond != other.CostDiamond) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChestId != 0) hash ^= ChestId.GetHashCode();
      if (CurCoins != 0) hash ^= CurCoins.GetHashCode();
      if (CurDiamond != 0) hash ^= CurDiamond.GetHashCode();
      hash ^= newItems_.GetHashCode();
      if (CostDiamond != 0) hash ^= CostDiamond.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ChestId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChestId);
      }
      if (CurCoins != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurCoins);
      }
      if (CurDiamond != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CurDiamond);
      }
      newItems_.WriteTo(output, _repeated_newItems_codec);
      if (CostDiamond != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CostDiamond);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChestId);
      }
      if (CurCoins != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurCoins);
      }
      if (CurDiamond != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurDiamond);
      }
      size += newItems_.CalculateSize(_repeated_newItems_codec);
      if (CostDiamond != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CostDiamond);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2COpenChest other) {
      if (other == null) {
        return;
      }
      if (other.ChestId != 0) {
        ChestId = other.ChestId;
      }
      if (other.CurCoins != 0) {
        CurCoins = other.CurCoins;
      }
      if (other.CurDiamond != 0) {
        CurDiamond = other.CurDiamond;
      }
      newItems_.Add(other.newItems_);
      if (other.CostDiamond != 0) {
        CostDiamond = other.CostDiamond;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChestId = input.ReadInt32();
            break;
          }
          case 16: {
            CurCoins = input.ReadInt32();
            break;
          }
          case 24: {
            CurDiamond = input.ReadInt32();
            break;
          }
          case 34: {
            newItems_.AddEntriesFrom(input, _repeated_newItems_codec);
            break;
          }
          case 40: {
            CostDiamond = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2COpenChest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10200,
      }

    }
    #endregion

  }

  public sealed partial class C2SBuyChest : pb::IMessage<C2SBuyChest> {
    private static readonly pb::MessageParser<C2SBuyChest> _parser = new pb::MessageParser<C2SBuyChest>(() => new C2SBuyChest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SBuyChest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SBuyChest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SBuyChest(C2SBuyChest other) : this() {
      chestId_ = other.chestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SBuyChest Clone() {
      return new C2SBuyChest(this);
    }

    /// <summary>Field number for the "ChestId" field.</summary>
    public const int ChestIdFieldNumber = 1;
    private int chestId_;
    /// <summary>
    /// 宝箱配置Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChestId {
      get { return chestId_; }
      set {
        chestId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SBuyChest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SBuyChest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChestId != other.ChestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChestId != 0) hash ^= ChestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ChestId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SBuyChest other) {
      if (other == null) {
        return;
      }
      if (other.ChestId != 0) {
        ChestId = other.ChestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChestId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SBuyChest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10201,
      }

    }
    #endregion

  }

  public sealed partial class S2CBuyChest : pb::IMessage<S2CBuyChest> {
    private static readonly pb::MessageParser<S2CBuyChest> _parser = new pb::MessageParser<S2CBuyChest>(() => new S2CBuyChest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CBuyChest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[80]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CBuyChest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CBuyChest(S2CBuyChest other) : this() {
      chestOpen_ = other.chestOpen_ != null ? other.chestOpen_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CBuyChest Clone() {
      return new S2CBuyChest(this);
    }

    /// <summary>Field number for the "ChestOpen" field.</summary>
    public const int ChestOpenFieldNumber = 1;
    private global::Msg.ClientMessage.S2COpenChest chestOpen_;
    /// <summary>
    /// 宝箱打开结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ClientMessage.S2COpenChest ChestOpen {
      get { return chestOpen_; }
      set {
        chestOpen_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CBuyChest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CBuyChest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ChestOpen, other.ChestOpen)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (chestOpen_ != null) hash ^= ChestOpen.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (chestOpen_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ChestOpen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (chestOpen_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChestOpen);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CBuyChest other) {
      if (other == null) {
        return;
      }
      if (other.chestOpen_ != null) {
        if (chestOpen_ == null) {
          ChestOpen = new global::Msg.ClientMessage.S2COpenChest();
        }
        ChestOpen.MergeFrom(other.ChestOpen);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (chestOpen_ == null) {
              ChestOpen = new global::Msg.ClientMessage.S2COpenChest();
            }
            input.ReadMessage(ChestOpen);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CBuyChest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10202,
      }

    }
    #endregion

  }

  /// <summary>
  /// 客户端请求使用物品
  /// </summary>
  public sealed partial class C2SUseItem : pb::IMessage<C2SUseItem> {
    private static readonly pb::MessageParser<C2SUseItem> _parser = new pb::MessageParser<C2SUseItem>(() => new C2SUseItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SUseItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[81]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SUseItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SUseItem(C2SUseItem other) : this() {
      itemCfgId_ = other.itemCfgId_;
      itemNum_ = other.itemNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SUseItem Clone() {
      return new C2SUseItem(this);
    }

    /// <summary>Field number for the "ItemCfgId" field.</summary>
    public const int ItemCfgIdFieldNumber = 1;
    private int itemCfgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemCfgId {
      get { return itemCfgId_; }
      set {
        itemCfgId_ = value;
      }
    }

    /// <summary>Field number for the "ItemNum" field.</summary>
    public const int ItemNumFieldNumber = 2;
    private int itemNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemNum {
      get { return itemNum_; }
      set {
        itemNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SUseItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SUseItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemCfgId != other.ItemCfgId) return false;
      if (ItemNum != other.ItemNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemCfgId != 0) hash ^= ItemCfgId.GetHashCode();
      if (ItemNum != 0) hash ^= ItemNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ItemCfgId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ItemCfgId);
      }
      if (ItemNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemCfgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemCfgId);
      }
      if (ItemNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SUseItem other) {
      if (other == null) {
        return;
      }
      if (other.ItemCfgId != 0) {
        ItemCfgId = other.ItemCfgId;
      }
      if (other.ItemNum != 0) {
        ItemNum = other.ItemNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemCfgId = input.ReadInt32();
            break;
          }
          case 16: {
            ItemNum = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SUseItem message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10203,
      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器返回使用物品结果
  /// </summary>
  public sealed partial class S2CUseItem : pb::IMessage<S2CUseItem> {
    private static readonly pb::MessageParser<S2CUseItem> _parser = new pb::MessageParser<S2CUseItem>(() => new S2CUseItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CUseItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[82]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CUseItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CUseItem(S2CUseItem other) : this() {
      costItem_ = other.costItem_ != null ? other.costItem_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CUseItem Clone() {
      return new S2CUseItem(this);
    }

    /// <summary>Field number for the "CostItem" field.</summary>
    public const int CostItemFieldNumber = 1;
    private global::Msg.ClientMessage.ItemInfo costItem_;
    /// <summary>
    /// 消耗物品
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ClientMessage.ItemInfo CostItem {
      get { return costItem_; }
      set {
        costItem_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CUseItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CUseItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CostItem, other.CostItem)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (costItem_ != null) hash ^= CostItem.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (costItem_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CostItem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (costItem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CostItem);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CUseItem other) {
      if (other == null) {
        return;
      }
      if (other.costItem_ != null) {
        if (costItem_ == null) {
          CostItem = new global::Msg.ClientMessage.ItemInfo();
        }
        CostItem.MergeFrom(other.CostItem);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (costItem_ == null) {
              CostItem = new global::Msg.ClientMessage.ItemInfo();
            }
            input.ReadMessage(CostItem);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CUseItem message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10204,
      }

    }
    #endregion

  }

  /// <summary>
  /// 出售物品
  /// </summary>
  public sealed partial class C2SSellItem : pb::IMessage<C2SSellItem> {
    private static readonly pb::MessageParser<C2SSellItem> _parser = new pb::MessageParser<C2SSellItem>(() => new C2SSellItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SSellItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[83]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSellItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSellItem(C2SSellItem other) : this() {
      itemId_ = other.itemId_;
      itemNum_ = other.itemNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSellItem Clone() {
      return new C2SSellItem(this);
    }

    /// <summary>Field number for the "ItemId" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private int itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "ItemNum" field.</summary>
    public const int ItemNumFieldNumber = 2;
    private int itemNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemNum {
      get { return itemNum_; }
      set {
        itemNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SSellItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SSellItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (ItemNum != other.ItemNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (ItemNum != 0) hash ^= ItemNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ItemId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ItemId);
      }
      if (ItemNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (ItemNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SSellItem other) {
      if (other == null) {
        return;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.ItemNum != 0) {
        ItemNum = other.ItemNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemId = input.ReadInt32();
            break;
          }
          case 16: {
            ItemNum = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SSellItem message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10205,
      }

    }
    #endregion

  }

  public sealed partial class S2CSellItemResult : pb::IMessage<S2CSellItemResult> {
    private static readonly pb::MessageParser<S2CSellItemResult> _parser = new pb::MessageParser<S2CSellItemResult>(() => new S2CSellItemResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSellItemResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[84]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSellItemResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSellItemResult(S2CSellItemResult other) : this() {
      itemId_ = other.itemId_;
      itemNum_ = other.itemNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSellItemResult Clone() {
      return new S2CSellItemResult(this);
    }

    /// <summary>Field number for the "ItemId" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private int itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "ItemNum" field.</summary>
    public const int ItemNumFieldNumber = 2;
    private int itemNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemNum {
      get { return itemNum_; }
      set {
        itemNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSellItemResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSellItemResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (ItemNum != other.ItemNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (ItemNum != 0) hash ^= ItemNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ItemId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ItemId);
      }
      if (ItemNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (ItemNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSellItemResult other) {
      if (other == null) {
        return;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.ItemNum != 0) {
        ItemNum = other.ItemNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemId = input.ReadInt32();
            break;
          }
          case 16: {
            ItemNum = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CSellItemResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10206,
      }

    }
    #endregion

  }

  /// <summary>
  /// ----------------------------------- 邮件 -----------------------------------
  /// 发送邮件
  /// </summary>
  public sealed partial class C2SMailSendRequest : pb::IMessage<C2SMailSendRequest> {
    private static readonly pb::MessageParser<C2SMailSendRequest> _parser = new pb::MessageParser<C2SMailSendRequest>(() => new C2SMailSendRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SMailSendRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[85]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMailSendRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMailSendRequest(C2SMailSendRequest other) : this() {
      receiverId_ = other.receiverId_;
      mailType_ = other.mailType_;
      mailSubtype_ = other.mailSubtype_;
      mailTitle_ = other.mailTitle_;
      mailContent_ = other.mailContent_;
      attachedItems_ = other.attachedItems_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMailSendRequest Clone() {
      return new C2SMailSendRequest(this);
    }

    /// <summary>Field number for the "ReceiverId" field.</summary>
    public const int ReceiverIdFieldNumber = 1;
    private int receiverId_;
    /// <summary>
    /// 接收者ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReceiverId {
      get { return receiverId_; }
      set {
        receiverId_ = value;
      }
    }

    /// <summary>Field number for the "MailType" field.</summary>
    public const int MailTypeFieldNumber = 2;
    private int mailType_;
    /// <summary>
    /// 邮件类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MailType {
      get { return mailType_; }
      set {
        mailType_ = value;
      }
    }

    /// <summary>Field number for the "MailSubtype" field.</summary>
    public const int MailSubtypeFieldNumber = 3;
    private int mailSubtype_;
    /// <summary>
    /// 子类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MailSubtype {
      get { return mailSubtype_; }
      set {
        mailSubtype_ = value;
      }
    }

    /// <summary>Field number for the "MailTitle" field.</summary>
    public const int MailTitleFieldNumber = 4;
    private string mailTitle_ = "";
    /// <summary>
    /// 邮件标题
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MailTitle {
      get { return mailTitle_; }
      set {
        mailTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MailContent" field.</summary>
    public const int MailContentFieldNumber = 5;
    private string mailContent_ = "";
    /// <summary>
    /// 邮件内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MailContent {
      get { return mailContent_; }
      set {
        mailContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AttachedItems" field.</summary>
    public const int AttachedItemsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ItemInfo> _repeated_attachedItems_codec
        = pb::FieldCodec.ForMessage(50, global::Msg.ClientMessage.ItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> attachedItems_ = new pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo>();
    /// <summary>
    /// 附加物品
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> AttachedItems {
      get { return attachedItems_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SMailSendRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SMailSendRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReceiverId != other.ReceiverId) return false;
      if (MailType != other.MailType) return false;
      if (MailSubtype != other.MailSubtype) return false;
      if (MailTitle != other.MailTitle) return false;
      if (MailContent != other.MailContent) return false;
      if(!attachedItems_.Equals(other.attachedItems_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReceiverId != 0) hash ^= ReceiverId.GetHashCode();
      if (MailType != 0) hash ^= MailType.GetHashCode();
      if (MailSubtype != 0) hash ^= MailSubtype.GetHashCode();
      if (MailTitle.Length != 0) hash ^= MailTitle.GetHashCode();
      if (MailContent.Length != 0) hash ^= MailContent.GetHashCode();
      hash ^= attachedItems_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReceiverId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ReceiverId);
      }
      if (MailType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MailType);
      }
      if (MailSubtype != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MailSubtype);
      }
      if (MailTitle.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MailTitle);
      }
      if (MailContent.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(MailContent);
      }
      attachedItems_.WriteTo(output, _repeated_attachedItems_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReceiverId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReceiverId);
      }
      if (MailType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MailType);
      }
      if (MailSubtype != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MailSubtype);
      }
      if (MailTitle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MailTitle);
      }
      if (MailContent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MailContent);
      }
      size += attachedItems_.CalculateSize(_repeated_attachedItems_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SMailSendRequest other) {
      if (other == null) {
        return;
      }
      if (other.ReceiverId != 0) {
        ReceiverId = other.ReceiverId;
      }
      if (other.MailType != 0) {
        MailType = other.MailType;
      }
      if (other.MailSubtype != 0) {
        MailSubtype = other.MailSubtype;
      }
      if (other.MailTitle.Length != 0) {
        MailTitle = other.MailTitle;
      }
      if (other.MailContent.Length != 0) {
        MailContent = other.MailContent;
      }
      attachedItems_.Add(other.attachedItems_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReceiverId = input.ReadInt32();
            break;
          }
          case 16: {
            MailType = input.ReadInt32();
            break;
          }
          case 24: {
            MailSubtype = input.ReadInt32();
            break;
          }
          case 34: {
            MailTitle = input.ReadString();
            break;
          }
          case 42: {
            MailContent = input.ReadString();
            break;
          }
          case 50: {
            attachedItems_.AddEntriesFrom(input, _repeated_attachedItems_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SMailSendRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10300,
      }

    }
    #endregion

  }

  public sealed partial class S2CMailSendResponse : pb::IMessage<S2CMailSendResponse> {
    private static readonly pb::MessageParser<S2CMailSendResponse> _parser = new pb::MessageParser<S2CMailSendResponse>(() => new S2CMailSendResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CMailSendResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[86]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMailSendResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMailSendResponse(S2CMailSendResponse other) : this() {
      mailId_ = other.mailId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMailSendResponse Clone() {
      return new S2CMailSendResponse(this);
    }

    /// <summary>Field number for the "MailId" field.</summary>
    public const int MailIdFieldNumber = 1;
    private int mailId_;
    /// <summary>
    /// 邮件ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MailId {
      get { return mailId_; }
      set {
        mailId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CMailSendResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CMailSendResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MailId != other.MailId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MailId != 0) hash ^= MailId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MailId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MailId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MailId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MailId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CMailSendResponse other) {
      if (other == null) {
        return;
      }
      if (other.MailId != 0) {
        MailId = other.MailId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MailId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CMailSendResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10301,
      }

    }
    #endregion

  }

  /// <summary>
  /// 获取邮件列表
  /// </summary>
  public sealed partial class C2SMailListRequest : pb::IMessage<C2SMailListRequest> {
    private static readonly pb::MessageParser<C2SMailListRequest> _parser = new pb::MessageParser<C2SMailListRequest>(() => new C2SMailListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SMailListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[87]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMailListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMailListRequest(C2SMailListRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMailListRequest Clone() {
      return new C2SMailListRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SMailListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SMailListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SMailListRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SMailListRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10302,
      }

    }
    #endregion

  }

  public sealed partial class MailBasicData : pb::IMessage<MailBasicData> {
    private static readonly pb::MessageParser<MailBasicData> _parser = new pb::MessageParser<MailBasicData>(() => new MailBasicData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MailBasicData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[88]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MailBasicData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MailBasicData(MailBasicData other) : this() {
      id_ = other.id_;
      type_ = other.type_;
      subtype_ = other.subtype_;
      title_ = other.title_;
      senderName_ = other.senderName_;
      senderId_ = other.senderId_;
      sendTime_ = other.sendTime_;
      isRead_ = other.isRead_;
      isGetAttached_ = other.isGetAttached_;
      hasAttached_ = other.hasAttached_;
      value_ = other.value_;
      leftSecs_ = other.leftSecs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MailBasicData Clone() {
      return new MailBasicData(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 邮件ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 2;
    private int type_;
    /// <summary>
    /// 邮件类型   1 系统  2 个人  3 公会群发
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "Subtype" field.</summary>
    public const int SubtypeFieldNumber = 3;
    private int subtype_;
    /// <summary>
    /// 子类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Subtype {
      get { return subtype_; }
      set {
        subtype_ = value;
      }
    }

    /// <summary>Field number for the "Title" field.</summary>
    public const int TitleFieldNumber = 4;
    private string title_ = "";
    /// <summary>
    /// 邮件标题
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SenderName" field.</summary>
    public const int SenderNameFieldNumber = 5;
    private string senderName_ = "";
    /// <summary>
    /// 发送者
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SenderName {
      get { return senderName_; }
      set {
        senderName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SenderId" field.</summary>
    public const int SenderIdFieldNumber = 6;
    private int senderId_;
    /// <summary>
    /// 发送者ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SenderId {
      get { return senderId_; }
      set {
        senderId_ = value;
      }
    }

    /// <summary>Field number for the "SendTime" field.</summary>
    public const int SendTimeFieldNumber = 7;
    private int sendTime_;
    /// <summary>
    /// 发送时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SendTime {
      get { return sendTime_; }
      set {
        sendTime_ = value;
      }
    }

    /// <summary>Field number for the "IsRead" field.</summary>
    public const int IsReadFieldNumber = 8;
    private bool isRead_;
    /// <summary>
    /// 是否已读
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsRead {
      get { return isRead_; }
      set {
        isRead_ = value;
      }
    }

    /// <summary>Field number for the "IsGetAttached" field.</summary>
    public const int IsGetAttachedFieldNumber = 9;
    private bool isGetAttached_;
    /// <summary>
    /// 是否已领取附件
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsGetAttached {
      get { return isGetAttached_; }
      set {
        isGetAttached_ = value;
      }
    }

    /// <summary>Field number for the "HasAttached" field.</summary>
    public const int HasAttachedFieldNumber = 10;
    private bool hasAttached_;
    /// <summary>
    /// 是否有附件
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAttached {
      get { return hasAttached_; }
      set {
        hasAttached_ = value;
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 11;
    private int value_;
    /// <summary>
    /// 额外数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "LeftSecs" field.</summary>
    public const int LeftSecsFieldNumber = 12;
    private int leftSecs_;
    /// <summary>
    /// 剩余时间 秒
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LeftSecs {
      get { return leftSecs_; }
      set {
        leftSecs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MailBasicData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MailBasicData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if (Subtype != other.Subtype) return false;
      if (Title != other.Title) return false;
      if (SenderName != other.SenderName) return false;
      if (SenderId != other.SenderId) return false;
      if (SendTime != other.SendTime) return false;
      if (IsRead != other.IsRead) return false;
      if (IsGetAttached != other.IsGetAttached) return false;
      if (HasAttached != other.HasAttached) return false;
      if (Value != other.Value) return false;
      if (LeftSecs != other.LeftSecs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Subtype != 0) hash ^= Subtype.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (SenderName.Length != 0) hash ^= SenderName.GetHashCode();
      if (SenderId != 0) hash ^= SenderId.GetHashCode();
      if (SendTime != 0) hash ^= SendTime.GetHashCode();
      if (IsRead != false) hash ^= IsRead.GetHashCode();
      if (IsGetAttached != false) hash ^= IsGetAttached.GetHashCode();
      if (HasAttached != false) hash ^= HasAttached.GetHashCode();
      if (Value != 0) hash ^= Value.GetHashCode();
      if (LeftSecs != 0) hash ^= LeftSecs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (Subtype != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Subtype);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Title);
      }
      if (SenderName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SenderName);
      }
      if (SenderId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(SenderId);
      }
      if (SendTime != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SendTime);
      }
      if (IsRead != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsRead);
      }
      if (IsGetAttached != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsGetAttached);
      }
      if (HasAttached != false) {
        output.WriteRawTag(80);
        output.WriteBool(HasAttached);
      }
      if (Value != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Value);
      }
      if (LeftSecs != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(LeftSecs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Subtype != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Subtype);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (SenderName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SenderName);
      }
      if (SenderId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SenderId);
      }
      if (SendTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SendTime);
      }
      if (IsRead != false) {
        size += 1 + 1;
      }
      if (IsGetAttached != false) {
        size += 1 + 1;
      }
      if (HasAttached != false) {
        size += 1 + 1;
      }
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (LeftSecs != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeftSecs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MailBasicData other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Subtype != 0) {
        Subtype = other.Subtype;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.SenderName.Length != 0) {
        SenderName = other.SenderName;
      }
      if (other.SenderId != 0) {
        SenderId = other.SenderId;
      }
      if (other.SendTime != 0) {
        SendTime = other.SendTime;
      }
      if (other.IsRead != false) {
        IsRead = other.IsRead;
      }
      if (other.IsGetAttached != false) {
        IsGetAttached = other.IsGetAttached;
      }
      if (other.HasAttached != false) {
        HasAttached = other.HasAttached;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      if (other.LeftSecs != 0) {
        LeftSecs = other.LeftSecs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 24: {
            Subtype = input.ReadInt32();
            break;
          }
          case 34: {
            Title = input.ReadString();
            break;
          }
          case 42: {
            SenderName = input.ReadString();
            break;
          }
          case 48: {
            SenderId = input.ReadInt32();
            break;
          }
          case 56: {
            SendTime = input.ReadInt32();
            break;
          }
          case 64: {
            IsRead = input.ReadBool();
            break;
          }
          case 72: {
            IsGetAttached = input.ReadBool();
            break;
          }
          case 80: {
            HasAttached = input.ReadBool();
            break;
          }
          case 88: {
            Value = input.ReadInt32();
            break;
          }
          case 96: {
            LeftSecs = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CMailListResponse : pb::IMessage<S2CMailListResponse> {
    private static readonly pb::MessageParser<S2CMailListResponse> _parser = new pb::MessageParser<S2CMailListResponse>(() => new S2CMailListResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CMailListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[89]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMailListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMailListResponse(S2CMailListResponse other) : this() {
      mails_ = other.mails_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMailListResponse Clone() {
      return new S2CMailListResponse(this);
    }

    /// <summary>Field number for the "Mails" field.</summary>
    public const int MailsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.MailBasicData> _repeated_mails_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.MailBasicData.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.MailBasicData> mails_ = new pbc::RepeatedField<global::Msg.ClientMessage.MailBasicData>();
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.MailBasicData> Mails {
      get { return mails_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CMailListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CMailListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mails_.Equals(other.mails_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mails_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      mails_.WriteTo(output, _repeated_mails_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mails_.CalculateSize(_repeated_mails_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CMailListResponse other) {
      if (other == null) {
        return;
      }
      mails_.Add(other.mails_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mails_.AddEntriesFrom(input, _repeated_mails_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CMailListResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10303,
      }

    }
    #endregion

  }

  /// <summary>
  /// 请求邮件具体内容
  /// </summary>
  public sealed partial class C2SMailDetailRequest : pb::IMessage<C2SMailDetailRequest> {
    private static readonly pb::MessageParser<C2SMailDetailRequest> _parser = new pb::MessageParser<C2SMailDetailRequest>(() => new C2SMailDetailRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SMailDetailRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[90]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMailDetailRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMailDetailRequest(C2SMailDetailRequest other) : this() {
      ids_ = other.ids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMailDetailRequest Clone() {
      return new C2SMailDetailRequest(this);
    }

    /// <summary>Field number for the "Ids" field.</summary>
    public const int IdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_ids_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> ids_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 邮件ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Ids {
      get { return ids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SMailDetailRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SMailDetailRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ids_.Equals(other.ids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ids_.WriteTo(output, _repeated_ids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ids_.CalculateSize(_repeated_ids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SMailDetailRequest other) {
      if (other == null) {
        return;
      }
      ids_.Add(other.ids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SMailDetailRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10304,
      }

    }
    #endregion

  }

  public sealed partial class MailDetail : pb::IMessage<MailDetail> {
    private static readonly pb::MessageParser<MailDetail> _parser = new pb::MessageParser<MailDetail>(() => new MailDetail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MailDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[91]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MailDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MailDetail(MailDetail other) : this() {
      id_ = other.id_;
      content_ = other.content_;
      attachedItems_ = other.attachedItems_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MailDetail Clone() {
      return new MailDetail(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 邮件ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Content" field.</summary>
    public const int ContentFieldNumber = 2;
    private string content_ = "";
    /// <summary>
    /// 邮件内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AttachedItems" field.</summary>
    public const int AttachedItemsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ItemInfo> _repeated_attachedItems_codec
        = pb::FieldCodec.ForMessage(26, global::Msg.ClientMessage.ItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> attachedItems_ = new pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo>();
    /// <summary>
    /// 附加物品
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> AttachedItems {
      get { return attachedItems_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MailDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MailDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Content != other.Content) return false;
      if(!attachedItems_.Equals(other.attachedItems_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      hash ^= attachedItems_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Content);
      }
      attachedItems_.WriteTo(output, _repeated_attachedItems_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      size += attachedItems_.CalculateSize(_repeated_attachedItems_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MailDetail other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      attachedItems_.Add(other.attachedItems_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Content = input.ReadString();
            break;
          }
          case 26: {
            attachedItems_.AddEntriesFrom(input, _repeated_attachedItems_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CMailDetailResponse : pb::IMessage<S2CMailDetailResponse> {
    private static readonly pb::MessageParser<S2CMailDetailResponse> _parser = new pb::MessageParser<S2CMailDetailResponse>(() => new S2CMailDetailResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CMailDetailResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[92]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMailDetailResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMailDetailResponse(S2CMailDetailResponse other) : this() {
      mails_ = other.mails_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMailDetailResponse Clone() {
      return new S2CMailDetailResponse(this);
    }

    /// <summary>Field number for the "Mails" field.</summary>
    public const int MailsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.MailDetail> _repeated_mails_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.MailDetail.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.MailDetail> mails_ = new pbc::RepeatedField<global::Msg.ClientMessage.MailDetail>();
    /// <summary>
    /// 邮件细节
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.MailDetail> Mails {
      get { return mails_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CMailDetailResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CMailDetailResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mails_.Equals(other.mails_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mails_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      mails_.WriteTo(output, _repeated_mails_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mails_.CalculateSize(_repeated_mails_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CMailDetailResponse other) {
      if (other == null) {
        return;
      }
      mails_.Add(other.mails_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mails_.AddEntriesFrom(input, _repeated_mails_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CMailDetailResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10305,
      }

    }
    #endregion

  }

  /// <summary>
  /// 获取邮件附加物品
  /// </summary>
  public sealed partial class C2SMailGetAttachedItemsRequest : pb::IMessage<C2SMailGetAttachedItemsRequest> {
    private static readonly pb::MessageParser<C2SMailGetAttachedItemsRequest> _parser = new pb::MessageParser<C2SMailGetAttachedItemsRequest>(() => new C2SMailGetAttachedItemsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SMailGetAttachedItemsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[93]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMailGetAttachedItemsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMailGetAttachedItemsRequest(C2SMailGetAttachedItemsRequest other) : this() {
      mailIds_ = other.mailIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMailGetAttachedItemsRequest Clone() {
      return new C2SMailGetAttachedItemsRequest(this);
    }

    /// <summary>Field number for the "MailIds" field.</summary>
    public const int MailIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_mailIds_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> mailIds_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 邮件ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> MailIds {
      get { return mailIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SMailGetAttachedItemsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SMailGetAttachedItemsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mailIds_.Equals(other.mailIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mailIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      mailIds_.WriteTo(output, _repeated_mailIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mailIds_.CalculateSize(_repeated_mailIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SMailGetAttachedItemsRequest other) {
      if (other == null) {
        return;
      }
      mailIds_.Add(other.mailIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            mailIds_.AddEntriesFrom(input, _repeated_mailIds_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SMailGetAttachedItemsRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10306,
      }

    }
    #endregion

  }

  public sealed partial class S2CMailGetAttachedItemsResponse : pb::IMessage<S2CMailGetAttachedItemsResponse> {
    private static readonly pb::MessageParser<S2CMailGetAttachedItemsResponse> _parser = new pb::MessageParser<S2CMailGetAttachedItemsResponse>(() => new S2CMailGetAttachedItemsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CMailGetAttachedItemsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[94]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMailGetAttachedItemsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMailGetAttachedItemsResponse(S2CMailGetAttachedItemsResponse other) : this() {
      mailIds_ = other.mailIds_.Clone();
      attachedItems_ = other.attachedItems_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMailGetAttachedItemsResponse Clone() {
      return new S2CMailGetAttachedItemsResponse(this);
    }

    /// <summary>Field number for the "MailIds" field.</summary>
    public const int MailIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_mailIds_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> mailIds_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 邮件ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> MailIds {
      get { return mailIds_; }
    }

    /// <summary>Field number for the "AttachedItems" field.</summary>
    public const int AttachedItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ItemInfo> _repeated_attachedItems_codec
        = pb::FieldCodec.ForMessage(18, global::Msg.ClientMessage.ItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> attachedItems_ = new pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo>();
    /// <summary>
    /// 获得的附加物品   key: item_id  value: item_num
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> AttachedItems {
      get { return attachedItems_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CMailGetAttachedItemsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CMailGetAttachedItemsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mailIds_.Equals(other.mailIds_)) return false;
      if(!attachedItems_.Equals(other.attachedItems_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mailIds_.GetHashCode();
      hash ^= attachedItems_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      mailIds_.WriteTo(output, _repeated_mailIds_codec);
      attachedItems_.WriteTo(output, _repeated_attachedItems_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mailIds_.CalculateSize(_repeated_mailIds_codec);
      size += attachedItems_.CalculateSize(_repeated_attachedItems_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CMailGetAttachedItemsResponse other) {
      if (other == null) {
        return;
      }
      mailIds_.Add(other.mailIds_);
      attachedItems_.Add(other.attachedItems_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            mailIds_.AddEntriesFrom(input, _repeated_mailIds_codec);
            break;
          }
          case 18: {
            attachedItems_.AddEntriesFrom(input, _repeated_attachedItems_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CMailGetAttachedItemsResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10307,
      }

    }
    #endregion

  }

  /// <summary>
  /// 删除邮件
  /// </summary>
  public sealed partial class C2SMailDeleteRequest : pb::IMessage<C2SMailDeleteRequest> {
    private static readonly pb::MessageParser<C2SMailDeleteRequest> _parser = new pb::MessageParser<C2SMailDeleteRequest>(() => new C2SMailDeleteRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SMailDeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[95]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMailDeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMailDeleteRequest(C2SMailDeleteRequest other) : this() {
      mailIds_ = other.mailIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMailDeleteRequest Clone() {
      return new C2SMailDeleteRequest(this);
    }

    /// <summary>Field number for the "MailIds" field.</summary>
    public const int MailIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_mailIds_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> mailIds_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 邮件ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> MailIds {
      get { return mailIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SMailDeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SMailDeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mailIds_.Equals(other.mailIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mailIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      mailIds_.WriteTo(output, _repeated_mailIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mailIds_.CalculateSize(_repeated_mailIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SMailDeleteRequest other) {
      if (other == null) {
        return;
      }
      mailIds_.Add(other.mailIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            mailIds_.AddEntriesFrom(input, _repeated_mailIds_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SMailDeleteRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10308,
      }

    }
    #endregion

  }

  public sealed partial class S2CMailDeleteResponse : pb::IMessage<S2CMailDeleteResponse> {
    private static readonly pb::MessageParser<S2CMailDeleteResponse> _parser = new pb::MessageParser<S2CMailDeleteResponse>(() => new S2CMailDeleteResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CMailDeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[96]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMailDeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMailDeleteResponse(S2CMailDeleteResponse other) : this() {
      mailIds_ = other.mailIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMailDeleteResponse Clone() {
      return new S2CMailDeleteResponse(this);
    }

    /// <summary>Field number for the "MailIds" field.</summary>
    public const int MailIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_mailIds_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> mailIds_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 邮件ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> MailIds {
      get { return mailIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CMailDeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CMailDeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mailIds_.Equals(other.mailIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mailIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      mailIds_.WriteTo(output, _repeated_mailIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mailIds_.CalculateSize(_repeated_mailIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CMailDeleteResponse other) {
      if (other == null) {
        return;
      }
      mailIds_.Add(other.mailIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            mailIds_.AddEntriesFrom(input, _repeated_mailIds_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CMailDeleteResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10309,
      }

    }
    #endregion

  }

  /// <summary>
  /// 新邮件通知
  /// </summary>
  public sealed partial class S2CMailsNewNotify : pb::IMessage<S2CMailsNewNotify> {
    private static readonly pb::MessageParser<S2CMailsNewNotify> _parser = new pb::MessageParser<S2CMailsNewNotify>(() => new S2CMailsNewNotify());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CMailsNewNotify> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[97]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMailsNewNotify() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMailsNewNotify(S2CMailsNewNotify other) : this() {
      mails_ = other.mails_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMailsNewNotify Clone() {
      return new S2CMailsNewNotify(this);
    }

    /// <summary>Field number for the "Mails" field.</summary>
    public const int MailsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.MailBasicData> _repeated_mails_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.MailBasicData.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.MailBasicData> mails_ = new pbc::RepeatedField<global::Msg.ClientMessage.MailBasicData>();
    /// <summary>
    /// 新邮件基本数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.MailBasicData> Mails {
      get { return mails_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CMailsNewNotify);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CMailsNewNotify other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mails_.Equals(other.mails_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mails_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      mails_.WriteTo(output, _repeated_mails_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mails_.CalculateSize(_repeated_mails_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CMailsNewNotify other) {
      if (other == null) {
        return;
      }
      mails_.Add(other.mails_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mails_.AddEntriesFrom(input, _repeated_mails_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CMailsNewNotify message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10310,
      }

    }
    #endregion

  }

  /// <summary>
  /// 客户端向服务器存储设置
  /// </summary>
  public sealed partial class C2SSaveOptions : pb::IMessage<C2SSaveOptions> {
    private static readonly pb::MessageParser<C2SSaveOptions> _parser = new pb::MessageParser<C2SSaveOptions>(() => new C2SSaveOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SSaveOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[98]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSaveOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSaveOptions(C2SSaveOptions other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSaveOptions Clone() {
      return new C2SSaveOptions(this);
    }

    /// <summary>Field number for the "Values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_values_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> values_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 设置的值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SSaveOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SSaveOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SSaveOptions other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SSaveOptions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10400,
      }

    }
    #endregion

  }

  /// <summary>
  /// 客户端向服务器请存储的设置
  /// </summary>
  public sealed partial class C2SGetOptions : pb::IMessage<C2SGetOptions> {
    private static readonly pb::MessageParser<C2SGetOptions> _parser = new pb::MessageParser<C2SGetOptions>(() => new C2SGetOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[99]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetOptions(C2SGetOptions other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetOptions Clone() {
      return new C2SGetOptions(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetOptions other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetOptions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10401,
      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器向客户端返回设置值
  /// </summary>
  public sealed partial class S2CRetOptions : pb::IMessage<S2CRetOptions> {
    private static readonly pb::MessageParser<S2CRetOptions> _parser = new pb::MessageParser<S2CRetOptions>(() => new S2CRetOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CRetOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[100]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRetOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRetOptions(S2CRetOptions other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRetOptions Clone() {
      return new S2CRetOptions(this);
    }

    /// <summary>Field number for the "Values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_values_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> values_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 设置的值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CRetOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CRetOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CRetOptions other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CRetOptions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10402,
      }

    }
    #endregion

  }

  /// <summary>
  /// 任务数据
  /// </summary>
  public sealed partial class TaskData : pb::IMessage<TaskData> {
    private static readonly pb::MessageParser<TaskData> _parser = new pb::MessageParser<TaskData>(() => new TaskData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaskData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[101]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskData(TaskData other) : this() {
      id_ = other.id_;
      value_ = other.value_;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskData Clone() {
      return new TaskData(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 任务Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 2;
    private int value_;
    /// <summary>
    /// 任务值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "State" field.</summary>
    public const int StateFieldNumber = 3;
    private int state_;
    /// <summary>
    /// 任务状态   0 未完成 1 完成 2 已领奖
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaskData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaskData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Value != other.Value) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Value != 0) hash ^= Value.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Value != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Value);
      }
      if (State != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaskData other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      if (other.State != 0) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Value = input.ReadInt32();
            break;
          }
          case 24: {
            State = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端向服务器请求日常任务数据
  /// </summary>
  public sealed partial class C2STaskDataRequest : pb::IMessage<C2STaskDataRequest> {
    private static readonly pb::MessageParser<C2STaskDataRequest> _parser = new pb::MessageParser<C2STaskDataRequest>(() => new C2STaskDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2STaskDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[102]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2STaskDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2STaskDataRequest(C2STaskDataRequest other) : this() {
      taskType_ = other.taskType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2STaskDataRequest Clone() {
      return new C2STaskDataRequest(this);
    }

    /// <summary>Field number for the "TaskType" field.</summary>
    public const int TaskTypeFieldNumber = 1;
    private int taskType_;
    /// <summary>
    /// 任务类型   0 全部   1 日常  2 成就
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TaskType {
      get { return taskType_; }
      set {
        taskType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2STaskDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2STaskDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskType != other.TaskType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TaskType != 0) hash ^= TaskType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TaskType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TaskType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TaskType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2STaskDataRequest other) {
      if (other == null) {
        return;
      }
      if (other.TaskType != 0) {
        TaskType = other.TaskType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TaskType = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2STaskDataRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10500,
      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器向客户端发送任务数据
  /// </summary>
  public sealed partial class S2CTaskDataResponse : pb::IMessage<S2CTaskDataResponse> {
    private static readonly pb::MessageParser<S2CTaskDataResponse> _parser = new pb::MessageParser<S2CTaskDataResponse>(() => new S2CTaskDataResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CTaskDataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[103]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CTaskDataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CTaskDataResponse(S2CTaskDataResponse other) : this() {
      taskType_ = other.taskType_;
      taskList_ = other.taskList_.Clone();
      dailyTaskRefreshRemainSeconds_ = other.dailyTaskRefreshRemainSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CTaskDataResponse Clone() {
      return new S2CTaskDataResponse(this);
    }

    /// <summary>Field number for the "TaskType" field.</summary>
    public const int TaskTypeFieldNumber = 1;
    private int taskType_;
    /// <summary>
    /// 任务类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TaskType {
      get { return taskType_; }
      set {
        taskType_ = value;
      }
    }

    /// <summary>Field number for the "TaskList" field.</summary>
    public const int TaskListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.TaskData> _repeated_taskList_codec
        = pb::FieldCodec.ForMessage(18, global::Msg.ClientMessage.TaskData.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.TaskData> taskList_ = new pbc::RepeatedField<global::Msg.ClientMessage.TaskData>();
    /// <summary>
    /// 任务数据列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.TaskData> TaskList {
      get { return taskList_; }
    }

    /// <summary>Field number for the "DailyTaskRefreshRemainSeconds" field.</summary>
    public const int DailyTaskRefreshRemainSecondsFieldNumber = 3;
    private int dailyTaskRefreshRemainSeconds_;
    /// <summary>
    /// 每日任务剩余刷新时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DailyTaskRefreshRemainSeconds {
      get { return dailyTaskRefreshRemainSeconds_; }
      set {
        dailyTaskRefreshRemainSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CTaskDataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CTaskDataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskType != other.TaskType) return false;
      if(!taskList_.Equals(other.taskList_)) return false;
      if (DailyTaskRefreshRemainSeconds != other.DailyTaskRefreshRemainSeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TaskType != 0) hash ^= TaskType.GetHashCode();
      hash ^= taskList_.GetHashCode();
      if (DailyTaskRefreshRemainSeconds != 0) hash ^= DailyTaskRefreshRemainSeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TaskType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TaskType);
      }
      taskList_.WriteTo(output, _repeated_taskList_codec);
      if (DailyTaskRefreshRemainSeconds != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DailyTaskRefreshRemainSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TaskType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskType);
      }
      size += taskList_.CalculateSize(_repeated_taskList_codec);
      if (DailyTaskRefreshRemainSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DailyTaskRefreshRemainSeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CTaskDataResponse other) {
      if (other == null) {
        return;
      }
      if (other.TaskType != 0) {
        TaskType = other.TaskType;
      }
      taskList_.Add(other.taskList_);
      if (other.DailyTaskRefreshRemainSeconds != 0) {
        DailyTaskRefreshRemainSeconds = other.DailyTaskRefreshRemainSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TaskType = input.ReadInt32();
            break;
          }
          case 18: {
            taskList_.AddEntriesFrom(input, _repeated_taskList_codec);
            break;
          }
          case 24: {
            DailyTaskRefreshRemainSeconds = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CTaskDataResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10501,
      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器向客户端通知任务值变化
  /// </summary>
  public sealed partial class S2CTaskValueNotify : pb::IMessage<S2CTaskValueNotify> {
    private static readonly pb::MessageParser<S2CTaskValueNotify> _parser = new pb::MessageParser<S2CTaskValueNotify>(() => new S2CTaskValueNotify());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CTaskValueNotify> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[104]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CTaskValueNotify() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CTaskValueNotify(S2CTaskValueNotify other) : this() {
      data_ = other.data_ != null ? other.data_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CTaskValueNotify Clone() {
      return new S2CTaskValueNotify(this);
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 1;
    private global::Msg.ClientMessage.TaskData data_;
    /// <summary>
    /// 任务状态变化或者有新任务
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ClientMessage.TaskData Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CTaskValueNotify);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CTaskValueNotify other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Data, other.Data)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (data_ != null) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (data_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CTaskValueNotify other) {
      if (other == null) {
        return;
      }
      if (other.data_ != null) {
        if (data_ == null) {
          Data = new global::Msg.ClientMessage.TaskData();
        }
        Data.MergeFrom(other.Data);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (data_ == null) {
              Data = new global::Msg.ClientMessage.TaskData();
            }
            input.ReadMessage(Data);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CTaskValueNotify message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10502,
      }

    }
    #endregion

  }

  /// <summary>
  /// 客户端向服务器请求任务奖励
  /// </summary>
  public sealed partial class C2STaskRewardRequest : pb::IMessage<C2STaskRewardRequest> {
    private static readonly pb::MessageParser<C2STaskRewardRequest> _parser = new pb::MessageParser<C2STaskRewardRequest>(() => new C2STaskRewardRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2STaskRewardRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[105]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2STaskRewardRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2STaskRewardRequest(C2STaskRewardRequest other) : this() {
      taskId_ = other.taskId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2STaskRewardRequest Clone() {
      return new C2STaskRewardRequest(this);
    }

    /// <summary>Field number for the "TaskId" field.</summary>
    public const int TaskIdFieldNumber = 1;
    private int taskId_;
    /// <summary>
    /// 任务ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TaskId {
      get { return taskId_; }
      set {
        taskId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2STaskRewardRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2STaskRewardRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskId != other.TaskId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TaskId != 0) hash ^= TaskId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TaskId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TaskId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TaskId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2STaskRewardRequest other) {
      if (other == null) {
        return;
      }
      if (other.TaskId != 0) {
        TaskId = other.TaskId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TaskId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2STaskRewardRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10503,
      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器向客户端发送任务结果
  /// </summary>
  public sealed partial class S2CTaskRewardResponse : pb::IMessage<S2CTaskRewardResponse> {
    private static readonly pb::MessageParser<S2CTaskRewardResponse> _parser = new pb::MessageParser<S2CTaskRewardResponse>(() => new S2CTaskRewardResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CTaskRewardResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[106]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CTaskRewardResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CTaskRewardResponse(S2CTaskRewardResponse other) : this() {
      taskId_ = other.taskId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CTaskRewardResponse Clone() {
      return new S2CTaskRewardResponse(this);
    }

    /// <summary>Field number for the "TaskId" field.</summary>
    public const int TaskIdFieldNumber = 1;
    private int taskId_;
    /// <summary>
    /// 任务Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TaskId {
      get { return taskId_; }
      set {
        taskId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CTaskRewardResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CTaskRewardResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskId != other.TaskId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TaskId != 0) hash ^= TaskId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TaskId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TaskId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TaskId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CTaskRewardResponse other) {
      if (other == null) {
        return;
      }
      if (other.TaskId != 0) {
        TaskId = other.TaskId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TaskId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CTaskRewardResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10504,
      }

    }
    #endregion

  }

  /// <summary>
  /// 客户端请求修改昵称
  /// </summary>
  public sealed partial class C2SChgName : pb::IMessage<C2SChgName> {
    private static readonly pb::MessageParser<C2SChgName> _parser = new pb::MessageParser<C2SChgName>(() => new C2SChgName());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SChgName> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[107]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChgName() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChgName(C2SChgName other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChgName Clone() {
      return new C2SChgName(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// 玩家名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SChgName);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SChgName other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SChgName other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SChgName message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10600,
      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器返回
  /// </summary>
  public sealed partial class S2CChgName : pb::IMessage<S2CChgName> {
    private static readonly pb::MessageParser<S2CChgName> _parser = new pb::MessageParser<S2CChgName>(() => new S2CChgName());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CChgName> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[108]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChgName() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChgName(S2CChgName other) : this() {
      name_ = other.name_;
      chgNameCount_ = other.chgNameCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChgName Clone() {
      return new S2CChgName(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// 玩家名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ChgNameCount" field.</summary>
    public const int ChgNameCountFieldNumber = 2;
    private int chgNameCount_;
    /// <summary>
    /// 改名次数 从0开始
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChgNameCount {
      get { return chgNameCount_; }
      set {
        chgNameCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CChgName);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CChgName other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ChgNameCount != other.ChgNameCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ChgNameCount != 0) hash ^= ChgNameCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (ChgNameCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ChgNameCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ChgNameCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChgNameCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CChgName other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ChgNameCount != 0) {
        ChgNameCount = other.ChgNameCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            ChgNameCount = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CChgName message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10601,
      }

    }
    #endregion

  }

  /// <summary>
  /// 客户端请求更改头像
  /// </summary>
  public sealed partial class C2SChangeHead : pb::IMessage<C2SChangeHead> {
    private static readonly pb::MessageParser<C2SChangeHead> _parser = new pb::MessageParser<C2SChangeHead>(() => new C2SChangeHead());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SChangeHead> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[109]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChangeHead() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChangeHead(C2SChangeHead other) : this() {
      newHead_ = other.newHead_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChangeHead Clone() {
      return new C2SChangeHead(this);
    }

    /// <summary>Field number for the "NewHead" field.</summary>
    public const int NewHeadFieldNumber = 1;
    private int newHead_;
    /// <summary>
    /// 头像ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NewHead {
      get { return newHead_; }
      set {
        newHead_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SChangeHead);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SChangeHead other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NewHead != other.NewHead) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NewHead != 0) hash ^= NewHead.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NewHead != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NewHead);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NewHead != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NewHead);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SChangeHead other) {
      if (other == null) {
        return;
      }
      if (other.NewHead != 0) {
        NewHead = other.NewHead;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NewHead = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SChangeHead message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10602,
      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器返回
  /// </summary>
  public sealed partial class S2CChangeHead : pb::IMessage<S2CChangeHead> {
    private static readonly pb::MessageParser<S2CChangeHead> _parser = new pb::MessageParser<S2CChangeHead>(() => new S2CChangeHead());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CChangeHead> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[110]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChangeHead() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChangeHead(S2CChangeHead other) : this() {
      newHead_ = other.newHead_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChangeHead Clone() {
      return new S2CChangeHead(this);
    }

    /// <summary>Field number for the "NewHead" field.</summary>
    public const int NewHeadFieldNumber = 1;
    private int newHead_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NewHead {
      get { return newHead_; }
      set {
        newHead_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CChangeHead);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CChangeHead other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NewHead != other.NewHead) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NewHead != 0) hash ^= NewHead.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NewHead != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NewHead);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NewHead != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NewHead);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CChangeHead other) {
      if (other == null) {
        return;
      }
      if (other.NewHead != 0) {
        NewHead = other.NewHead;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NewHead = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CChangeHead message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10603,
      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器向客户端同步签到状态
  /// </summary>
  public sealed partial class S2CSyncSignInfo : pb::IMessage<S2CSyncSignInfo> {
    private static readonly pb::MessageParser<S2CSyncSignInfo> _parser = new pb::MessageParser<S2CSyncSignInfo>(() => new S2CSyncSignInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSyncSignInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[111]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSyncSignInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSyncSignInfo(S2CSyncSignInfo other) : this() {
      curSignSum_ = other.curSignSum_;
      curSignDays_ = other.curSignDays_.Clone();
      curGetSignSumRewards_ = other.curGetSignSumRewards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSyncSignInfo Clone() {
      return new S2CSyncSignInfo(this);
    }

    /// <summary>Field number for the "CurSignSum" field.</summary>
    public const int CurSignSumFieldNumber = 1;
    private int curSignSum_;
    /// <summary>
    /// 本月累计签到总数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurSignSum {
      get { return curSignSum_; }
      set {
        curSignSum_ = value;
      }
    }

    /// <summary>Field number for the "CurSignDays" field.</summary>
    public const int CurSignDaysFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_curSignDays_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> curSignDays_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 最近的签到日期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CurSignDays {
      get { return curSignDays_; }
    }

    /// <summary>Field number for the "CurGetSignSumRewards" field.</summary>
    public const int CurGetSignSumRewardsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_curGetSignSumRewards_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> curGetSignSumRewards_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 当前领取过的累计签到奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CurGetSignSumRewards {
      get { return curGetSignSumRewards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSyncSignInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSyncSignInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurSignSum != other.CurSignSum) return false;
      if(!curSignDays_.Equals(other.curSignDays_)) return false;
      if(!curGetSignSumRewards_.Equals(other.curGetSignSumRewards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurSignSum != 0) hash ^= CurSignSum.GetHashCode();
      hash ^= curSignDays_.GetHashCode();
      hash ^= curGetSignSumRewards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CurSignSum != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurSignSum);
      }
      curSignDays_.WriteTo(output, _repeated_curSignDays_codec);
      curGetSignSumRewards_.WriteTo(output, _repeated_curGetSignSumRewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurSignSum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurSignSum);
      }
      size += curSignDays_.CalculateSize(_repeated_curSignDays_codec);
      size += curGetSignSumRewards_.CalculateSize(_repeated_curGetSignSumRewards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSyncSignInfo other) {
      if (other == null) {
        return;
      }
      if (other.CurSignSum != 0) {
        CurSignSum = other.CurSignSum;
      }
      curSignDays_.Add(other.curSignDays_);
      curGetSignSumRewards_.Add(other.curGetSignSumRewards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CurSignSum = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            curSignDays_.AddEntriesFrom(input, _repeated_curSignDays_codec);
            break;
          }
          case 26:
          case 24: {
            curGetSignSumRewards_.AddEntriesFrom(input, _repeated_curGetSignSumRewards_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CSyncSignInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10700,
      }

    }
    #endregion

  }

  /// <summary>
  /// 客户端向服务器请求签到
  /// </summary>
  public sealed partial class C2SDaySign : pb::IMessage<C2SDaySign> {
    private static readonly pb::MessageParser<C2SDaySign> _parser = new pb::MessageParser<C2SDaySign>(() => new C2SDaySign());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SDaySign> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[112]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SDaySign() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SDaySign(C2SDaySign other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SDaySign Clone() {
      return new C2SDaySign(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SDaySign);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SDaySign other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SDaySign other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SDaySign message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10701,
      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器向客户端回复签到
  /// </summary>
  public sealed partial class S2CDaySign : pb::IMessage<S2CDaySign> {
    private static readonly pb::MessageParser<S2CDaySign> _parser = new pb::MessageParser<S2CDaySign>(() => new S2CDaySign());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CDaySign> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[113]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CDaySign() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CDaySign(S2CDaySign other) : this() {
      signDay_ = other.signDay_;
      curCoin_ = other.curCoin_;
      curDiamond_ = other.curDiamond_;
      curCardToken1_ = other.curCardToken1_;
      curCardToken2_ = other.curCardToken2_;
      curCardToken3_ = other.curCardToken3_;
      curCardToken4_ = other.curCardToken4_;
      chestOpen_ = other.chestOpen_ != null ? other.chestOpen_.Clone() : null;
      cardCfgId_ = other.cardCfgId_;
      curCardNum_ = other.curCardNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CDaySign Clone() {
      return new S2CDaySign(this);
    }

    /// <summary>Field number for the "SignDay" field.</summary>
    public const int SignDayFieldNumber = 1;
    private int signDay_;
    /// <summary>
    /// 签到天数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SignDay {
      get { return signDay_; }
      set {
        signDay_ = value;
      }
    }

    /// <summary>Field number for the "CurCoin" field.</summary>
    public const int CurCoinFieldNumber = 2;
    private int curCoin_;
    /// <summary>
    /// 当前金币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurCoin {
      get { return curCoin_; }
      set {
        curCoin_ = value;
      }
    }

    /// <summary>Field number for the "CurDiamond" field.</summary>
    public const int CurDiamondFieldNumber = 3;
    private int curDiamond_;
    /// <summary>
    /// 当前钻石
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurDiamond {
      get { return curDiamond_; }
      set {
        curDiamond_ = value;
      }
    }

    /// <summary>Field number for the "CurCardToken1" field.</summary>
    public const int CurCardToken1FieldNumber = 4;
    private int curCardToken1_;
    /// <summary>
    /// 当前Token1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurCardToken1 {
      get { return curCardToken1_; }
      set {
        curCardToken1_ = value;
      }
    }

    /// <summary>Field number for the "CurCardToken2" field.</summary>
    public const int CurCardToken2FieldNumber = 5;
    private int curCardToken2_;
    /// <summary>
    /// 当前Token2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurCardToken2 {
      get { return curCardToken2_; }
      set {
        curCardToken2_ = value;
      }
    }

    /// <summary>Field number for the "CurCardToken3" field.</summary>
    public const int CurCardToken3FieldNumber = 6;
    private int curCardToken3_;
    /// <summary>
    /// 当前Token3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurCardToken3 {
      get { return curCardToken3_; }
      set {
        curCardToken3_ = value;
      }
    }

    /// <summary>Field number for the "CurCardToken4" field.</summary>
    public const int CurCardToken4FieldNumber = 7;
    private int curCardToken4_;
    /// <summary>
    /// 当前Token4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurCardToken4 {
      get { return curCardToken4_; }
      set {
        curCardToken4_ = value;
      }
    }

    /// <summary>Field number for the "ChestOpen" field.</summary>
    public const int ChestOpenFieldNumber = 8;
    private global::Msg.ClientMessage.S2COpenChest chestOpen_;
    /// <summary>
    /// 如果奖励中有宝箱，这个是宝箱打开结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ClientMessage.S2COpenChest ChestOpen {
      get { return chestOpen_; }
      set {
        chestOpen_ = value;
      }
    }

    /// <summary>Field number for the "CardCfgId" field.</summary>
    public const int CardCfgIdFieldNumber = 9;
    private int cardCfgId_;
    /// <summary>
    /// 奖励中单独配置的卡片
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CardCfgId {
      get { return cardCfgId_; }
      set {
        cardCfgId_ = value;
      }
    }

    /// <summary>Field number for the "CurCardNum" field.</summary>
    public const int CurCardNumFieldNumber = 10;
    private int curCardNum_;
    /// <summary>
    /// 奖励中单独配置的卡片加完之后的数目
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurCardNum {
      get { return curCardNum_; }
      set {
        curCardNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CDaySign);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CDaySign other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SignDay != other.SignDay) return false;
      if (CurCoin != other.CurCoin) return false;
      if (CurDiamond != other.CurDiamond) return false;
      if (CurCardToken1 != other.CurCardToken1) return false;
      if (CurCardToken2 != other.CurCardToken2) return false;
      if (CurCardToken3 != other.CurCardToken3) return false;
      if (CurCardToken4 != other.CurCardToken4) return false;
      if (!object.Equals(ChestOpen, other.ChestOpen)) return false;
      if (CardCfgId != other.CardCfgId) return false;
      if (CurCardNum != other.CurCardNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SignDay != 0) hash ^= SignDay.GetHashCode();
      if (CurCoin != 0) hash ^= CurCoin.GetHashCode();
      if (CurDiamond != 0) hash ^= CurDiamond.GetHashCode();
      if (CurCardToken1 != 0) hash ^= CurCardToken1.GetHashCode();
      if (CurCardToken2 != 0) hash ^= CurCardToken2.GetHashCode();
      if (CurCardToken3 != 0) hash ^= CurCardToken3.GetHashCode();
      if (CurCardToken4 != 0) hash ^= CurCardToken4.GetHashCode();
      if (chestOpen_ != null) hash ^= ChestOpen.GetHashCode();
      if (CardCfgId != 0) hash ^= CardCfgId.GetHashCode();
      if (CurCardNum != 0) hash ^= CurCardNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SignDay != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SignDay);
      }
      if (CurCoin != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurCoin);
      }
      if (CurDiamond != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CurDiamond);
      }
      if (CurCardToken1 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CurCardToken1);
      }
      if (CurCardToken2 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CurCardToken2);
      }
      if (CurCardToken3 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(CurCardToken3);
      }
      if (CurCardToken4 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(CurCardToken4);
      }
      if (chestOpen_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ChestOpen);
      }
      if (CardCfgId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CardCfgId);
      }
      if (CurCardNum != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(CurCardNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SignDay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SignDay);
      }
      if (CurCoin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurCoin);
      }
      if (CurDiamond != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurDiamond);
      }
      if (CurCardToken1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurCardToken1);
      }
      if (CurCardToken2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurCardToken2);
      }
      if (CurCardToken3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurCardToken3);
      }
      if (CurCardToken4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurCardToken4);
      }
      if (chestOpen_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChestOpen);
      }
      if (CardCfgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CardCfgId);
      }
      if (CurCardNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurCardNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CDaySign other) {
      if (other == null) {
        return;
      }
      if (other.SignDay != 0) {
        SignDay = other.SignDay;
      }
      if (other.CurCoin != 0) {
        CurCoin = other.CurCoin;
      }
      if (other.CurDiamond != 0) {
        CurDiamond = other.CurDiamond;
      }
      if (other.CurCardToken1 != 0) {
        CurCardToken1 = other.CurCardToken1;
      }
      if (other.CurCardToken2 != 0) {
        CurCardToken2 = other.CurCardToken2;
      }
      if (other.CurCardToken3 != 0) {
        CurCardToken3 = other.CurCardToken3;
      }
      if (other.CurCardToken4 != 0) {
        CurCardToken4 = other.CurCardToken4;
      }
      if (other.chestOpen_ != null) {
        if (chestOpen_ == null) {
          ChestOpen = new global::Msg.ClientMessage.S2COpenChest();
        }
        ChestOpen.MergeFrom(other.ChestOpen);
      }
      if (other.CardCfgId != 0) {
        CardCfgId = other.CardCfgId;
      }
      if (other.CurCardNum != 0) {
        CurCardNum = other.CurCardNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SignDay = input.ReadInt32();
            break;
          }
          case 16: {
            CurCoin = input.ReadInt32();
            break;
          }
          case 24: {
            CurDiamond = input.ReadInt32();
            break;
          }
          case 32: {
            CurCardToken1 = input.ReadInt32();
            break;
          }
          case 40: {
            CurCardToken2 = input.ReadInt32();
            break;
          }
          case 48: {
            CurCardToken3 = input.ReadInt32();
            break;
          }
          case 56: {
            CurCardToken4 = input.ReadInt32();
            break;
          }
          case 66: {
            if (chestOpen_ == null) {
              ChestOpen = new global::Msg.ClientMessage.S2COpenChest();
            }
            input.ReadMessage(ChestOpen);
            break;
          }
          case 72: {
            CardCfgId = input.ReadInt32();
            break;
          }
          case 80: {
            CurCardNum = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CDaySign message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10702,
      }

    }
    #endregion

  }

  /// <summary>
  /// 客户端向服务器请求领取累计签到奖励
  /// </summary>
  public sealed partial class C2SGetDaySignSumReward : pb::IMessage<C2SGetDaySignSumReward> {
    private static readonly pb::MessageParser<C2SGetDaySignSumReward> _parser = new pb::MessageParser<C2SGetDaySignSumReward>(() => new C2SGetDaySignSumReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetDaySignSumReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[114]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetDaySignSumReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetDaySignSumReward(C2SGetDaySignSumReward other) : this() {
      sumNum_ = other.sumNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetDaySignSumReward Clone() {
      return new C2SGetDaySignSumReward(this);
    }

    /// <summary>Field number for the "SumNum" field.</summary>
    public const int SumNumFieldNumber = 1;
    private int sumNum_;
    /// <summary>
    /// 奖励对应的累计天数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SumNum {
      get { return sumNum_; }
      set {
        sumNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetDaySignSumReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetDaySignSumReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SumNum != other.SumNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SumNum != 0) hash ^= SumNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SumNum != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SumNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SumNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SumNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetDaySignSumReward other) {
      if (other == null) {
        return;
      }
      if (other.SumNum != 0) {
        SumNum = other.SumNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SumNum = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetDaySignSumReward message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10703,
      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器向客户端返回累计签到领取的奖励
  /// </summary>
  public sealed partial class S2CRetDaySignSumReward : pb::IMessage<S2CRetDaySignSumReward> {
    private static readonly pb::MessageParser<S2CRetDaySignSumReward> _parser = new pb::MessageParser<S2CRetDaySignSumReward>(() => new S2CRetDaySignSumReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CRetDaySignSumReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[115]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRetDaySignSumReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRetDaySignSumReward(S2CRetDaySignSumReward other) : this() {
      rewards_ = other.rewards_ != null ? other.rewards_.Clone() : null;
      sumNum_ = other.sumNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRetDaySignSumReward Clone() {
      return new S2CRetDaySignSumReward(this);
    }

    /// <summary>Field number for the "Rewards" field.</summary>
    public const int RewardsFieldNumber = 1;
    private global::Msg.ClientMessage.S2COpenChest rewards_;
    /// <summary>
    /// 累计签到奖励内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ClientMessage.S2COpenChest Rewards {
      get { return rewards_; }
      set {
        rewards_ = value;
      }
    }

    /// <summary>Field number for the "SumNum" field.</summary>
    public const int SumNumFieldNumber = 2;
    private int sumNum_;
    /// <summary>
    /// 本次奖励次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SumNum {
      get { return sumNum_; }
      set {
        sumNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CRetDaySignSumReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CRetDaySignSumReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Rewards, other.Rewards)) return false;
      if (SumNum != other.SumNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (rewards_ != null) hash ^= Rewards.GetHashCode();
      if (SumNum != 0) hash ^= SumNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (rewards_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Rewards);
      }
      if (SumNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SumNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (rewards_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rewards);
      }
      if (SumNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SumNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CRetDaySignSumReward other) {
      if (other == null) {
        return;
      }
      if (other.rewards_ != null) {
        if (rewards_ == null) {
          Rewards = new global::Msg.ClientMessage.S2COpenChest();
        }
        Rewards.MergeFrom(other.Rewards);
      }
      if (other.SumNum != 0) {
        SumNum = other.SumNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (rewards_ == null) {
              Rewards = new global::Msg.ClientMessage.S2COpenChest();
            }
            input.ReadMessage(Rewards);
            break;
          }
          case 16: {
            SumNum = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CRetDaySignSumReward message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10704,
      }

    }
    #endregion

  }

  /// <summary>
  /// 客户端向服务器请求设置建筑
  /// </summary>
  public sealed partial class C2SSetBuilding : pb::IMessage<C2SSetBuilding> {
    private static readonly pb::MessageParser<C2SSetBuilding> _parser = new pb::MessageParser<C2SSetBuilding>(() => new C2SSetBuilding());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SSetBuilding> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[116]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSetBuilding() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSetBuilding(C2SSetBuilding other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      buildingCfgId_ = other.buildingCfgId_;
      dir_ = other.dir_;
      ifBuy_ = other.ifBuy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSetBuilding Clone() {
      return new C2SSetBuilding(this);
    }

    /// <summary>Field number for the "X" field.</summary>
    public const int XFieldNumber = 1;
    private int x_;
    /// <summary>
    /// 坐标X
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "Y" field.</summary>
    public const int YFieldNumber = 2;
    private int y_;
    /// <summary>
    /// 坐标Y
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "BuildingCfgId" field.</summary>
    public const int BuildingCfgIdFieldNumber = 3;
    private int buildingCfgId_;
    /// <summary>
    /// 建筑配置Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildingCfgId {
      get { return buildingCfgId_; }
      set {
        buildingCfgId_ = value;
      }
    }

    /// <summary>Field number for the "Dir" field.</summary>
    public const int DirFieldNumber = 4;
    private int dir_;
    /// <summary>
    /// 是否转向 0表示水平方向（不转向），1表示垂直方向（就是转方向了）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }

    /// <summary>Field number for the "IfBuy" field.</summary>
    public const int IfBuyFieldNumber = 5;
    private int ifBuy_;
    /// <summary>
    /// 是否直接购买 1表示购买
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IfBuy {
      get { return ifBuy_; }
      set {
        ifBuy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SSetBuilding);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SSetBuilding other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (BuildingCfgId != other.BuildingCfgId) return false;
      if (Dir != other.Dir) return false;
      if (IfBuy != other.IfBuy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (BuildingCfgId != 0) hash ^= BuildingCfgId.GetHashCode();
      if (Dir != 0) hash ^= Dir.GetHashCode();
      if (IfBuy != 0) hash ^= IfBuy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (BuildingCfgId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BuildingCfgId);
      }
      if (Dir != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Dir);
      }
      if (IfBuy != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(IfBuy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (BuildingCfgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingCfgId);
      }
      if (Dir != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dir);
      }
      if (IfBuy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IfBuy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SSetBuilding other) {
      if (other == null) {
        return;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      if (other.BuildingCfgId != 0) {
        BuildingCfgId = other.BuildingCfgId;
      }
      if (other.Dir != 0) {
        Dir = other.Dir;
      }
      if (other.IfBuy != 0) {
        IfBuy = other.IfBuy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
          case 24: {
            BuildingCfgId = input.ReadInt32();
            break;
          }
          case 32: {
            Dir = input.ReadInt32();
            break;
          }
          case 40: {
            IfBuy = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SSetBuilding message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10900,
      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器回复建筑设置
  /// </summary>
  public sealed partial class S2CSetBuilding : pb::IMessage<S2CSetBuilding> {
    private static readonly pb::MessageParser<S2CSetBuilding> _parser = new pb::MessageParser<S2CSetBuilding>(() => new S2CSetBuilding());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSetBuilding> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[117]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSetBuilding() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSetBuilding(S2CSetBuilding other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      buildingCfgId_ = other.buildingCfgId_;
      dir_ = other.dir_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSetBuilding Clone() {
      return new S2CSetBuilding(this);
    }

    /// <summary>Field number for the "X" field.</summary>
    public const int XFieldNumber = 1;
    private int x_;
    /// <summary>
    /// 坐标X
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "Y" field.</summary>
    public const int YFieldNumber = 2;
    private int y_;
    /// <summary>
    /// 坐标Y
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "BuildingCfgId" field.</summary>
    public const int BuildingCfgIdFieldNumber = 3;
    private int buildingCfgId_;
    /// <summary>
    /// 建筑配置Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildingCfgId {
      get { return buildingCfgId_; }
      set {
        buildingCfgId_ = value;
      }
    }

    /// <summary>Field number for the "Dir" field.</summary>
    public const int DirFieldNumber = 4;
    private int dir_;
    /// <summary>
    /// 是否转向 0表示水平方向（不转向），1表示垂直方向（就是转方向了）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSetBuilding);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSetBuilding other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (BuildingCfgId != other.BuildingCfgId) return false;
      if (Dir != other.Dir) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (BuildingCfgId != 0) hash ^= BuildingCfgId.GetHashCode();
      if (Dir != 0) hash ^= Dir.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (BuildingCfgId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BuildingCfgId);
      }
      if (Dir != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Dir);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (BuildingCfgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingCfgId);
      }
      if (Dir != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dir);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSetBuilding other) {
      if (other == null) {
        return;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      if (other.BuildingCfgId != 0) {
        BuildingCfgId = other.BuildingCfgId;
      }
      if (other.Dir != 0) {
        Dir = other.Dir;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
          case 24: {
            BuildingCfgId = input.ReadInt32();
            break;
          }
          case 32: {
            Dir = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CSetBuilding message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10901,
      }

    }
    #endregion

  }

  /// <summary>
  /// 客户端向服务器移动建筑
  /// </summary>
  public sealed partial class C2SMoveBuilding : pb::IMessage<C2SMoveBuilding> {
    private static readonly pb::MessageParser<C2SMoveBuilding> _parser = new pb::MessageParser<C2SMoveBuilding>(() => new C2SMoveBuilding());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SMoveBuilding> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[118]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMoveBuilding() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMoveBuilding(C2SMoveBuilding other) : this() {
      buildingId_ = other.buildingId_;
      x_ = other.x_;
      y_ = other.y_;
      dir_ = other.dir_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMoveBuilding Clone() {
      return new C2SMoveBuilding(this);
    }

    /// <summary>Field number for the "BuildingId" field.</summary>
    public const int BuildingIdFieldNumber = 1;
    private int buildingId_;
    /// <summary>
    /// 建筑Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildingId {
      get { return buildingId_; }
      set {
        buildingId_ = value;
      }
    }

    /// <summary>Field number for the "X" field.</summary>
    public const int XFieldNumber = 2;
    private int x_;
    /// <summary>
    /// 坐标X
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "Y" field.</summary>
    public const int YFieldNumber = 3;
    private int y_;
    /// <summary>
    /// 坐标Y
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "Dir" field.</summary>
    public const int DirFieldNumber = 4;
    private int dir_;
    /// <summary>
    /// 新方向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SMoveBuilding);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SMoveBuilding other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildingId != other.BuildingId) return false;
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Dir != other.Dir) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuildingId != 0) hash ^= BuildingId.GetHashCode();
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (Dir != 0) hash ^= Dir.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuildingId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuildingId);
      }
      if (X != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Y);
      }
      if (Dir != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Dir);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuildingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingId);
      }
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (Dir != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dir);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SMoveBuilding other) {
      if (other == null) {
        return;
      }
      if (other.BuildingId != 0) {
        BuildingId = other.BuildingId;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      if (other.Dir != 0) {
        Dir = other.Dir;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuildingId = input.ReadInt32();
            break;
          }
          case 16: {
            X = input.ReadInt32();
            break;
          }
          case 24: {
            Y = input.ReadInt32();
            break;
          }
          case 32: {
            Dir = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SMoveBuilding message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10902,
      }

    }
    #endregion

  }

  /// <summary>
  /// 客户端向服务器请求转向建筑
  /// </summary>
  public sealed partial class C2SChgBuildingDir : pb::IMessage<C2SChgBuildingDir> {
    private static readonly pb::MessageParser<C2SChgBuildingDir> _parser = new pb::MessageParser<C2SChgBuildingDir>(() => new C2SChgBuildingDir());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SChgBuildingDir> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[119]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChgBuildingDir() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChgBuildingDir(C2SChgBuildingDir other) : this() {
      buildingId_ = other.buildingId_;
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChgBuildingDir Clone() {
      return new C2SChgBuildingDir(this);
    }

    /// <summary>Field number for the "BuildingId" field.</summary>
    public const int BuildingIdFieldNumber = 1;
    private int buildingId_;
    /// <summary>
    /// 建筑Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildingId {
      get { return buildingId_; }
      set {
        buildingId_ = value;
      }
    }

    /// <summary>Field number for the "X" field.</summary>
    public const int XFieldNumber = 2;
    private int x_;
    /// <summary>
    /// 坐标X
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "Y" field.</summary>
    public const int YFieldNumber = 3;
    private int y_;
    /// <summary>
    /// 坐标Y
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SChgBuildingDir);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SChgBuildingDir other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildingId != other.BuildingId) return false;
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuildingId != 0) hash ^= BuildingId.GetHashCode();
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuildingId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuildingId);
      }
      if (X != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuildingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingId);
      }
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SChgBuildingDir other) {
      if (other == null) {
        return;
      }
      if (other.BuildingId != 0) {
        BuildingId = other.BuildingId;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuildingId = input.ReadInt32();
            break;
          }
          case 16: {
            X = input.ReadInt32();
            break;
          }
          case 24: {
            Y = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SChgBuildingDir message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10903,
      }

    }
    #endregion

  }

  /// <summary>
  /// 客户端向服务器请求回收建筑
  /// </summary>
  public sealed partial class C2SGetBackBuilding : pb::IMessage<C2SGetBackBuilding> {
    private static readonly pb::MessageParser<C2SGetBackBuilding> _parser = new pb::MessageParser<C2SGetBackBuilding>(() => new C2SGetBackBuilding());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetBackBuilding> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[120]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetBackBuilding() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetBackBuilding(C2SGetBackBuilding other) : this() {
      buildingId_ = other.buildingId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetBackBuilding Clone() {
      return new C2SGetBackBuilding(this);
    }

    /// <summary>Field number for the "BuildingId" field.</summary>
    public const int BuildingIdFieldNumber = 1;
    private int buildingId_;
    /// <summary>
    /// 建筑唯一Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildingId {
      get { return buildingId_; }
      set {
        buildingId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetBackBuilding);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetBackBuilding other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildingId != other.BuildingId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuildingId != 0) hash ^= BuildingId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuildingId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuildingId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuildingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetBackBuilding other) {
      if (other == null) {
        return;
      }
      if (other.BuildingId != 0) {
        BuildingId = other.BuildingId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuildingId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetBackBuilding message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10904,
      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器回复建筑回收
  /// </summary>
  public sealed partial class S2CGetBackBuilding : pb::IMessage<S2CGetBackBuilding> {
    private static readonly pb::MessageParser<S2CGetBackBuilding> _parser = new pb::MessageParser<S2CGetBackBuilding>(() => new S2CGetBackBuilding());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGetBackBuilding> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[121]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetBackBuilding() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetBackBuilding(S2CGetBackBuilding other) : this() {
      buildingId_ = other.buildingId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetBackBuilding Clone() {
      return new S2CGetBackBuilding(this);
    }

    /// <summary>Field number for the "BuildingId" field.</summary>
    public const int BuildingIdFieldNumber = 1;
    private int buildingId_;
    /// <summary>
    /// 建筑唯一Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildingId {
      get { return buildingId_; }
      set {
        buildingId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGetBackBuilding);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGetBackBuilding other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildingId != other.BuildingId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuildingId != 0) hash ^= BuildingId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuildingId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuildingId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuildingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGetBackBuilding other) {
      if (other == null) {
        return;
      }
      if (other.BuildingId != 0) {
        BuildingId = other.BuildingId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuildingId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGetBackBuilding message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10905,
      }

    }
    #endregion

  }

  /// <summary>
  /// 客户端向服务器请求出售建筑
  /// </summary>
  public sealed partial class C2SSellBuilding : pb::IMessage<C2SSellBuilding> {
    private static readonly pb::MessageParser<C2SSellBuilding> _parser = new pb::MessageParser<C2SSellBuilding>(() => new C2SSellBuilding());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SSellBuilding> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[122]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSellBuilding() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSellBuilding(C2SSellBuilding other) : this() {
      buildingId_ = other.buildingId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSellBuilding Clone() {
      return new C2SSellBuilding(this);
    }

    /// <summary>Field number for the "BuildingId" field.</summary>
    public const int BuildingIdFieldNumber = 1;
    private int buildingId_;
    /// <summary>
    /// 建筑唯一Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildingId {
      get { return buildingId_; }
      set {
        buildingId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SSellBuilding);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SSellBuilding other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildingId != other.BuildingId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuildingId != 0) hash ^= BuildingId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuildingId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuildingId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuildingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SSellBuilding other) {
      if (other == null) {
        return;
      }
      if (other.BuildingId != 0) {
        BuildingId = other.BuildingId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuildingId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SSellBuilding message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10906,
      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器回复建筑出售
  /// </summary>
  public sealed partial class S2CSellBuilding : pb::IMessage<S2CSellBuilding> {
    private static readonly pb::MessageParser<S2CSellBuilding> _parser = new pb::MessageParser<S2CSellBuilding>(() => new S2CSellBuilding());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSellBuilding> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[123]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSellBuilding() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSellBuilding(S2CSellBuilding other) : this() {
      buildingId_ = other.buildingId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSellBuilding Clone() {
      return new S2CSellBuilding(this);
    }

    /// <summary>Field number for the "BuildingId" field.</summary>
    public const int BuildingIdFieldNumber = 1;
    private int buildingId_;
    /// <summary>
    /// 建筑唯一Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildingId {
      get { return buildingId_; }
      set {
        buildingId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSellBuilding);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSellBuilding other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildingId != other.BuildingId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuildingId != 0) hash ^= BuildingId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuildingId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuildingId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuildingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSellBuilding other) {
      if (other == null) {
        return;
      }
      if (other.BuildingId != 0) {
        BuildingId = other.BuildingId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuildingId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CSellBuilding message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10907,
      }

    }
    #endregion

  }

  /// <summary>
  /// 客户端向服务器请求清除障碍
  /// </summary>
  public sealed partial class C2SRemoveBlock : pb::IMessage<C2SRemoveBlock> {
    private static readonly pb::MessageParser<C2SRemoveBlock> _parser = new pb::MessageParser<C2SRemoveBlock>(() => new C2SRemoveBlock());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SRemoveBlock> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[124]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SRemoveBlock() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SRemoveBlock(C2SRemoveBlock other) : this() {
      buildingId_ = other.buildingId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SRemoveBlock Clone() {
      return new C2SRemoveBlock(this);
    }

    /// <summary>Field number for the "BuildingId" field.</summary>
    public const int BuildingIdFieldNumber = 1;
    private int buildingId_;
    /// <summary>
    /// 障碍物Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildingId {
      get { return buildingId_; }
      set {
        buildingId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SRemoveBlock);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SRemoveBlock other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildingId != other.BuildingId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuildingId != 0) hash ^= BuildingId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuildingId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuildingId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuildingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SRemoveBlock other) {
      if (other == null) {
        return;
      }
      if (other.BuildingId != 0) {
        BuildingId = other.BuildingId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuildingId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SRemoveBlock message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10908,
      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器向客户段返回障碍清除
  /// </summary>
  public sealed partial class S2CRemoveBlock : pb::IMessage<S2CRemoveBlock> {
    private static readonly pb::MessageParser<S2CRemoveBlock> _parser = new pb::MessageParser<S2CRemoveBlock>(() => new S2CRemoveBlock());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CRemoveBlock> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[125]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRemoveBlock() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRemoveBlock(S2CRemoveBlock other) : this() {
      buildingId_ = other.buildingId_;
      items_ = other.items_.Clone();
      cats_ = other.cats_.Clone();
      depotBuildings_ = other.depotBuildings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRemoveBlock Clone() {
      return new S2CRemoveBlock(this);
    }

    /// <summary>Field number for the "BuildingId" field.</summary>
    public const int BuildingIdFieldNumber = 1;
    private int buildingId_;
    /// <summary>
    /// 障碍物Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildingId {
      get { return buildingId_; }
      set {
        buildingId_ = value;
      }
    }

    /// <summary>Field number for the "Items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ItemInfo> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Msg.ClientMessage.ItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> items_ = new pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo>();
    /// <summary>
    /// 掉落的道具
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "Cats" field.</summary>
    public const int CatsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.CatInfo> _repeated_cats_codec
        = pb::FieldCodec.ForMessage(26, global::Msg.ClientMessage.CatInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.CatInfo> cats_ = new pbc::RepeatedField<global::Msg.ClientMessage.CatInfo>();
    /// <summary>
    /// 掉落的猫
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.CatInfo> Cats {
      get { return cats_; }
    }

    /// <summary>Field number for the "DepotBuildings" field.</summary>
    public const int DepotBuildingsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.DepotBuildingInfo> _repeated_depotBuildings_codec
        = pb::FieldCodec.ForMessage(34, global::Msg.ClientMessage.DepotBuildingInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.DepotBuildingInfo> depotBuildings_ = new pbc::RepeatedField<global::Msg.ClientMessage.DepotBuildingInfo>();
    /// <summary>
    /// 建筑
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.DepotBuildingInfo> DepotBuildings {
      get { return depotBuildings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CRemoveBlock);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CRemoveBlock other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildingId != other.BuildingId) return false;
      if(!items_.Equals(other.items_)) return false;
      if(!cats_.Equals(other.cats_)) return false;
      if(!depotBuildings_.Equals(other.depotBuildings_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuildingId != 0) hash ^= BuildingId.GetHashCode();
      hash ^= items_.GetHashCode();
      hash ^= cats_.GetHashCode();
      hash ^= depotBuildings_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuildingId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuildingId);
      }
      items_.WriteTo(output, _repeated_items_codec);
      cats_.WriteTo(output, _repeated_cats_codec);
      depotBuildings_.WriteTo(output, _repeated_depotBuildings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuildingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingId);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      size += cats_.CalculateSize(_repeated_cats_codec);
      size += depotBuildings_.CalculateSize(_repeated_depotBuildings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CRemoveBlock other) {
      if (other == null) {
        return;
      }
      if (other.BuildingId != 0) {
        BuildingId = other.BuildingId;
      }
      items_.Add(other.items_);
      cats_.Add(other.cats_);
      depotBuildings_.Add(other.depotBuildings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuildingId = input.ReadInt32();
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
          case 26: {
            cats_.AddEntriesFrom(input, _repeated_cats_codec);
            break;
          }
          case 34: {
            depotBuildings_.AddEntriesFrom(input, _repeated_depotBuildings_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CRemoveBlock message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10909,
      }

    }
    #endregion

  }

  /// <summary>
  /// 客户端向服务器请求开启地图宝箱
  /// </summary>
  public sealed partial class C2SOpenMapChest : pb::IMessage<C2SOpenMapChest> {
    private static readonly pb::MessageParser<C2SOpenMapChest> _parser = new pb::MessageParser<C2SOpenMapChest>(() => new C2SOpenMapChest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SOpenMapChest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[126]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SOpenMapChest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SOpenMapChest(C2SOpenMapChest other) : this() {
      buildingId_ = other.buildingId_;
      friendId_ = other.friendId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SOpenMapChest Clone() {
      return new C2SOpenMapChest(this);
    }

    /// <summary>Field number for the "BuildingId" field.</summary>
    public const int BuildingIdFieldNumber = 1;
    private int buildingId_;
    /// <summary>
    /// 建筑Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildingId {
      get { return buildingId_; }
      set {
        buildingId_ = value;
      }
    }

    /// <summary>Field number for the "FriendId" field.</summary>
    public const int FriendIdFieldNumber = 2;
    private int friendId_;
    /// <summary>
    /// 好友ID  为0表示自己
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendId {
      get { return friendId_; }
      set {
        friendId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SOpenMapChest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SOpenMapChest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildingId != other.BuildingId) return false;
      if (FriendId != other.FriendId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuildingId != 0) hash ^= BuildingId.GetHashCode();
      if (FriendId != 0) hash ^= FriendId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuildingId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuildingId);
      }
      if (FriendId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FriendId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuildingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingId);
      }
      if (FriendId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SOpenMapChest other) {
      if (other == null) {
        return;
      }
      if (other.BuildingId != 0) {
        BuildingId = other.BuildingId;
      }
      if (other.FriendId != 0) {
        FriendId = other.FriendId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuildingId = input.ReadInt32();
            break;
          }
          case 16: {
            FriendId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SOpenMapChest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10910,
      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器向客户段返回开启地图宝箱
  /// </summary>
  public sealed partial class S2COpenMapChest : pb::IMessage<S2COpenMapChest> {
    private static readonly pb::MessageParser<S2COpenMapChest> _parser = new pb::MessageParser<S2COpenMapChest>(() => new S2COpenMapChest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2COpenMapChest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[127]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2COpenMapChest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2COpenMapChest(S2COpenMapChest other) : this() {
      buildingId_ = other.buildingId_;
      friendId_ = other.friendId_;
      items_ = other.items_.Clone();
      cats_ = other.cats_.Clone();
      depotBuildings_ = other.depotBuildings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2COpenMapChest Clone() {
      return new S2COpenMapChest(this);
    }

    /// <summary>Field number for the "BuildingId" field.</summary>
    public const int BuildingIdFieldNumber = 1;
    private int buildingId_;
    /// <summary>
    /// 建筑Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildingId {
      get { return buildingId_; }
      set {
        buildingId_ = value;
      }
    }

    /// <summary>Field number for the "FriendId" field.</summary>
    public const int FriendIdFieldNumber = 2;
    private int friendId_;
    /// <summary>
    /// 好友ID 为0表示自己
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendId {
      get { return friendId_; }
      set {
        friendId_ = value;
      }
    }

    /// <summary>Field number for the "Items" field.</summary>
    public const int ItemsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ItemInfo> _repeated_items_codec
        = pb::FieldCodec.ForMessage(26, global::Msg.ClientMessage.ItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> items_ = new pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo>();
    /// <summary>
    /// 掉落的道具
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "Cats" field.</summary>
    public const int CatsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.CatInfo> _repeated_cats_codec
        = pb::FieldCodec.ForMessage(34, global::Msg.ClientMessage.CatInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.CatInfo> cats_ = new pbc::RepeatedField<global::Msg.ClientMessage.CatInfo>();
    /// <summary>
    /// 掉落的猫
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.CatInfo> Cats {
      get { return cats_; }
    }

    /// <summary>Field number for the "DepotBuildings" field.</summary>
    public const int DepotBuildingsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.DepotBuildingInfo> _repeated_depotBuildings_codec
        = pb::FieldCodec.ForMessage(42, global::Msg.ClientMessage.DepotBuildingInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.DepotBuildingInfo> depotBuildings_ = new pbc::RepeatedField<global::Msg.ClientMessage.DepotBuildingInfo>();
    /// <summary>
    /// 建筑
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.DepotBuildingInfo> DepotBuildings {
      get { return depotBuildings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2COpenMapChest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2COpenMapChest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildingId != other.BuildingId) return false;
      if (FriendId != other.FriendId) return false;
      if(!items_.Equals(other.items_)) return false;
      if(!cats_.Equals(other.cats_)) return false;
      if(!depotBuildings_.Equals(other.depotBuildings_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuildingId != 0) hash ^= BuildingId.GetHashCode();
      if (FriendId != 0) hash ^= FriendId.GetHashCode();
      hash ^= items_.GetHashCode();
      hash ^= cats_.GetHashCode();
      hash ^= depotBuildings_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuildingId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuildingId);
      }
      if (FriendId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FriendId);
      }
      items_.WriteTo(output, _repeated_items_codec);
      cats_.WriteTo(output, _repeated_cats_codec);
      depotBuildings_.WriteTo(output, _repeated_depotBuildings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuildingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingId);
      }
      if (FriendId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendId);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      size += cats_.CalculateSize(_repeated_cats_codec);
      size += depotBuildings_.CalculateSize(_repeated_depotBuildings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2COpenMapChest other) {
      if (other == null) {
        return;
      }
      if (other.BuildingId != 0) {
        BuildingId = other.BuildingId;
      }
      if (other.FriendId != 0) {
        FriendId = other.FriendId;
      }
      items_.Add(other.items_);
      cats_.Add(other.cats_);
      depotBuildings_.Add(other.depotBuildings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuildingId = input.ReadInt32();
            break;
          }
          case 16: {
            FriendId = input.ReadInt32();
            break;
          }
          case 26: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
          case 34: {
            cats_.AddEntriesFrom(input, _repeated_cats_codec);
            break;
          }
          case 42: {
            depotBuildings_.AddEntriesFrom(input, _repeated_depotBuildings_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2COpenMapChest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10911,
      }

    }
    #endregion

  }

  /// <summary>
  /// 客户端向服务器请求解锁地图区域
  /// </summary>
  public sealed partial class C2SUnlockArea : pb::IMessage<C2SUnlockArea> {
    private static readonly pb::MessageParser<C2SUnlockArea> _parser = new pb::MessageParser<C2SUnlockArea>(() => new C2SUnlockArea());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SUnlockArea> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[128]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SUnlockArea() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SUnlockArea(C2SUnlockArea other) : this() {
      areaId_ = other.areaId_;
      ifQuick_ = other.ifQuick_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SUnlockArea Clone() {
      return new C2SUnlockArea(this);
    }

    /// <summary>Field number for the "AreaId" field.</summary>
    public const int AreaIdFieldNumber = 1;
    private int areaId_;
    /// <summary>
    /// 区域Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AreaId {
      get { return areaId_; }
      set {
        areaId_ = value;
      }
    }

    /// <summary>Field number for the "IfQuick" field.</summary>
    public const int IfQuickFieldNumber = 2;
    private int ifQuick_;
    /// <summary>
    /// 是否使用钻石快速解锁
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IfQuick {
      get { return ifQuick_; }
      set {
        ifQuick_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SUnlockArea);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SUnlockArea other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AreaId != other.AreaId) return false;
      if (IfQuick != other.IfQuick) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AreaId != 0) hash ^= AreaId.GetHashCode();
      if (IfQuick != 0) hash ^= IfQuick.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AreaId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AreaId);
      }
      if (IfQuick != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(IfQuick);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AreaId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AreaId);
      }
      if (IfQuick != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IfQuick);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SUnlockArea other) {
      if (other == null) {
        return;
      }
      if (other.AreaId != 0) {
        AreaId = other.AreaId;
      }
      if (other.IfQuick != 0) {
        IfQuick = other.IfQuick;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AreaId = input.ReadInt32();
            break;
          }
          case 16: {
            IfQuick = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SUnlockArea message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10912,
      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器向客户段返回解锁地图区域
  /// </summary>
  public sealed partial class S2CUnlockArea : pb::IMessage<S2CUnlockArea> {
    private static readonly pb::MessageParser<S2CUnlockArea> _parser = new pb::MessageParser<S2CUnlockArea>(() => new S2CUnlockArea());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CUnlockArea> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[129]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CUnlockArea() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CUnlockArea(S2CUnlockArea other) : this() {
      areaId_ = other.areaId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CUnlockArea Clone() {
      return new S2CUnlockArea(this);
    }

    /// <summary>Field number for the "AreaId" field.</summary>
    public const int AreaIdFieldNumber = 1;
    private int areaId_;
    /// <summary>
    /// 区域Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AreaId {
      get { return areaId_; }
      set {
        areaId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CUnlockArea);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CUnlockArea other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AreaId != other.AreaId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AreaId != 0) hash ^= AreaId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AreaId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AreaId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AreaId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AreaId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CUnlockArea other) {
      if (other == null) {
        return;
      }
      if (other.AreaId != 0) {
        AreaId = other.AreaId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AreaId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CUnlockArea message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10913,
      }

    }
    #endregion

  }

  /// <summary>
  /// 请求地板数据
  /// </summary>
  public sealed partial class C2SSurfaceDataRequest : pb::IMessage<C2SSurfaceDataRequest> {
    private static readonly pb::MessageParser<C2SSurfaceDataRequest> _parser = new pb::MessageParser<C2SSurfaceDataRequest>(() => new C2SSurfaceDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SSurfaceDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[130]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSurfaceDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSurfaceDataRequest(C2SSurfaceDataRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSurfaceDataRequest Clone() {
      return new C2SSurfaceDataRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SSurfaceDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SSurfaceDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SSurfaceDataRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SSurfaceDataRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10914,
      }

    }
    #endregion

  }

  /// <summary>
  /// 返回地板数据
  /// </summary>
  public sealed partial class S2CSurfaceDataResponse : pb::IMessage<S2CSurfaceDataResponse> {
    private static readonly pb::MessageParser<S2CSurfaceDataResponse> _parser = new pb::MessageParser<S2CSurfaceDataResponse>(() => new S2CSurfaceDataResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSurfaceDataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[131]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSurfaceDataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSurfaceDataResponse(S2CSurfaceDataResponse other) : this() {
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSurfaceDataResponse Clone() {
      return new S2CSurfaceDataResponse(this);
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.BuildingInfo> _repeated_data_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.BuildingInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.BuildingInfo> data_ = new pbc::RepeatedField<global::Msg.ClientMessage.BuildingInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.BuildingInfo> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSurfaceDataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSurfaceDataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSurfaceDataResponse other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CSurfaceDataResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10915,
      }

    }
    #endregion

  }

  /// <summary>
  /// 请求更新地板数据
  /// </summary>
  public sealed partial class C2SSurfaceUpdateRequest : pb::IMessage<C2SSurfaceUpdateRequest> {
    private static readonly pb::MessageParser<C2SSurfaceUpdateRequest> _parser = new pb::MessageParser<C2SSurfaceUpdateRequest>(() => new C2SSurfaceUpdateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SSurfaceUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[132]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSurfaceUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSurfaceUpdateRequest(C2SSurfaceUpdateRequest other) : this() {
      updateData_ = other.updateData_.Clone();
      removeData_ = other.removeData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSurfaceUpdateRequest Clone() {
      return new C2SSurfaceUpdateRequest(this);
    }

    /// <summary>Field number for the "UpdateData" field.</summary>
    public const int UpdateDataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.BuildingInfo> _repeated_updateData_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.BuildingInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.BuildingInfo> updateData_ = new pbc::RepeatedField<global::Msg.ClientMessage.BuildingInfo>();
    /// <summary>
    /// 更新的地板
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.BuildingInfo> UpdateData {
      get { return updateData_; }
    }

    /// <summary>Field number for the "RemoveData" field.</summary>
    public const int RemoveDataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.BuildingInfo> _repeated_removeData_codec
        = pb::FieldCodec.ForMessage(18, global::Msg.ClientMessage.BuildingInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.BuildingInfo> removeData_ = new pbc::RepeatedField<global::Msg.ClientMessage.BuildingInfo>();
    /// <summary>
    /// 减少的地板
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.BuildingInfo> RemoveData {
      get { return removeData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SSurfaceUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SSurfaceUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!updateData_.Equals(other.updateData_)) return false;
      if(!removeData_.Equals(other.removeData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= updateData_.GetHashCode();
      hash ^= removeData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      updateData_.WriteTo(output, _repeated_updateData_codec);
      removeData_.WriteTo(output, _repeated_removeData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += updateData_.CalculateSize(_repeated_updateData_codec);
      size += removeData_.CalculateSize(_repeated_removeData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SSurfaceUpdateRequest other) {
      if (other == null) {
        return;
      }
      updateData_.Add(other.updateData_);
      removeData_.Add(other.removeData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            updateData_.AddEntriesFrom(input, _repeated_updateData_codec);
            break;
          }
          case 18: {
            removeData_.AddEntriesFrom(input, _repeated_removeData_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SSurfaceUpdateRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10916,
      }

    }
    #endregion

  }

  /// <summary>
  /// 返回更新结果
  /// </summary>
  public sealed partial class S2CSurfaceUpdateResponse : pb::IMessage<S2CSurfaceUpdateResponse> {
    private static readonly pb::MessageParser<S2CSurfaceUpdateResponse> _parser = new pb::MessageParser<S2CSurfaceUpdateResponse>(() => new S2CSurfaceUpdateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSurfaceUpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[133]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSurfaceUpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSurfaceUpdateResponse(S2CSurfaceUpdateResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSurfaceUpdateResponse Clone() {
      return new S2CSurfaceUpdateResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSurfaceUpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSurfaceUpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSurfaceUpdateResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CSurfaceUpdateResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 10917,
      }

    }
    #endregion

  }

  /// <summary>
  /// 抽奖
  /// </summary>
  public sealed partial class C2SDraw : pb::IMessage<C2SDraw> {
    private static readonly pb::MessageParser<C2SDraw> _parser = new pb::MessageParser<C2SDraw>(() => new C2SDraw());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SDraw> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[134]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SDraw() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SDraw(C2SDraw other) : this() {
      drawType_ = other.drawType_;
      drawCount_ = other.drawCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SDraw Clone() {
      return new C2SDraw(this);
    }

    /// <summary>Field number for the "DrawType" field.</summary>
    public const int DrawTypeFieldNumber = 1;
    private int drawType_;
    /// <summary>
    /// 抽取类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DrawType {
      get { return drawType_; }
      set {
        drawType_ = value;
      }
    }

    /// <summary>Field number for the "DrawCount" field.</summary>
    public const int DrawCountFieldNumber = 2;
    private int drawCount_;
    /// <summary>
    /// 抽取次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DrawCount {
      get { return drawCount_; }
      set {
        drawCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SDraw);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SDraw other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DrawType != other.DrawType) return false;
      if (DrawCount != other.DrawCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DrawType != 0) hash ^= DrawType.GetHashCode();
      if (DrawCount != 0) hash ^= DrawCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DrawType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(DrawType);
      }
      if (DrawCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DrawCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DrawType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DrawType);
      }
      if (DrawCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DrawCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SDraw other) {
      if (other == null) {
        return;
      }
      if (other.DrawType != 0) {
        DrawType = other.DrawType;
      }
      if (other.DrawCount != 0) {
        DrawCount = other.DrawCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DrawType = input.ReadInt32();
            break;
          }
          case 16: {
            DrawCount = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SDraw message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11000,
      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器返回抽奖结果
  /// </summary>
  public sealed partial class S2CDrawResult : pb::IMessage<S2CDrawResult> {
    private static readonly pb::MessageParser<S2CDrawResult> _parser = new pb::MessageParser<S2CDrawResult>(() => new S2CDrawResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CDrawResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[135]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CDrawResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CDrawResult(S2CDrawResult other) : this() {
      cats_ = other.cats_.Clone();
      items_ = other.items_.Clone();
      buildings_ = other.buildings_.Clone();
      isFirst_ = other.isFirst_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CDrawResult Clone() {
      return new S2CDrawResult(this);
    }

    /// <summary>Field number for the "Cats" field.</summary>
    public const int CatsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.CatInfo> _repeated_cats_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.CatInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.CatInfo> cats_ = new pbc::RepeatedField<global::Msg.ClientMessage.CatInfo>();
    /// <summary>
    /// 获得的猫
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.CatInfo> Cats {
      get { return cats_; }
    }

    /// <summary>Field number for the "Items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ItemInfo> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Msg.ClientMessage.ItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> items_ = new pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo>();
    /// <summary>
    /// 获得物品
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "Buildings" field.</summary>
    public const int BuildingsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.DepotBuildingInfo> _repeated_buildings_codec
        = pb::FieldCodec.ForMessage(26, global::Msg.ClientMessage.DepotBuildingInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.DepotBuildingInfo> buildings_ = new pbc::RepeatedField<global::Msg.ClientMessage.DepotBuildingInfo>();
    /// <summary>
    /// 获得建筑
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.DepotBuildingInfo> Buildings {
      get { return buildings_; }
    }

    /// <summary>Field number for the "IsFirst" field.</summary>
    public const int IsFirstFieldNumber = 4;
    private bool isFirst_;
    /// <summary>
    /// 首抽
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFirst {
      get { return isFirst_; }
      set {
        isFirst_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CDrawResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CDrawResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!cats_.Equals(other.cats_)) return false;
      if(!items_.Equals(other.items_)) return false;
      if(!buildings_.Equals(other.buildings_)) return false;
      if (IsFirst != other.IsFirst) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= cats_.GetHashCode();
      hash ^= items_.GetHashCode();
      hash ^= buildings_.GetHashCode();
      if (IsFirst != false) hash ^= IsFirst.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      cats_.WriteTo(output, _repeated_cats_codec);
      items_.WriteTo(output, _repeated_items_codec);
      buildings_.WriteTo(output, _repeated_buildings_codec);
      if (IsFirst != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsFirst);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += cats_.CalculateSize(_repeated_cats_codec);
      size += items_.CalculateSize(_repeated_items_codec);
      size += buildings_.CalculateSize(_repeated_buildings_codec);
      if (IsFirst != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CDrawResult other) {
      if (other == null) {
        return;
      }
      cats_.Add(other.cats_);
      items_.Add(other.items_);
      buildings_.Add(other.buildings_);
      if (other.IsFirst != false) {
        IsFirst = other.IsFirst;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            cats_.AddEntriesFrom(input, _repeated_cats_codec);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
          case 26: {
            buildings_.AddEntriesFrom(input, _repeated_buildings_codec);
            break;
          }
          case 32: {
            IsFirst = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CDrawResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11001,
      }

    }
    #endregion

  }

  /// <summary>
  /// 碎片合成猫
  /// </summary>
  public sealed partial class C2SComposeCat : pb::IMessage<C2SComposeCat> {
    private static readonly pb::MessageParser<C2SComposeCat> _parser = new pb::MessageParser<C2SComposeCat>(() => new C2SComposeCat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SComposeCat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[136]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SComposeCat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SComposeCat(C2SComposeCat other) : this() {
      catConfigId_ = other.catConfigId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SComposeCat Clone() {
      return new C2SComposeCat(this);
    }

    /// <summary>Field number for the "CatConfigId" field.</summary>
    public const int CatConfigIdFieldNumber = 1;
    private int catConfigId_;
    /// <summary>
    /// 猫的配置ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatConfigId {
      get { return catConfigId_; }
      set {
        catConfigId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SComposeCat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SComposeCat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatConfigId != other.CatConfigId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatConfigId != 0) hash ^= CatConfigId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatConfigId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatConfigId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatConfigId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatConfigId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SComposeCat other) {
      if (other == null) {
        return;
      }
      if (other.CatConfigId != 0) {
        CatConfigId = other.CatConfigId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatConfigId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SComposeCat message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11002,
      }

    }
    #endregion

  }

  public sealed partial class S2CComposeCatResult : pb::IMessage<S2CComposeCatResult> {
    private static readonly pb::MessageParser<S2CComposeCatResult> _parser = new pb::MessageParser<S2CComposeCatResult>(() => new S2CComposeCatResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CComposeCatResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[137]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CComposeCatResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CComposeCatResult(S2CComposeCatResult other) : this() {
      cat_ = other.cat_ != null ? other.cat_.Clone() : null;
      usedFragment_ = other.usedFragment_ != null ? other.usedFragment_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CComposeCatResult Clone() {
      return new S2CComposeCatResult(this);
    }

    /// <summary>Field number for the "Cat" field.</summary>
    public const int CatFieldNumber = 1;
    private global::Msg.ClientMessage.CatInfo cat_;
    /// <summary>
    /// 获得新猫
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ClientMessage.CatInfo Cat {
      get { return cat_; }
      set {
        cat_ = value;
      }
    }

    /// <summary>Field number for the "UsedFragment" field.</summary>
    public const int UsedFragmentFieldNumber = 2;
    private global::Msg.ClientMessage.ItemInfo usedFragment_;
    /// <summary>
    /// 消耗掉的碎片
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ClientMessage.ItemInfo UsedFragment {
      get { return usedFragment_; }
      set {
        usedFragment_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CComposeCatResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CComposeCatResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Cat, other.Cat)) return false;
      if (!object.Equals(UsedFragment, other.UsedFragment)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (cat_ != null) hash ^= Cat.GetHashCode();
      if (usedFragment_ != null) hash ^= UsedFragment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (cat_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Cat);
      }
      if (usedFragment_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UsedFragment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (cat_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cat);
      }
      if (usedFragment_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UsedFragment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CComposeCatResult other) {
      if (other == null) {
        return;
      }
      if (other.cat_ != null) {
        if (cat_ == null) {
          Cat = new global::Msg.ClientMessage.CatInfo();
        }
        Cat.MergeFrom(other.Cat);
      }
      if (other.usedFragment_ != null) {
        if (usedFragment_ == null) {
          UsedFragment = new global::Msg.ClientMessage.ItemInfo();
        }
        UsedFragment.MergeFrom(other.UsedFragment);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (cat_ == null) {
              Cat = new global::Msg.ClientMessage.CatInfo();
            }
            input.ReadMessage(Cat);
            break;
          }
          case 18: {
            if (usedFragment_ == null) {
              UsedFragment = new global::Msg.ClientMessage.ItemInfo();
            }
            input.ReadMessage(UsedFragment);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CComposeCatResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11003,
      }

    }
    #endregion

  }

  /// <summary>
  /// 拉取资源物品属性(Other表里配置的属性，像金币，钻石，体力，魅力值，猫粮等)
  /// </summary>
  public sealed partial class C2SItemResource : pb::IMessage<C2SItemResource> {
    private static readonly pb::MessageParser<C2SItemResource> _parser = new pb::MessageParser<C2SItemResource>(() => new C2SItemResource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SItemResource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[138]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SItemResource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SItemResource(C2SItemResource other) : this() {
      resourceIds_ = other.resourceIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SItemResource Clone() {
      return new C2SItemResource(this);
    }

    /// <summary>Field number for the "ResourceIds" field.</summary>
    public const int ResourceIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_resourceIds_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> resourceIds_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 需要拉取的属性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ResourceIds {
      get { return resourceIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SItemResource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SItemResource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!resourceIds_.Equals(other.resourceIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= resourceIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      resourceIds_.WriteTo(output, _repeated_resourceIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += resourceIds_.CalculateSize(_repeated_resourceIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SItemResource other) {
      if (other == null) {
        return;
      }
      resourceIds_.Add(other.resourceIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            resourceIds_.AddEntriesFrom(input, _repeated_resourceIds_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SItemResource message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11004,
      }

    }
    #endregion

  }

  /// <summary>
  /// 资源物品属性
  /// </summary>
  public sealed partial class S2CItemResourceValue : pb::IMessage<S2CItemResourceValue> {
    private static readonly pb::MessageParser<S2CItemResourceValue> _parser = new pb::MessageParser<S2CItemResourceValue>(() => new S2CItemResourceValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CItemResourceValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[139]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CItemResourceValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CItemResourceValue(S2CItemResourceValue other) : this() {
      resourceId_ = other.resourceId_;
      resourceValue_ = other.resourceValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CItemResourceValue Clone() {
      return new S2CItemResourceValue(this);
    }

    /// <summary>Field number for the "ResourceId" field.</summary>
    public const int ResourceIdFieldNumber = 1;
    private int resourceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ResourceId {
      get { return resourceId_; }
      set {
        resourceId_ = value;
      }
    }

    /// <summary>Field number for the "ResourceValue" field.</summary>
    public const int ResourceValueFieldNumber = 2;
    private int resourceValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ResourceValue {
      get { return resourceValue_; }
      set {
        resourceValue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CItemResourceValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CItemResourceValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceId != other.ResourceId) return false;
      if (ResourceValue != other.ResourceValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceId != 0) hash ^= ResourceId.GetHashCode();
      if (ResourceValue != 0) hash ^= ResourceValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResourceId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ResourceId);
      }
      if (ResourceValue != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ResourceValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResourceId);
      }
      if (ResourceValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResourceValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CItemResourceValue other) {
      if (other == null) {
        return;
      }
      if (other.ResourceId != 0) {
        ResourceId = other.ResourceId;
      }
      if (other.ResourceValue != 0) {
        ResourceValue = other.ResourceValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ResourceId = input.ReadInt32();
            break;
          }
          case 16: {
            ResourceValue = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CItemResourceValue message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11005,
      }

    }
    #endregion

  }

  /// <summary>
  /// 拉取资源物品属性返回
  /// </summary>
  public sealed partial class S2CItemResourceResult : pb::IMessage<S2CItemResourceResult> {
    private static readonly pb::MessageParser<S2CItemResourceResult> _parser = new pb::MessageParser<S2CItemResourceResult>(() => new S2CItemResourceResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CItemResourceResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[140]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CItemResourceResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CItemResourceResult(S2CItemResourceResult other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CItemResourceResult Clone() {
      return new S2CItemResourceResult(this);
    }

    /// <summary>Field number for the "Items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.S2CItemResourceValue> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Msg.ClientMessage.S2CItemResourceValue.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.S2CItemResourceValue> items_ = new pbc::RepeatedField<global::Msg.ClientMessage.S2CItemResourceValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.S2CItemResourceValue> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CItemResourceResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CItemResourceResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CItemResourceResult other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CItemResourceResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11006,
      }

    }
    #endregion

  }

  /// <summary>
  /// 请求商店商品
  /// </summary>
  public sealed partial class C2SShopItems : pb::IMessage<C2SShopItems> {
    private static readonly pb::MessageParser<C2SShopItems> _parser = new pb::MessageParser<C2SShopItems>(() => new C2SShopItems());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SShopItems> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[141]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SShopItems() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SShopItems(C2SShopItems other) : this() {
      shopId_ = other.shopId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SShopItems Clone() {
      return new C2SShopItems(this);
    }

    /// <summary>Field number for the "ShopId" field.</summary>
    public const int ShopIdFieldNumber = 1;
    private int shopId_;
    /// <summary>
    /// 商店ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ShopId {
      get { return shopId_; }
      set {
        shopId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SShopItems);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SShopItems other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShopId != other.ShopId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ShopId != 0) hash ^= ShopId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ShopId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ShopId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ShopId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShopId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SShopItems other) {
      if (other == null) {
        return;
      }
      if (other.ShopId != 0) {
        ShopId = other.ShopId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ShopId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SShopItems message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11007,
      }

    }
    #endregion

  }

  public sealed partial class S2CShopItem : pb::IMessage<S2CShopItem> {
    private static readonly pb::MessageParser<S2CShopItem> _parser = new pb::MessageParser<S2CShopItem>(() => new S2CShopItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CShopItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[142]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CShopItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CShopItem(S2CShopItem other) : this() {
      itemId_ = other.itemId_;
      leftNum_ = other.leftNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CShopItem Clone() {
      return new S2CShopItem(this);
    }

    /// <summary>Field number for the "ItemId" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private int itemId_;
    /// <summary>
    /// 商店ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "LeftNum" field.</summary>
    public const int LeftNumFieldNumber = 2;
    private int leftNum_;
    /// <summary>
    ///剩余数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LeftNum {
      get { return leftNum_; }
      set {
        leftNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CShopItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CShopItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (LeftNum != other.LeftNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (LeftNum != 0) hash ^= LeftNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ItemId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ItemId);
      }
      if (LeftNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(LeftNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (LeftNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeftNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CShopItem other) {
      if (other == null) {
        return;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.LeftNum != 0) {
        LeftNum = other.LeftNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemId = input.ReadInt32();
            break;
          }
          case 16: {
            LeftNum = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CShopItem message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11008,
      }

    }
    #endregion

  }

  public sealed partial class S2CShopItemsResult : pb::IMessage<S2CShopItemsResult> {
    private static readonly pb::MessageParser<S2CShopItemsResult> _parser = new pb::MessageParser<S2CShopItemsResult>(() => new S2CShopItemsResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CShopItemsResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[143]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CShopItemsResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CShopItemsResult(S2CShopItemsResult other) : this() {
      shopId_ = other.shopId_;
      items_ = other.items_.Clone();
      remainSeconds_ = other.remainSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CShopItemsResult Clone() {
      return new S2CShopItemsResult(this);
    }

    /// <summary>Field number for the "ShopId" field.</summary>
    public const int ShopIdFieldNumber = 1;
    private int shopId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ShopId {
      get { return shopId_; }
      set {
        shopId_ = value;
      }
    }

    /// <summary>Field number for the "Items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.S2CShopItem> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Msg.ClientMessage.S2CShopItem.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.S2CShopItem> items_ = new pbc::RepeatedField<global::Msg.ClientMessage.S2CShopItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.S2CShopItem> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "RemainSeconds" field.</summary>
    public const int RemainSecondsFieldNumber = 3;
    private int remainSeconds_;
    /// <summary>
    /// 剩余刷新时间(秒)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RemainSeconds {
      get { return remainSeconds_; }
      set {
        remainSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CShopItemsResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CShopItemsResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShopId != other.ShopId) return false;
      if(!items_.Equals(other.items_)) return false;
      if (RemainSeconds != other.RemainSeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ShopId != 0) hash ^= ShopId.GetHashCode();
      hash ^= items_.GetHashCode();
      if (RemainSeconds != 0) hash ^= RemainSeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ShopId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ShopId);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (RemainSeconds != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RemainSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ShopId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShopId);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (RemainSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainSeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CShopItemsResult other) {
      if (other == null) {
        return;
      }
      if (other.ShopId != 0) {
        ShopId = other.ShopId;
      }
      items_.Add(other.items_);
      if (other.RemainSeconds != 0) {
        RemainSeconds = other.RemainSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ShopId = input.ReadInt32();
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
          case 24: {
            RemainSeconds = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CShopItemsResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11009,
      }

    }
    #endregion

  }

  /// <summary>
  /// 购买商店物品
  /// </summary>
  public sealed partial class C2SBuyShopItem : pb::IMessage<C2SBuyShopItem> {
    private static readonly pb::MessageParser<C2SBuyShopItem> _parser = new pb::MessageParser<C2SBuyShopItem>(() => new C2SBuyShopItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SBuyShopItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[144]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SBuyShopItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SBuyShopItem(C2SBuyShopItem other) : this() {
      itemId_ = other.itemId_;
      itemNum_ = other.itemNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SBuyShopItem Clone() {
      return new C2SBuyShopItem(this);
    }

    /// <summary>Field number for the "ItemId" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private int itemId_;
    /// <summary>
    /// 商品ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "ItemNum" field.</summary>
    public const int ItemNumFieldNumber = 2;
    private int itemNum_;
    /// <summary>
    /// 商品数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemNum {
      get { return itemNum_; }
      set {
        itemNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SBuyShopItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SBuyShopItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (ItemNum != other.ItemNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (ItemNum != 0) hash ^= ItemNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ItemId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ItemId);
      }
      if (ItemNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (ItemNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SBuyShopItem other) {
      if (other == null) {
        return;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.ItemNum != 0) {
        ItemNum = other.ItemNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemId = input.ReadInt32();
            break;
          }
          case 16: {
            ItemNum = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SBuyShopItem message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11010,
      }

    }
    #endregion

  }

  /// <summary>
  /// 购买返回的物品
  /// </summary>
  public sealed partial class S2CBuyShopItemResult : pb::IMessage<S2CBuyShopItemResult> {
    private static readonly pb::MessageParser<S2CBuyShopItemResult> _parser = new pb::MessageParser<S2CBuyShopItemResult>(() => new S2CBuyShopItemResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CBuyShopItemResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[145]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CBuyShopItemResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CBuyShopItemResult(S2CBuyShopItemResult other) : this() {
      shopId_ = other.shopId_;
      itemId_ = other.itemId_;
      itemNum_ = other.itemNum_;
      addItem_ = other.addItem_ != null ? other.addItem_.Clone() : null;
      costRes_ = other.costRes_ != null ? other.costRes_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CBuyShopItemResult Clone() {
      return new S2CBuyShopItemResult(this);
    }

    /// <summary>Field number for the "ShopId" field.</summary>
    public const int ShopIdFieldNumber = 1;
    private int shopId_;
    /// <summary>
    /// 商店ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ShopId {
      get { return shopId_; }
      set {
        shopId_ = value;
      }
    }

    /// <summary>Field number for the "ItemId" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private int itemId_;
    /// <summary>
    /// 商品ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "ItemNum" field.</summary>
    public const int ItemNumFieldNumber = 3;
    private int itemNum_;
    /// <summary>
    /// 商品数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemNum {
      get { return itemNum_; }
      set {
        itemNum_ = value;
      }
    }

    /// <summary>Field number for the "AddItem" field.</summary>
    public const int AddItemFieldNumber = 4;
    private global::Msg.ClientMessage.ItemInfo addItem_;
    /// <summary>
    /// 买到的物品
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ClientMessage.ItemInfo AddItem {
      get { return addItem_; }
      set {
        addItem_ = value;
      }
    }

    /// <summary>Field number for the "CostRes" field.</summary>
    public const int CostResFieldNumber = 5;
    private global::Msg.ClientMessage.ResourceInfo costRes_;
    /// <summary>
    /// 花费的物品资源
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ClientMessage.ResourceInfo CostRes {
      get { return costRes_; }
      set {
        costRes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CBuyShopItemResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CBuyShopItemResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShopId != other.ShopId) return false;
      if (ItemId != other.ItemId) return false;
      if (ItemNum != other.ItemNum) return false;
      if (!object.Equals(AddItem, other.AddItem)) return false;
      if (!object.Equals(CostRes, other.CostRes)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ShopId != 0) hash ^= ShopId.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (ItemNum != 0) hash ^= ItemNum.GetHashCode();
      if (addItem_ != null) hash ^= AddItem.GetHashCode();
      if (costRes_ != null) hash ^= CostRes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ShopId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ShopId);
      }
      if (ItemId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemId);
      }
      if (ItemNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ItemNum);
      }
      if (addItem_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AddItem);
      }
      if (costRes_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CostRes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ShopId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShopId);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (ItemNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemNum);
      }
      if (addItem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddItem);
      }
      if (costRes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CostRes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CBuyShopItemResult other) {
      if (other == null) {
        return;
      }
      if (other.ShopId != 0) {
        ShopId = other.ShopId;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.ItemNum != 0) {
        ItemNum = other.ItemNum;
      }
      if (other.addItem_ != null) {
        if (addItem_ == null) {
          AddItem = new global::Msg.ClientMessage.ItemInfo();
        }
        AddItem.MergeFrom(other.AddItem);
      }
      if (other.costRes_ != null) {
        if (costRes_ == null) {
          CostRes = new global::Msg.ClientMessage.ResourceInfo();
        }
        CostRes.MergeFrom(other.CostRes);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ShopId = input.ReadInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadInt32();
            break;
          }
          case 24: {
            ItemNum = input.ReadInt32();
            break;
          }
          case 34: {
            if (addItem_ == null) {
              AddItem = new global::Msg.ClientMessage.ItemInfo();
            }
            input.ReadMessage(AddItem);
            break;
          }
          case 42: {
            if (costRes_ == null) {
              CostRes = new global::Msg.ClientMessage.ResourceInfo();
            }
            input.ReadMessage(CostRes);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CBuyShopItemResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11011,
      }

    }
    #endregion

  }

  /// <summary>
  /// 通知客户端商店需要刷新
  /// </summary>
  public sealed partial class S2CShopNeedRefreshNotify : pb::IMessage<S2CShopNeedRefreshNotify> {
    private static readonly pb::MessageParser<S2CShopNeedRefreshNotify> _parser = new pb::MessageParser<S2CShopNeedRefreshNotify>(() => new S2CShopNeedRefreshNotify());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CShopNeedRefreshNotify> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[146]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CShopNeedRefreshNotify() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CShopNeedRefreshNotify(S2CShopNeedRefreshNotify other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CShopNeedRefreshNotify Clone() {
      return new S2CShopNeedRefreshNotify(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CShopNeedRefreshNotify);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CShopNeedRefreshNotify other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CShopNeedRefreshNotify other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CShopNeedRefreshNotify message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11012,
      }

    }
    #endregion

  }

  /// <summary>
  /// 猫升级
  /// </summary>
  public sealed partial class C2SCatFeed : pb::IMessage<C2SCatFeed> {
    private static readonly pb::MessageParser<C2SCatFeed> _parser = new pb::MessageParser<C2SCatFeed>(() => new C2SCatFeed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SCatFeed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[147]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatFeed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatFeed(C2SCatFeed other) : this() {
      catId_ = other.catId_;
      catFood_ = other.catFood_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatFeed Clone() {
      return new C2SCatFeed(this);
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 1;
    private int catId_;
    /// <summary>
    /// 猫实例ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    /// <summary>Field number for the "CatFood" field.</summary>
    public const int CatFoodFieldNumber = 2;
    private int catFood_;
    /// <summary>
    /// 猫粮
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatFood {
      get { return catFood_; }
      set {
        catFood_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SCatFeed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SCatFeed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatId != other.CatId) return false;
      if (CatFood != other.CatFood) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatId != 0) hash ^= CatId.GetHashCode();
      if (CatFood != 0) hash ^= CatFood.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatId);
      }
      if (CatFood != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CatFood);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      if (CatFood != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatFood);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SCatFeed other) {
      if (other == null) {
        return;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      if (other.CatFood != 0) {
        CatFood = other.CatFood;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatId = input.ReadInt32();
            break;
          }
          case 16: {
            CatFood = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SCatFeed message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11100,
      }

    }
    #endregion

  }

  public sealed partial class S2CCatFeedResult : pb::IMessage<S2CCatFeedResult> {
    private static readonly pb::MessageParser<S2CCatFeedResult> _parser = new pb::MessageParser<S2CCatFeedResult>(() => new S2CCatFeedResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CCatFeedResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[148]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatFeedResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatFeedResult(S2CCatFeedResult other) : this() {
      catId_ = other.catId_;
      catLevel_ = other.catLevel_;
      catExp_ = other.catExp_;
      isCritical_ = other.isCritical_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatFeedResult Clone() {
      return new S2CCatFeedResult(this);
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 1;
    private int catId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    /// <summary>Field number for the "CatLevel" field.</summary>
    public const int CatLevelFieldNumber = 2;
    private int catLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatLevel {
      get { return catLevel_; }
      set {
        catLevel_ = value;
      }
    }

    /// <summary>Field number for the "CatExp" field.</summary>
    public const int CatExpFieldNumber = 3;
    private int catExp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatExp {
      get { return catExp_; }
      set {
        catExp_ = value;
      }
    }

    /// <summary>Field number for the "IsCritical" field.</summary>
    public const int IsCriticalFieldNumber = 4;
    private bool isCritical_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCritical {
      get { return isCritical_; }
      set {
        isCritical_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CCatFeedResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CCatFeedResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatId != other.CatId) return false;
      if (CatLevel != other.CatLevel) return false;
      if (CatExp != other.CatExp) return false;
      if (IsCritical != other.IsCritical) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatId != 0) hash ^= CatId.GetHashCode();
      if (CatLevel != 0) hash ^= CatLevel.GetHashCode();
      if (CatExp != 0) hash ^= CatExp.GetHashCode();
      if (IsCritical != false) hash ^= IsCritical.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatId);
      }
      if (CatLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CatLevel);
      }
      if (CatExp != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CatExp);
      }
      if (IsCritical != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsCritical);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      if (CatLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatLevel);
      }
      if (CatExp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatExp);
      }
      if (IsCritical != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CCatFeedResult other) {
      if (other == null) {
        return;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      if (other.CatLevel != 0) {
        CatLevel = other.CatLevel;
      }
      if (other.CatExp != 0) {
        CatExp = other.CatExp;
      }
      if (other.IsCritical != false) {
        IsCritical = other.IsCritical;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatId = input.ReadInt32();
            break;
          }
          case 16: {
            CatLevel = input.ReadInt32();
            break;
          }
          case 24: {
            CatExp = input.ReadInt32();
            break;
          }
          case 32: {
            IsCritical = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CCatFeedResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11101,
      }

    }
    #endregion

  }

  /// <summary>
  /// 猫升星
  /// </summary>
  public sealed partial class C2SCatUpgradeStar : pb::IMessage<C2SCatUpgradeStar> {
    private static readonly pb::MessageParser<C2SCatUpgradeStar> _parser = new pb::MessageParser<C2SCatUpgradeStar>(() => new C2SCatUpgradeStar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SCatUpgradeStar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[149]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatUpgradeStar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatUpgradeStar(C2SCatUpgradeStar other) : this() {
      catId_ = other.catId_;
      costCatIds_ = other.costCatIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatUpgradeStar Clone() {
      return new C2SCatUpgradeStar(this);
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 1;
    private int catId_;
    /// <summary>
    /// 升星的猫
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    /// <summary>Field number for the "CostCatIds" field.</summary>
    public const int CostCatIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_costCatIds_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> costCatIds_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 消耗的猫
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CostCatIds {
      get { return costCatIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SCatUpgradeStar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SCatUpgradeStar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatId != other.CatId) return false;
      if(!costCatIds_.Equals(other.costCatIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatId != 0) hash ^= CatId.GetHashCode();
      hash ^= costCatIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatId);
      }
      costCatIds_.WriteTo(output, _repeated_costCatIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      size += costCatIds_.CalculateSize(_repeated_costCatIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SCatUpgradeStar other) {
      if (other == null) {
        return;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      costCatIds_.Add(other.costCatIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatId = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            costCatIds_.AddEntriesFrom(input, _repeated_costCatIds_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SCatUpgradeStar message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11102,
      }

    }
    #endregion

  }

  public sealed partial class S2CCatUpgradeStarResult : pb::IMessage<S2CCatUpgradeStarResult> {
    private static readonly pb::MessageParser<S2CCatUpgradeStarResult> _parser = new pb::MessageParser<S2CCatUpgradeStarResult>(() => new S2CCatUpgradeStarResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CCatUpgradeStarResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[150]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatUpgradeStarResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatUpgradeStarResult(S2CCatUpgradeStarResult other) : this() {
      catId_ = other.catId_;
      catStar_ = other.catStar_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatUpgradeStarResult Clone() {
      return new S2CCatUpgradeStarResult(this);
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 1;
    private int catId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    /// <summary>Field number for the "CatStar" field.</summary>
    public const int CatStarFieldNumber = 2;
    private int catStar_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatStar {
      get { return catStar_; }
      set {
        catStar_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CCatUpgradeStarResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CCatUpgradeStarResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatId != other.CatId) return false;
      if (CatStar != other.CatStar) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatId != 0) hash ^= CatId.GetHashCode();
      if (CatStar != 0) hash ^= CatStar.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatId);
      }
      if (CatStar != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CatStar);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      if (CatStar != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatStar);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CCatUpgradeStarResult other) {
      if (other == null) {
        return;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      if (other.CatStar != 0) {
        CatStar = other.CatStar;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatId = input.ReadInt32();
            break;
          }
          case 16: {
            CatStar = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CCatUpgradeStarResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11103,
      }

    }
    #endregion

  }

  /// <summary>
  /// 猫技能升级
  /// </summary>
  public sealed partial class C2SCatSkillLevelUp : pb::IMessage<C2SCatSkillLevelUp> {
    private static readonly pb::MessageParser<C2SCatSkillLevelUp> _parser = new pb::MessageParser<C2SCatSkillLevelUp>(() => new C2SCatSkillLevelUp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SCatSkillLevelUp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[151]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatSkillLevelUp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatSkillLevelUp(C2SCatSkillLevelUp other) : this() {
      catId_ = other.catId_;
      costCatIds_ = other.costCatIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatSkillLevelUp Clone() {
      return new C2SCatSkillLevelUp(this);
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 1;
    private int catId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    /// <summary>Field number for the "CostCatIds" field.</summary>
    public const int CostCatIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_costCatIds_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> costCatIds_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 消耗的猫ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CostCatIds {
      get { return costCatIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SCatSkillLevelUp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SCatSkillLevelUp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatId != other.CatId) return false;
      if(!costCatIds_.Equals(other.costCatIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatId != 0) hash ^= CatId.GetHashCode();
      hash ^= costCatIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatId);
      }
      costCatIds_.WriteTo(output, _repeated_costCatIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      size += costCatIds_.CalculateSize(_repeated_costCatIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SCatSkillLevelUp other) {
      if (other == null) {
        return;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      costCatIds_.Add(other.costCatIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatId = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            costCatIds_.AddEntriesFrom(input, _repeated_costCatIds_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SCatSkillLevelUp message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11104,
      }

    }
    #endregion

  }

  public sealed partial class S2CCatSkillLevelUpResult : pb::IMessage<S2CCatSkillLevelUpResult> {
    private static readonly pb::MessageParser<S2CCatSkillLevelUpResult> _parser = new pb::MessageParser<S2CCatSkillLevelUpResult>(() => new S2CCatSkillLevelUpResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CCatSkillLevelUpResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[152]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatSkillLevelUpResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatSkillLevelUpResult(S2CCatSkillLevelUpResult other) : this() {
      catId_ = other.catId_;
      skillLevel_ = other.skillLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatSkillLevelUpResult Clone() {
      return new S2CCatSkillLevelUpResult(this);
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 1;
    private int catId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    /// <summary>Field number for the "SkillLevel" field.</summary>
    public const int SkillLevelFieldNumber = 3;
    private int skillLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SkillLevel {
      get { return skillLevel_; }
      set {
        skillLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CCatSkillLevelUpResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CCatSkillLevelUpResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatId != other.CatId) return false;
      if (SkillLevel != other.SkillLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatId != 0) hash ^= CatId.GetHashCode();
      if (SkillLevel != 0) hash ^= SkillLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatId);
      }
      if (SkillLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SkillLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      if (SkillLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CCatSkillLevelUpResult other) {
      if (other == null) {
        return;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      if (other.SkillLevel != 0) {
        SkillLevel = other.SkillLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatId = input.ReadInt32();
            break;
          }
          case 24: {
            SkillLevel = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CCatSkillLevelUpResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11105,
      }

    }
    #endregion

  }

  /// <summary>
  /// 更改猫昵称
  /// </summary>
  public sealed partial class C2SCatRenameNick : pb::IMessage<C2SCatRenameNick> {
    private static readonly pb::MessageParser<C2SCatRenameNick> _parser = new pb::MessageParser<C2SCatRenameNick>(() => new C2SCatRenameNick());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SCatRenameNick> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[153]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatRenameNick() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatRenameNick(C2SCatRenameNick other) : this() {
      catId_ = other.catId_;
      newNick_ = other.newNick_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatRenameNick Clone() {
      return new C2SCatRenameNick(this);
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 1;
    private int catId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    /// <summary>Field number for the "NewNick" field.</summary>
    public const int NewNickFieldNumber = 2;
    private string newNick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NewNick {
      get { return newNick_; }
      set {
        newNick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SCatRenameNick);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SCatRenameNick other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatId != other.CatId) return false;
      if (NewNick != other.NewNick) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatId != 0) hash ^= CatId.GetHashCode();
      if (NewNick.Length != 0) hash ^= NewNick.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatId);
      }
      if (NewNick.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NewNick);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      if (NewNick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewNick);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SCatRenameNick other) {
      if (other == null) {
        return;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      if (other.NewNick.Length != 0) {
        NewNick = other.NewNick;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatId = input.ReadInt32();
            break;
          }
          case 18: {
            NewNick = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SCatRenameNick message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11106,
      }

    }
    #endregion

  }

  public sealed partial class S2CCatRenameNickResult : pb::IMessage<S2CCatRenameNickResult> {
    private static readonly pb::MessageParser<S2CCatRenameNickResult> _parser = new pb::MessageParser<S2CCatRenameNickResult>(() => new S2CCatRenameNickResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CCatRenameNickResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[154]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatRenameNickResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatRenameNickResult(S2CCatRenameNickResult other) : this() {
      catId_ = other.catId_;
      newNick_ = other.newNick_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatRenameNickResult Clone() {
      return new S2CCatRenameNickResult(this);
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 1;
    private int catId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    /// <summary>Field number for the "NewNick" field.</summary>
    public const int NewNickFieldNumber = 2;
    private string newNick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NewNick {
      get { return newNick_; }
      set {
        newNick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CCatRenameNickResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CCatRenameNickResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatId != other.CatId) return false;
      if (NewNick != other.NewNick) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatId != 0) hash ^= CatId.GetHashCode();
      if (NewNick.Length != 0) hash ^= NewNick.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatId);
      }
      if (NewNick.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NewNick);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      if (NewNick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewNick);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CCatRenameNickResult other) {
      if (other == null) {
        return;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      if (other.NewNick.Length != 0) {
        NewNick = other.NewNick;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatId = input.ReadInt32();
            break;
          }
          case 18: {
            NewNick = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CCatRenameNickResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11107,
      }

    }
    #endregion

  }

  /// <summary>
  /// 锁住猫
  /// </summary>
  public sealed partial class C2SCatLock : pb::IMessage<C2SCatLock> {
    private static readonly pb::MessageParser<C2SCatLock> _parser = new pb::MessageParser<C2SCatLock>(() => new C2SCatLock());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SCatLock> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[155]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatLock() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatLock(C2SCatLock other) : this() {
      catId_ = other.catId_;
      isLock_ = other.isLock_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatLock Clone() {
      return new C2SCatLock(this);
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 1;
    private int catId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    /// <summary>Field number for the "IsLock" field.</summary>
    public const int IsLockFieldNumber = 2;
    private bool isLock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsLock {
      get { return isLock_; }
      set {
        isLock_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SCatLock);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SCatLock other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatId != other.CatId) return false;
      if (IsLock != other.IsLock) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatId != 0) hash ^= CatId.GetHashCode();
      if (IsLock != false) hash ^= IsLock.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatId);
      }
      if (IsLock != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsLock);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      if (IsLock != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SCatLock other) {
      if (other == null) {
        return;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      if (other.IsLock != false) {
        IsLock = other.IsLock;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatId = input.ReadInt32();
            break;
          }
          case 16: {
            IsLock = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SCatLock message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11108,
      }

    }
    #endregion

  }

  public sealed partial class S2CCatLockResult : pb::IMessage<S2CCatLockResult> {
    private static readonly pb::MessageParser<S2CCatLockResult> _parser = new pb::MessageParser<S2CCatLockResult>(() => new S2CCatLockResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CCatLockResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[156]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatLockResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatLockResult(S2CCatLockResult other) : this() {
      catId_ = other.catId_;
      locked_ = other.locked_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatLockResult Clone() {
      return new S2CCatLockResult(this);
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 1;
    private int catId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    /// <summary>Field number for the "Locked" field.</summary>
    public const int LockedFieldNumber = 2;
    private bool locked_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Locked {
      get { return locked_; }
      set {
        locked_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CCatLockResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CCatLockResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatId != other.CatId) return false;
      if (Locked != other.Locked) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatId != 0) hash ^= CatId.GetHashCode();
      if (Locked != false) hash ^= Locked.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatId);
      }
      if (Locked != false) {
        output.WriteRawTag(16);
        output.WriteBool(Locked);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      if (Locked != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CCatLockResult other) {
      if (other == null) {
        return;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      if (other.Locked != false) {
        Locked = other.Locked;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatId = input.ReadInt32();
            break;
          }
          case 16: {
            Locked = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CCatLockResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11109,
      }

    }
    #endregion

  }

  /// <summary>
  /// 分解猫
  /// </summary>
  public sealed partial class C2SCatDecompose : pb::IMessage<C2SCatDecompose> {
    private static readonly pb::MessageParser<C2SCatDecompose> _parser = new pb::MessageParser<C2SCatDecompose>(() => new C2SCatDecompose());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SCatDecompose> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[157]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatDecompose() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatDecompose(C2SCatDecompose other) : this() {
      catId_ = other.catId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatDecompose Clone() {
      return new C2SCatDecompose(this);
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_catId_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> catId_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CatId {
      get { return catId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SCatDecompose);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SCatDecompose other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!catId_.Equals(other.catId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= catId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      catId_.WriteTo(output, _repeated_catId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += catId_.CalculateSize(_repeated_catId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SCatDecompose other) {
      if (other == null) {
        return;
      }
      catId_.Add(other.catId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            catId_.AddEntriesFrom(input, _repeated_catId_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SCatDecompose message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11110,
      }

    }
    #endregion

  }

  public sealed partial class S2CCatDecomposeResult : pb::IMessage<S2CCatDecomposeResult> {
    private static readonly pb::MessageParser<S2CCatDecomposeResult> _parser = new pb::MessageParser<S2CCatDecomposeResult>(() => new S2CCatDecomposeResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CCatDecomposeResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[158]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatDecomposeResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatDecomposeResult(S2CCatDecomposeResult other) : this() {
      catId_ = other.catId_.Clone();
      getSoulStone_ = other.getSoulStone_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatDecomposeResult Clone() {
      return new S2CCatDecomposeResult(this);
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_catId_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> catId_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CatId {
      get { return catId_; }
    }

    /// <summary>Field number for the "GetSoulStone" field.</summary>
    public const int GetSoulStoneFieldNumber = 2;
    private int getSoulStone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GetSoulStone {
      get { return getSoulStone_; }
      set {
        getSoulStone_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CCatDecomposeResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CCatDecomposeResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!catId_.Equals(other.catId_)) return false;
      if (GetSoulStone != other.GetSoulStone) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= catId_.GetHashCode();
      if (GetSoulStone != 0) hash ^= GetSoulStone.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      catId_.WriteTo(output, _repeated_catId_codec);
      if (GetSoulStone != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GetSoulStone);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += catId_.CalculateSize(_repeated_catId_codec);
      if (GetSoulStone != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GetSoulStone);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CCatDecomposeResult other) {
      if (other == null) {
        return;
      }
      catId_.Add(other.catId_);
      if (other.GetSoulStone != 0) {
        GetSoulStone = other.GetSoulStone;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            catId_.AddEntriesFrom(input, _repeated_catId_codec);
            break;
          }
          case 16: {
            GetSoulStone = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CCatDecomposeResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11111,
      }

    }
    #endregion

  }

  /// <summary>
  /// 拉取正在打造的配方建筑
  /// </summary>
  public sealed partial class C2SGetMakingFormulaBuildings : pb::IMessage<C2SGetMakingFormulaBuildings> {
    private static readonly pb::MessageParser<C2SGetMakingFormulaBuildings> _parser = new pb::MessageParser<C2SGetMakingFormulaBuildings>(() => new C2SGetMakingFormulaBuildings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetMakingFormulaBuildings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[159]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetMakingFormulaBuildings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetMakingFormulaBuildings(C2SGetMakingFormulaBuildings other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetMakingFormulaBuildings Clone() {
      return new C2SGetMakingFormulaBuildings(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetMakingFormulaBuildings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetMakingFormulaBuildings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetMakingFormulaBuildings other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetMakingFormulaBuildings message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11200,
      }

    }
    #endregion

  }

  public sealed partial class MakingFormulaBuildingInfo : pb::IMessage<MakingFormulaBuildingInfo> {
    private static readonly pb::MessageParser<MakingFormulaBuildingInfo> _parser = new pb::MessageParser<MakingFormulaBuildingInfo>(() => new MakingFormulaBuildingInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MakingFormulaBuildingInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[160]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MakingFormulaBuildingInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MakingFormulaBuildingInfo(MakingFormulaBuildingInfo other) : this() {
      slotId_ = other.slotId_;
      formulaId_ = other.formulaId_;
      remainSeconds_ = other.remainSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MakingFormulaBuildingInfo Clone() {
      return new MakingFormulaBuildingInfo(this);
    }

    /// <summary>Field number for the "SlotId" field.</summary>
    public const int SlotIdFieldNumber = 1;
    private int slotId_;
    /// <summary>
    /// 槽位
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SlotId {
      get { return slotId_; }
      set {
        slotId_ = value;
      }
    }

    /// <summary>Field number for the "FormulaId" field.</summary>
    public const int FormulaIdFieldNumber = 2;
    private int formulaId_;
    /// <summary>
    /// 配方ID  0 表示该槽位没有正在打造的建筑
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FormulaId {
      get { return formulaId_; }
      set {
        formulaId_ = value;
      }
    }

    /// <summary>Field number for the "RemainSeconds" field.</summary>
    public const int RemainSecondsFieldNumber = 3;
    private int remainSeconds_;
    /// <summary>
    /// 剩余时间 0 表示已经打造完毕
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RemainSeconds {
      get { return remainSeconds_; }
      set {
        remainSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MakingFormulaBuildingInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MakingFormulaBuildingInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SlotId != other.SlotId) return false;
      if (FormulaId != other.FormulaId) return false;
      if (RemainSeconds != other.RemainSeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SlotId != 0) hash ^= SlotId.GetHashCode();
      if (FormulaId != 0) hash ^= FormulaId.GetHashCode();
      if (RemainSeconds != 0) hash ^= RemainSeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SlotId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SlotId);
      }
      if (FormulaId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FormulaId);
      }
      if (RemainSeconds != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RemainSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SlotId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SlotId);
      }
      if (FormulaId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FormulaId);
      }
      if (RemainSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainSeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MakingFormulaBuildingInfo other) {
      if (other == null) {
        return;
      }
      if (other.SlotId != 0) {
        SlotId = other.SlotId;
      }
      if (other.FormulaId != 0) {
        FormulaId = other.FormulaId;
      }
      if (other.RemainSeconds != 0) {
        RemainSeconds = other.RemainSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SlotId = input.ReadInt32();
            break;
          }
          case 16: {
            FormulaId = input.ReadInt32();
            break;
          }
          case 24: {
            RemainSeconds = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the MakingFormulaBuildingInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11201,
      }

    }
    #endregion

  }

  public sealed partial class S2CGetMakingFormulaBuildingsResult : pb::IMessage<S2CGetMakingFormulaBuildingsResult> {
    private static readonly pb::MessageParser<S2CGetMakingFormulaBuildingsResult> _parser = new pb::MessageParser<S2CGetMakingFormulaBuildingsResult>(() => new S2CGetMakingFormulaBuildingsResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGetMakingFormulaBuildingsResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[161]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetMakingFormulaBuildingsResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetMakingFormulaBuildingsResult(S2CGetMakingFormulaBuildingsResult other) : this() {
      buildings_ = other.buildings_.Clone();
      makedBuildings_ = other.makedBuildings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetMakingFormulaBuildingsResult Clone() {
      return new S2CGetMakingFormulaBuildingsResult(this);
    }

    /// <summary>Field number for the "Buildings" field.</summary>
    public const int BuildingsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.MakingFormulaBuildingInfo> _repeated_buildings_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.MakingFormulaBuildingInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.MakingFormulaBuildingInfo> buildings_ = new pbc::RepeatedField<global::Msg.ClientMessage.MakingFormulaBuildingInfo>();
    /// <summary>
    /// 正在打造的建筑队列
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.MakingFormulaBuildingInfo> Buildings {
      get { return buildings_; }
    }

    /// <summary>Field number for the "MakedBuildings" field.</summary>
    public const int MakedBuildingsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_makedBuildings_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> makedBuildings_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 已经打造完成的建筑队列
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> MakedBuildings {
      get { return makedBuildings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGetMakingFormulaBuildingsResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGetMakingFormulaBuildingsResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!buildings_.Equals(other.buildings_)) return false;
      if(!makedBuildings_.Equals(other.makedBuildings_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= buildings_.GetHashCode();
      hash ^= makedBuildings_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      buildings_.WriteTo(output, _repeated_buildings_codec);
      makedBuildings_.WriteTo(output, _repeated_makedBuildings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += buildings_.CalculateSize(_repeated_buildings_codec);
      size += makedBuildings_.CalculateSize(_repeated_makedBuildings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGetMakingFormulaBuildingsResult other) {
      if (other == null) {
        return;
      }
      buildings_.Add(other.buildings_);
      makedBuildings_.Add(other.makedBuildings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            buildings_.AddEntriesFrom(input, _repeated_buildings_codec);
            break;
          }
          case 18:
          case 16: {
            makedBuildings_.AddEntriesFrom(input, _repeated_makedBuildings_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGetMakingFormulaBuildingsResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11202,
      }

    }
    #endregion

  }

  /// <summary>
  /// 兑换建筑配方
  /// </summary>
  public sealed partial class C2SExchangeBuildingFormula : pb::IMessage<C2SExchangeBuildingFormula> {
    private static readonly pb::MessageParser<C2SExchangeBuildingFormula> _parser = new pb::MessageParser<C2SExchangeBuildingFormula>(() => new C2SExchangeBuildingFormula());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SExchangeBuildingFormula> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[162]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SExchangeBuildingFormula() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SExchangeBuildingFormula(C2SExchangeBuildingFormula other) : this() {
      formulaId_ = other.formulaId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SExchangeBuildingFormula Clone() {
      return new C2SExchangeBuildingFormula(this);
    }

    /// <summary>Field number for the "FormulaId" field.</summary>
    public const int FormulaIdFieldNumber = 1;
    private int formulaId_;
    /// <summary>
    /// 配方ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FormulaId {
      get { return formulaId_; }
      set {
        formulaId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SExchangeBuildingFormula);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SExchangeBuildingFormula other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FormulaId != other.FormulaId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FormulaId != 0) hash ^= FormulaId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FormulaId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FormulaId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FormulaId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FormulaId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SExchangeBuildingFormula other) {
      if (other == null) {
        return;
      }
      if (other.FormulaId != 0) {
        FormulaId = other.FormulaId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FormulaId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SExchangeBuildingFormula message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11203,
      }

    }
    #endregion

  }

  public sealed partial class S2CExchangeBuildingFormulaResult : pb::IMessage<S2CExchangeBuildingFormulaResult> {
    private static readonly pb::MessageParser<S2CExchangeBuildingFormulaResult> _parser = new pb::MessageParser<S2CExchangeBuildingFormulaResult>(() => new S2CExchangeBuildingFormulaResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CExchangeBuildingFormulaResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[163]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CExchangeBuildingFormulaResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CExchangeBuildingFormulaResult(S2CExchangeBuildingFormulaResult other) : this() {
      formulaId_ = other.formulaId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CExchangeBuildingFormulaResult Clone() {
      return new S2CExchangeBuildingFormulaResult(this);
    }

    /// <summary>Field number for the "FormulaId" field.</summary>
    public const int FormulaIdFieldNumber = 1;
    private int formulaId_;
    /// <summary>
    /// 配方ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FormulaId {
      get { return formulaId_; }
      set {
        formulaId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CExchangeBuildingFormulaResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CExchangeBuildingFormulaResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FormulaId != other.FormulaId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FormulaId != 0) hash ^= FormulaId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FormulaId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FormulaId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FormulaId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FormulaId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CExchangeBuildingFormulaResult other) {
      if (other == null) {
        return;
      }
      if (other.FormulaId != 0) {
        FormulaId = other.FormulaId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FormulaId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CExchangeBuildingFormulaResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11204,
      }

    }
    #endregion

  }

  /// <summary>
  /// 拉取配方
  /// </summary>
  public sealed partial class C2SGetFormulas : pb::IMessage<C2SGetFormulas> {
    private static readonly pb::MessageParser<C2SGetFormulas> _parser = new pb::MessageParser<C2SGetFormulas>(() => new C2SGetFormulas());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetFormulas> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[164]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetFormulas() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetFormulas(C2SGetFormulas other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetFormulas Clone() {
      return new C2SGetFormulas(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetFormulas);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetFormulas other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetFormulas other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetFormulas message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11205,
      }

    }
    #endregion

  }

  public sealed partial class S2CGetFormulasResult : pb::IMessage<S2CGetFormulasResult> {
    private static readonly pb::MessageParser<S2CGetFormulasResult> _parser = new pb::MessageParser<S2CGetFormulasResult>(() => new S2CGetFormulasResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGetFormulasResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[165]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetFormulasResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetFormulasResult(S2CGetFormulasResult other) : this() {
      formulas_ = other.formulas_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetFormulasResult Clone() {
      return new S2CGetFormulasResult(this);
    }

    /// <summary>Field number for the "Formulas" field.</summary>
    public const int FormulasFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_formulas_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> formulas_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Formulas {
      get { return formulas_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGetFormulasResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGetFormulasResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!formulas_.Equals(other.formulas_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= formulas_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      formulas_.WriteTo(output, _repeated_formulas_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += formulas_.CalculateSize(_repeated_formulas_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGetFormulasResult other) {
      if (other == null) {
        return;
      }
      formulas_.Add(other.formulas_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            formulas_.AddEntriesFrom(input, _repeated_formulas_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGetFormulasResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11206,
      }

    }
    #endregion

  }

  /// <summary>
  /// 打造配方建筑
  /// </summary>
  public sealed partial class C2SMakeFormulaBuilding : pb::IMessage<C2SMakeFormulaBuilding> {
    private static readonly pb::MessageParser<C2SMakeFormulaBuilding> _parser = new pb::MessageParser<C2SMakeFormulaBuilding>(() => new C2SMakeFormulaBuilding());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SMakeFormulaBuilding> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[166]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMakeFormulaBuilding() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMakeFormulaBuilding(C2SMakeFormulaBuilding other) : this() {
      formulaId_ = other.formulaId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMakeFormulaBuilding Clone() {
      return new C2SMakeFormulaBuilding(this);
    }

    /// <summary>Field number for the "FormulaId" field.</summary>
    public const int FormulaIdFieldNumber = 1;
    private int formulaId_;
    /// <summary>
    /// 配方ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FormulaId {
      get { return formulaId_; }
      set {
        formulaId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SMakeFormulaBuilding);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SMakeFormulaBuilding other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FormulaId != other.FormulaId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FormulaId != 0) hash ^= FormulaId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FormulaId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FormulaId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FormulaId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FormulaId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SMakeFormulaBuilding other) {
      if (other == null) {
        return;
      }
      if (other.FormulaId != 0) {
        FormulaId = other.FormulaId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FormulaId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SMakeFormulaBuilding message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11207,
      }

    }
    #endregion

  }

  public sealed partial class S2CMakeFormulaBuildingResult : pb::IMessage<S2CMakeFormulaBuildingResult> {
    private static readonly pb::MessageParser<S2CMakeFormulaBuildingResult> _parser = new pb::MessageParser<S2CMakeFormulaBuildingResult>(() => new S2CMakeFormulaBuildingResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CMakeFormulaBuildingResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[167]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMakeFormulaBuildingResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMakeFormulaBuildingResult(S2CMakeFormulaBuildingResult other) : this() {
      formulaId_ = other.formulaId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMakeFormulaBuildingResult Clone() {
      return new S2CMakeFormulaBuildingResult(this);
    }

    /// <summary>Field number for the "FormulaId" field.</summary>
    public const int FormulaIdFieldNumber = 1;
    private int formulaId_;
    /// <summary>
    /// 配方ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FormulaId {
      get { return formulaId_; }
      set {
        formulaId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CMakeFormulaBuildingResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CMakeFormulaBuildingResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FormulaId != other.FormulaId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FormulaId != 0) hash ^= FormulaId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FormulaId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FormulaId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FormulaId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FormulaId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CMakeFormulaBuildingResult other) {
      if (other == null) {
        return;
      }
      if (other.FormulaId != 0) {
        FormulaId = other.FormulaId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FormulaId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CMakeFormulaBuildingResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11208,
      }

    }
    #endregion

  }

  /// <summary>
  /// 购买建筑打造位
  /// </summary>
  public sealed partial class C2SBuyMakeBuildingSlot : pb::IMessage<C2SBuyMakeBuildingSlot> {
    private static readonly pb::MessageParser<C2SBuyMakeBuildingSlot> _parser = new pb::MessageParser<C2SBuyMakeBuildingSlot>(() => new C2SBuyMakeBuildingSlot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SBuyMakeBuildingSlot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[168]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SBuyMakeBuildingSlot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SBuyMakeBuildingSlot(C2SBuyMakeBuildingSlot other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SBuyMakeBuildingSlot Clone() {
      return new C2SBuyMakeBuildingSlot(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SBuyMakeBuildingSlot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SBuyMakeBuildingSlot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SBuyMakeBuildingSlot other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SBuyMakeBuildingSlot message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11209,
      }

    }
    #endregion

  }

  public sealed partial class S2CBuyMakeBuildingSlotResult : pb::IMessage<S2CBuyMakeBuildingSlotResult> {
    private static readonly pb::MessageParser<S2CBuyMakeBuildingSlotResult> _parser = new pb::MessageParser<S2CBuyMakeBuildingSlotResult>(() => new S2CBuyMakeBuildingSlotResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CBuyMakeBuildingSlotResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[169]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CBuyMakeBuildingSlotResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CBuyMakeBuildingSlotResult(S2CBuyMakeBuildingSlotResult other) : this() {
      slotId_ = other.slotId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CBuyMakeBuildingSlotResult Clone() {
      return new S2CBuyMakeBuildingSlotResult(this);
    }

    /// <summary>Field number for the "SlotId" field.</summary>
    public const int SlotIdFieldNumber = 1;
    private int slotId_;
    /// <summary>
    /// 返回新槽位ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SlotId {
      get { return slotId_; }
      set {
        slotId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CBuyMakeBuildingSlotResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CBuyMakeBuildingSlotResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SlotId != other.SlotId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SlotId != 0) hash ^= SlotId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SlotId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SlotId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SlotId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SlotId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CBuyMakeBuildingSlotResult other) {
      if (other == null) {
        return;
      }
      if (other.SlotId != 0) {
        SlotId = other.SlotId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SlotId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CBuyMakeBuildingSlotResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11210,
      }

    }
    #endregion

  }

  /// <summary>
  /// 加速配方建筑打造
  /// </summary>
  public sealed partial class C2SSpeedupMakeBuilding : pb::IMessage<C2SSpeedupMakeBuilding> {
    private static readonly pb::MessageParser<C2SSpeedupMakeBuilding> _parser = new pb::MessageParser<C2SSpeedupMakeBuilding>(() => new C2SSpeedupMakeBuilding());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SSpeedupMakeBuilding> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[170]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSpeedupMakeBuilding() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSpeedupMakeBuilding(C2SSpeedupMakeBuilding other) : this() {
      slotId_ = other.slotId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSpeedupMakeBuilding Clone() {
      return new C2SSpeedupMakeBuilding(this);
    }

    /// <summary>Field number for the "SlotId" field.</summary>
    public const int SlotIdFieldNumber = 1;
    private int slotId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SlotId {
      get { return slotId_; }
      set {
        slotId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SSpeedupMakeBuilding);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SSpeedupMakeBuilding other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SlotId != other.SlotId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SlotId != 0) hash ^= SlotId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SlotId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SlotId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SlotId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SlotId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SSpeedupMakeBuilding other) {
      if (other == null) {
        return;
      }
      if (other.SlotId != 0) {
        SlotId = other.SlotId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SlotId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SSpeedupMakeBuilding message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11211,
      }

    }
    #endregion

  }

  public sealed partial class S2CSpeedupMakeBuildingResult : pb::IMessage<S2CSpeedupMakeBuildingResult> {
    private static readonly pb::MessageParser<S2CSpeedupMakeBuildingResult> _parser = new pb::MessageParser<S2CSpeedupMakeBuildingResult>(() => new S2CSpeedupMakeBuildingResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSpeedupMakeBuildingResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[171]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSpeedupMakeBuildingResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSpeedupMakeBuildingResult(S2CSpeedupMakeBuildingResult other) : this() {
      slotId_ = other.slotId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSpeedupMakeBuildingResult Clone() {
      return new S2CSpeedupMakeBuildingResult(this);
    }

    /// <summary>Field number for the "SlotId" field.</summary>
    public const int SlotIdFieldNumber = 1;
    private int slotId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SlotId {
      get { return slotId_; }
      set {
        slotId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSpeedupMakeBuildingResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSpeedupMakeBuildingResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SlotId != other.SlotId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SlotId != 0) hash ^= SlotId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SlotId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SlotId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SlotId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SlotId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSpeedupMakeBuildingResult other) {
      if (other == null) {
        return;
      }
      if (other.SlotId != 0) {
        SlotId = other.SlotId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SlotId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CSpeedupMakeBuildingResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11212,
      }

    }
    #endregion

  }

  /// <summary>
  /// 收取打造完的配方建筑
  /// </summary>
  public sealed partial class C2SGetCompletedFormulaBuilding : pb::IMessage<C2SGetCompletedFormulaBuilding> {
    private static readonly pb::MessageParser<C2SGetCompletedFormulaBuilding> _parser = new pb::MessageParser<C2SGetCompletedFormulaBuilding>(() => new C2SGetCompletedFormulaBuilding());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetCompletedFormulaBuilding> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[172]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetCompletedFormulaBuilding() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetCompletedFormulaBuilding(C2SGetCompletedFormulaBuilding other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetCompletedFormulaBuilding Clone() {
      return new C2SGetCompletedFormulaBuilding(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetCompletedFormulaBuilding);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetCompletedFormulaBuilding other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetCompletedFormulaBuilding other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetCompletedFormulaBuilding message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11213,
      }

    }
    #endregion

  }

  public sealed partial class S2CGetCompletedFormulaBuildingResult : pb::IMessage<S2CGetCompletedFormulaBuildingResult> {
    private static readonly pb::MessageParser<S2CGetCompletedFormulaBuildingResult> _parser = new pb::MessageParser<S2CGetCompletedFormulaBuildingResult>(() => new S2CGetCompletedFormulaBuildingResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGetCompletedFormulaBuildingResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[173]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetCompletedFormulaBuildingResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetCompletedFormulaBuildingResult(S2CGetCompletedFormulaBuildingResult other) : this() {
      depotBuildingId_ = other.depotBuildingId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetCompletedFormulaBuildingResult Clone() {
      return new S2CGetCompletedFormulaBuildingResult(this);
    }

    /// <summary>Field number for the "DepotBuildingId" field.</summary>
    public const int DepotBuildingIdFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_depotBuildingId_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> depotBuildingId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 收取到仓库中的建筑
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> DepotBuildingId {
      get { return depotBuildingId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGetCompletedFormulaBuildingResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGetCompletedFormulaBuildingResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!depotBuildingId_.Equals(other.depotBuildingId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= depotBuildingId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      depotBuildingId_.WriteTo(output, _repeated_depotBuildingId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += depotBuildingId_.CalculateSize(_repeated_depotBuildingId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGetCompletedFormulaBuildingResult other) {
      if (other == null) {
        return;
      }
      depotBuildingId_.Add(other.depotBuildingId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            depotBuildingId_.AddEntriesFrom(input, _repeated_depotBuildingId_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGetCompletedFormulaBuildingResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11214,
      }

    }
    #endregion

  }

  /// <summary>
  /// 取消打造
  /// </summary>
  public sealed partial class C2SCancelMakingFormulaBuilding : pb::IMessage<C2SCancelMakingFormulaBuilding> {
    private static readonly pb::MessageParser<C2SCancelMakingFormulaBuilding> _parser = new pb::MessageParser<C2SCancelMakingFormulaBuilding>(() => new C2SCancelMakingFormulaBuilding());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SCancelMakingFormulaBuilding> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[174]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCancelMakingFormulaBuilding() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCancelMakingFormulaBuilding(C2SCancelMakingFormulaBuilding other) : this() {
      slotId_ = other.slotId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCancelMakingFormulaBuilding Clone() {
      return new C2SCancelMakingFormulaBuilding(this);
    }

    /// <summary>Field number for the "SlotId" field.</summary>
    public const int SlotIdFieldNumber = 1;
    private int slotId_;
    /// <summary>
    /// 槽位ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SlotId {
      get { return slotId_; }
      set {
        slotId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SCancelMakingFormulaBuilding);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SCancelMakingFormulaBuilding other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SlotId != other.SlotId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SlotId != 0) hash ^= SlotId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SlotId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SlotId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SlotId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SlotId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SCancelMakingFormulaBuilding other) {
      if (other == null) {
        return;
      }
      if (other.SlotId != 0) {
        SlotId = other.SlotId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SlotId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SCancelMakingFormulaBuilding message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11215,
      }

    }
    #endregion

  }

  public sealed partial class S2CCancelMakingFormulaBuildingResult : pb::IMessage<S2CCancelMakingFormulaBuildingResult> {
    private static readonly pb::MessageParser<S2CCancelMakingFormulaBuildingResult> _parser = new pb::MessageParser<S2CCancelMakingFormulaBuildingResult>(() => new S2CCancelMakingFormulaBuildingResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CCancelMakingFormulaBuildingResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[175]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCancelMakingFormulaBuildingResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCancelMakingFormulaBuildingResult(S2CCancelMakingFormulaBuildingResult other) : this() {
      slotId_ = other.slotId_;
      returnMaterials_ = other.returnMaterials_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCancelMakingFormulaBuildingResult Clone() {
      return new S2CCancelMakingFormulaBuildingResult(this);
    }

    /// <summary>Field number for the "SlotId" field.</summary>
    public const int SlotIdFieldNumber = 1;
    private int slotId_;
    /// <summary>
    /// 槽位
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SlotId {
      get { return slotId_; }
      set {
        slotId_ = value;
      }
    }

    /// <summary>Field number for the "ReturnMaterials" field.</summary>
    public const int ReturnMaterialsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ItemInfo> _repeated_returnMaterials_codec
        = pb::FieldCodec.ForMessage(18, global::Msg.ClientMessage.ItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> returnMaterials_ = new pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo>();
    /// <summary>
    /// 返还的材料道具
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> ReturnMaterials {
      get { return returnMaterials_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CCancelMakingFormulaBuildingResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CCancelMakingFormulaBuildingResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SlotId != other.SlotId) return false;
      if(!returnMaterials_.Equals(other.returnMaterials_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SlotId != 0) hash ^= SlotId.GetHashCode();
      hash ^= returnMaterials_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SlotId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SlotId);
      }
      returnMaterials_.WriteTo(output, _repeated_returnMaterials_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SlotId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SlotId);
      }
      size += returnMaterials_.CalculateSize(_repeated_returnMaterials_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CCancelMakingFormulaBuildingResult other) {
      if (other == null) {
        return;
      }
      if (other.SlotId != 0) {
        SlotId = other.SlotId;
      }
      returnMaterials_.Add(other.returnMaterials_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SlotId = input.ReadInt32();
            break;
          }
          case 18: {
            returnMaterials_.AddEntriesFrom(input, _repeated_returnMaterials_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CCancelMakingFormulaBuildingResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11216,
      }

    }
    #endregion

  }

  /// <summary>
  /// 拉取农作物
  /// </summary>
  public sealed partial class C2SGetCrops : pb::IMessage<C2SGetCrops> {
    private static readonly pb::MessageParser<C2SGetCrops> _parser = new pb::MessageParser<C2SGetCrops>(() => new C2SGetCrops());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetCrops> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[176]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetCrops() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetCrops(C2SGetCrops other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetCrops Clone() {
      return new C2SGetCrops(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetCrops);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetCrops other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetCrops other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetCrops message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11300,
      }

    }
    #endregion

  }

  public sealed partial class CropInfo : pb::IMessage<CropInfo> {
    private static readonly pb::MessageParser<CropInfo> _parser = new pb::MessageParser<CropInfo>(() => new CropInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CropInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[177]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CropInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CropInfo(CropInfo other) : this() {
      buildingId_ = other.buildingId_;
      cropId_ = other.cropId_;
      remainSeconds_ = other.remainSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CropInfo Clone() {
      return new CropInfo(this);
    }

    /// <summary>Field number for the "BuildingId" field.</summary>
    public const int BuildingIdFieldNumber = 1;
    private int buildingId_;
    /// <summary>
    /// 农田ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildingId {
      get { return buildingId_; }
      set {
        buildingId_ = value;
      }
    }

    /// <summary>Field number for the "CropId" field.</summary>
    public const int CropIdFieldNumber = 2;
    private int cropId_;
    /// <summary>
    /// 作物ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CropId {
      get { return cropId_; }
      set {
        cropId_ = value;
      }
    }

    /// <summary>Field number for the "RemainSeconds" field.</summary>
    public const int RemainSecondsFieldNumber = 3;
    private int remainSeconds_;
    /// <summary>
    /// 剩余成熟时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RemainSeconds {
      get { return remainSeconds_; }
      set {
        remainSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CropInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CropInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildingId != other.BuildingId) return false;
      if (CropId != other.CropId) return false;
      if (RemainSeconds != other.RemainSeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuildingId != 0) hash ^= BuildingId.GetHashCode();
      if (CropId != 0) hash ^= CropId.GetHashCode();
      if (RemainSeconds != 0) hash ^= RemainSeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuildingId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuildingId);
      }
      if (CropId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CropId);
      }
      if (RemainSeconds != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RemainSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuildingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingId);
      }
      if (CropId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CropId);
      }
      if (RemainSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainSeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CropInfo other) {
      if (other == null) {
        return;
      }
      if (other.BuildingId != 0) {
        BuildingId = other.BuildingId;
      }
      if (other.CropId != 0) {
        CropId = other.CropId;
      }
      if (other.RemainSeconds != 0) {
        RemainSeconds = other.RemainSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuildingId = input.ReadInt32();
            break;
          }
          case 16: {
            CropId = input.ReadInt32();
            break;
          }
          case 24: {
            RemainSeconds = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CropInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11301,
      }

    }
    #endregion

  }

  public sealed partial class S2CGetCropsResult : pb::IMessage<S2CGetCropsResult> {
    private static readonly pb::MessageParser<S2CGetCropsResult> _parser = new pb::MessageParser<S2CGetCropsResult>(() => new S2CGetCropsResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGetCropsResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[178]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetCropsResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetCropsResult(S2CGetCropsResult other) : this() {
      crops_ = other.crops_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetCropsResult Clone() {
      return new S2CGetCropsResult(this);
    }

    /// <summary>Field number for the "crops" field.</summary>
    public const int CropsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.CropInfo> _repeated_crops_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.CropInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.CropInfo> crops_ = new pbc::RepeatedField<global::Msg.ClientMessage.CropInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.CropInfo> Crops {
      get { return crops_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGetCropsResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGetCropsResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!crops_.Equals(other.crops_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= crops_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      crops_.WriteTo(output, _repeated_crops_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += crops_.CalculateSize(_repeated_crops_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGetCropsResult other) {
      if (other == null) {
        return;
      }
      crops_.Add(other.crops_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            crops_.AddEntriesFrom(input, _repeated_crops_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGetCropsResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11302,
      }

    }
    #endregion

  }

  /// <summary>
  /// 种植作物
  /// </summary>
  public sealed partial class C2SPlantCrop : pb::IMessage<C2SPlantCrop> {
    private static readonly pb::MessageParser<C2SPlantCrop> _parser = new pb::MessageParser<C2SPlantCrop>(() => new C2SPlantCrop());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SPlantCrop> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[179]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPlantCrop() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPlantCrop(C2SPlantCrop other) : this() {
      cropId_ = other.cropId_;
      destBuildingId_ = other.destBuildingId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPlantCrop Clone() {
      return new C2SPlantCrop(this);
    }

    /// <summary>Field number for the "CropId" field.</summary>
    public const int CropIdFieldNumber = 1;
    private int cropId_;
    /// <summary>
    /// 作物ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CropId {
      get { return cropId_; }
      set {
        cropId_ = value;
      }
    }

    /// <summary>Field number for the "DestBuildingId" field.</summary>
    public const int DestBuildingIdFieldNumber = 2;
    private int destBuildingId_;
    /// <summary>
    /// 目标农田ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DestBuildingId {
      get { return destBuildingId_; }
      set {
        destBuildingId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SPlantCrop);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SPlantCrop other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CropId != other.CropId) return false;
      if (DestBuildingId != other.DestBuildingId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CropId != 0) hash ^= CropId.GetHashCode();
      if (DestBuildingId != 0) hash ^= DestBuildingId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CropId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CropId);
      }
      if (DestBuildingId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DestBuildingId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CropId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CropId);
      }
      if (DestBuildingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DestBuildingId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SPlantCrop other) {
      if (other == null) {
        return;
      }
      if (other.CropId != 0) {
        CropId = other.CropId;
      }
      if (other.DestBuildingId != 0) {
        DestBuildingId = other.DestBuildingId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CropId = input.ReadInt32();
            break;
          }
          case 16: {
            DestBuildingId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SPlantCrop message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11303,
      }

    }
    #endregion

  }

  public sealed partial class S2CPlantCropResult : pb::IMessage<S2CPlantCropResult> {
    private static readonly pb::MessageParser<S2CPlantCropResult> _parser = new pb::MessageParser<S2CPlantCropResult>(() => new S2CPlantCropResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CPlantCropResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[180]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPlantCropResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPlantCropResult(S2CPlantCropResult other) : this() {
      cropId_ = other.cropId_;
      destBuildingId_ = other.destBuildingId_;
      remainSeconds_ = other.remainSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPlantCropResult Clone() {
      return new S2CPlantCropResult(this);
    }

    /// <summary>Field number for the "CropId" field.</summary>
    public const int CropIdFieldNumber = 1;
    private int cropId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CropId {
      get { return cropId_; }
      set {
        cropId_ = value;
      }
    }

    /// <summary>Field number for the "DestBuildingId" field.</summary>
    public const int DestBuildingIdFieldNumber = 2;
    private int destBuildingId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DestBuildingId {
      get { return destBuildingId_; }
      set {
        destBuildingId_ = value;
      }
    }

    /// <summary>Field number for the "RemainSeconds" field.</summary>
    public const int RemainSecondsFieldNumber = 3;
    private int remainSeconds_;
    /// <summary>
    /// 剩余长成时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RemainSeconds {
      get { return remainSeconds_; }
      set {
        remainSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CPlantCropResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CPlantCropResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CropId != other.CropId) return false;
      if (DestBuildingId != other.DestBuildingId) return false;
      if (RemainSeconds != other.RemainSeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CropId != 0) hash ^= CropId.GetHashCode();
      if (DestBuildingId != 0) hash ^= DestBuildingId.GetHashCode();
      if (RemainSeconds != 0) hash ^= RemainSeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CropId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CropId);
      }
      if (DestBuildingId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DestBuildingId);
      }
      if (RemainSeconds != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RemainSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CropId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CropId);
      }
      if (DestBuildingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DestBuildingId);
      }
      if (RemainSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainSeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CPlantCropResult other) {
      if (other == null) {
        return;
      }
      if (other.CropId != 0) {
        CropId = other.CropId;
      }
      if (other.DestBuildingId != 0) {
        DestBuildingId = other.DestBuildingId;
      }
      if (other.RemainSeconds != 0) {
        RemainSeconds = other.RemainSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CropId = input.ReadInt32();
            break;
          }
          case 16: {
            DestBuildingId = input.ReadInt32();
            break;
          }
          case 24: {
            RemainSeconds = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CPlantCropResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11304,
      }

    }
    #endregion

  }

  /// <summary>
  /// 加速
  /// </summary>
  public sealed partial class C2SCropSpeedup : pb::IMessage<C2SCropSpeedup> {
    private static readonly pb::MessageParser<C2SCropSpeedup> _parser = new pb::MessageParser<C2SCropSpeedup>(() => new C2SCropSpeedup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SCropSpeedup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[181]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCropSpeedup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCropSpeedup(C2SCropSpeedup other) : this() {
      farmBuildingId_ = other.farmBuildingId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCropSpeedup Clone() {
      return new C2SCropSpeedup(this);
    }

    /// <summary>Field number for the "FarmBuildingId" field.</summary>
    public const int FarmBuildingIdFieldNumber = 1;
    private int farmBuildingId_;
    /// <summary>
    /// 农田ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FarmBuildingId {
      get { return farmBuildingId_; }
      set {
        farmBuildingId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SCropSpeedup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SCropSpeedup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FarmBuildingId != other.FarmBuildingId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FarmBuildingId != 0) hash ^= FarmBuildingId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FarmBuildingId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FarmBuildingId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FarmBuildingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FarmBuildingId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SCropSpeedup other) {
      if (other == null) {
        return;
      }
      if (other.FarmBuildingId != 0) {
        FarmBuildingId = other.FarmBuildingId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FarmBuildingId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SCropSpeedup message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11305,
      }

    }
    #endregion

  }

  public sealed partial class S2CCropSpeedupResult : pb::IMessage<S2CCropSpeedupResult> {
    private static readonly pb::MessageParser<S2CCropSpeedupResult> _parser = new pb::MessageParser<S2CCropSpeedupResult>(() => new S2CCropSpeedupResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CCropSpeedupResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[182]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCropSpeedupResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCropSpeedupResult(S2CCropSpeedupResult other) : this() {
      farmBuildingId_ = other.farmBuildingId_;
      cropId_ = other.cropId_;
      costDiamond_ = other.costDiamond_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCropSpeedupResult Clone() {
      return new S2CCropSpeedupResult(this);
    }

    /// <summary>Field number for the "FarmBuildingId" field.</summary>
    public const int FarmBuildingIdFieldNumber = 1;
    private int farmBuildingId_;
    /// <summary>
    /// 农田ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FarmBuildingId {
      get { return farmBuildingId_; }
      set {
        farmBuildingId_ = value;
      }
    }

    /// <summary>Field number for the "CropId" field.</summary>
    public const int CropIdFieldNumber = 2;
    private int cropId_;
    /// <summary>
    /// 作物ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CropId {
      get { return cropId_; }
      set {
        cropId_ = value;
      }
    }

    /// <summary>Field number for the "CostDiamond" field.</summary>
    public const int CostDiamondFieldNumber = 3;
    private int costDiamond_;
    /// <summary>
    /// 花费钻石
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CostDiamond {
      get { return costDiamond_; }
      set {
        costDiamond_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CCropSpeedupResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CCropSpeedupResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FarmBuildingId != other.FarmBuildingId) return false;
      if (CropId != other.CropId) return false;
      if (CostDiamond != other.CostDiamond) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FarmBuildingId != 0) hash ^= FarmBuildingId.GetHashCode();
      if (CropId != 0) hash ^= CropId.GetHashCode();
      if (CostDiamond != 0) hash ^= CostDiamond.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FarmBuildingId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FarmBuildingId);
      }
      if (CropId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CropId);
      }
      if (CostDiamond != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CostDiamond);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FarmBuildingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FarmBuildingId);
      }
      if (CropId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CropId);
      }
      if (CostDiamond != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CostDiamond);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CCropSpeedupResult other) {
      if (other == null) {
        return;
      }
      if (other.FarmBuildingId != 0) {
        FarmBuildingId = other.FarmBuildingId;
      }
      if (other.CropId != 0) {
        CropId = other.CropId;
      }
      if (other.CostDiamond != 0) {
        CostDiamond = other.CostDiamond;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FarmBuildingId = input.ReadInt32();
            break;
          }
          case 16: {
            CropId = input.ReadInt32();
            break;
          }
          case 24: {
            CostDiamond = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CCropSpeedupResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11306,
      }

    }
    #endregion

  }

  /// <summary>
  /// 收割
  /// </summary>
  public sealed partial class C2SHarvestCrop : pb::IMessage<C2SHarvestCrop> {
    private static readonly pb::MessageParser<C2SHarvestCrop> _parser = new pb::MessageParser<C2SHarvestCrop>(() => new C2SHarvestCrop());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SHarvestCrop> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[183]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SHarvestCrop() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SHarvestCrop(C2SHarvestCrop other) : this() {
      farmBuildingId_ = other.farmBuildingId_;
      isSpeedup_ = other.isSpeedup_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SHarvestCrop Clone() {
      return new C2SHarvestCrop(this);
    }

    /// <summary>Field number for the "FarmBuildingId" field.</summary>
    public const int FarmBuildingIdFieldNumber = 1;
    private int farmBuildingId_;
    /// <summary>
    /// 农田ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FarmBuildingId {
      get { return farmBuildingId_; }
      set {
        farmBuildingId_ = value;
      }
    }

    /// <summary>Field number for the "IsSpeedup" field.</summary>
    public const int IsSpeedupFieldNumber = 2;
    private bool isSpeedup_;
    /// <summary>
    /// 是否加速提前
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSpeedup {
      get { return isSpeedup_; }
      set {
        isSpeedup_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SHarvestCrop);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SHarvestCrop other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FarmBuildingId != other.FarmBuildingId) return false;
      if (IsSpeedup != other.IsSpeedup) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FarmBuildingId != 0) hash ^= FarmBuildingId.GetHashCode();
      if (IsSpeedup != false) hash ^= IsSpeedup.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FarmBuildingId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FarmBuildingId);
      }
      if (IsSpeedup != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsSpeedup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FarmBuildingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FarmBuildingId);
      }
      if (IsSpeedup != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SHarvestCrop other) {
      if (other == null) {
        return;
      }
      if (other.FarmBuildingId != 0) {
        FarmBuildingId = other.FarmBuildingId;
      }
      if (other.IsSpeedup != false) {
        IsSpeedup = other.IsSpeedup;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FarmBuildingId = input.ReadInt32();
            break;
          }
          case 16: {
            IsSpeedup = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SHarvestCrop message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11307,
      }

    }
    #endregion

  }

  public sealed partial class S2CHarvestCropResult : pb::IMessage<S2CHarvestCropResult> {
    private static readonly pb::MessageParser<S2CHarvestCropResult> _parser = new pb::MessageParser<S2CHarvestCropResult>(() => new S2CHarvestCropResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CHarvestCropResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[184]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CHarvestCropResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CHarvestCropResult(S2CHarvestCropResult other) : this() {
      farmBuildingId_ = other.farmBuildingId_;
      cropId_ = other.cropId_;
      catFood_ = other.catFood_;
      isSpeedup_ = other.isSpeedup_;
      addExp_ = other.addExp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CHarvestCropResult Clone() {
      return new S2CHarvestCropResult(this);
    }

    /// <summary>Field number for the "FarmBuildingId" field.</summary>
    public const int FarmBuildingIdFieldNumber = 1;
    private int farmBuildingId_;
    /// <summary>
    /// 农田ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FarmBuildingId {
      get { return farmBuildingId_; }
      set {
        farmBuildingId_ = value;
      }
    }

    /// <summary>Field number for the "CropId" field.</summary>
    public const int CropIdFieldNumber = 2;
    private int cropId_;
    /// <summary>
    /// 作物ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CropId {
      get { return cropId_; }
      set {
        cropId_ = value;
      }
    }

    /// <summary>Field number for the "CatFood" field.</summary>
    public const int CatFoodFieldNumber = 3;
    private int catFood_;
    /// <summary>
    /// 获得猫粮
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatFood {
      get { return catFood_; }
      set {
        catFood_ = value;
      }
    }

    /// <summary>Field number for the "IsSpeedup" field.</summary>
    public const int IsSpeedupFieldNumber = 4;
    private bool isSpeedup_;
    /// <summary>
    /// 是否加速
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSpeedup {
      get { return isSpeedup_; }
      set {
        isSpeedup_ = value;
      }
    }

    /// <summary>Field number for the "AddExp" field.</summary>
    public const int AddExpFieldNumber = 5;
    private int addExp_;
    /// <summary>
    /// 增加的经验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AddExp {
      get { return addExp_; }
      set {
        addExp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CHarvestCropResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CHarvestCropResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FarmBuildingId != other.FarmBuildingId) return false;
      if (CropId != other.CropId) return false;
      if (CatFood != other.CatFood) return false;
      if (IsSpeedup != other.IsSpeedup) return false;
      if (AddExp != other.AddExp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FarmBuildingId != 0) hash ^= FarmBuildingId.GetHashCode();
      if (CropId != 0) hash ^= CropId.GetHashCode();
      if (CatFood != 0) hash ^= CatFood.GetHashCode();
      if (IsSpeedup != false) hash ^= IsSpeedup.GetHashCode();
      if (AddExp != 0) hash ^= AddExp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FarmBuildingId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FarmBuildingId);
      }
      if (CropId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CropId);
      }
      if (CatFood != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CatFood);
      }
      if (IsSpeedup != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsSpeedup);
      }
      if (AddExp != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(AddExp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FarmBuildingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FarmBuildingId);
      }
      if (CropId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CropId);
      }
      if (CatFood != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatFood);
      }
      if (IsSpeedup != false) {
        size += 1 + 1;
      }
      if (AddExp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AddExp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CHarvestCropResult other) {
      if (other == null) {
        return;
      }
      if (other.FarmBuildingId != 0) {
        FarmBuildingId = other.FarmBuildingId;
      }
      if (other.CropId != 0) {
        CropId = other.CropId;
      }
      if (other.CatFood != 0) {
        CatFood = other.CatFood;
      }
      if (other.IsSpeedup != false) {
        IsSpeedup = other.IsSpeedup;
      }
      if (other.AddExp != 0) {
        AddExp = other.AddExp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FarmBuildingId = input.ReadInt32();
            break;
          }
          case 16: {
            CropId = input.ReadInt32();
            break;
          }
          case 24: {
            CatFood = input.ReadInt32();
            break;
          }
          case 32: {
            IsSpeedup = input.ReadBool();
            break;
          }
          case 40: {
            AddExp = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CHarvestCropResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11308,
      }

    }
    #endregion

  }

  /// <summary>
  /// 收割多个农田
  /// </summary>
  public sealed partial class C2SHarvestCrops : pb::IMessage<C2SHarvestCrops> {
    private static readonly pb::MessageParser<C2SHarvestCrops> _parser = new pb::MessageParser<C2SHarvestCrops>(() => new C2SHarvestCrops());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SHarvestCrops> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[185]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SHarvestCrops() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SHarvestCrops(C2SHarvestCrops other) : this() {
      buildingIds_ = other.buildingIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SHarvestCrops Clone() {
      return new C2SHarvestCrops(this);
    }

    /// <summary>Field number for the "BuildingIds" field.</summary>
    public const int BuildingIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_buildingIds_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> buildingIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> BuildingIds {
      get { return buildingIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SHarvestCrops);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SHarvestCrops other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!buildingIds_.Equals(other.buildingIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= buildingIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      buildingIds_.WriteTo(output, _repeated_buildingIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += buildingIds_.CalculateSize(_repeated_buildingIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SHarvestCrops other) {
      if (other == null) {
        return;
      }
      buildingIds_.Add(other.buildingIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            buildingIds_.AddEntriesFrom(input, _repeated_buildingIds_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SHarvestCrops message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11309,
      }

    }
    #endregion

  }

  public sealed partial class S2CHarvestCropsResult : pb::IMessage<S2CHarvestCropsResult> {
    private static readonly pb::MessageParser<S2CHarvestCropsResult> _parser = new pb::MessageParser<S2CHarvestCropsResult>(() => new S2CHarvestCropsResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CHarvestCropsResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[186]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CHarvestCropsResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CHarvestCropsResult(S2CHarvestCropsResult other) : this() {
      buildingIds_ = other.buildingIds_.Clone();
      catFood_ = other.catFood_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CHarvestCropsResult Clone() {
      return new S2CHarvestCropsResult(this);
    }

    /// <summary>Field number for the "BuildingIds" field.</summary>
    public const int BuildingIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_buildingIds_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> buildingIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> BuildingIds {
      get { return buildingIds_; }
    }

    /// <summary>Field number for the "CatFood" field.</summary>
    public const int CatFoodFieldNumber = 2;
    private int catFood_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatFood {
      get { return catFood_; }
      set {
        catFood_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CHarvestCropsResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CHarvestCropsResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!buildingIds_.Equals(other.buildingIds_)) return false;
      if (CatFood != other.CatFood) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= buildingIds_.GetHashCode();
      if (CatFood != 0) hash ^= CatFood.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      buildingIds_.WriteTo(output, _repeated_buildingIds_codec);
      if (CatFood != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CatFood);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += buildingIds_.CalculateSize(_repeated_buildingIds_codec);
      if (CatFood != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatFood);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CHarvestCropsResult other) {
      if (other == null) {
        return;
      }
      buildingIds_.Add(other.buildingIds_);
      if (other.CatFood != 0) {
        CatFood = other.CatFood;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            buildingIds_.AddEntriesFrom(input, _repeated_buildingIds_codec);
            break;
          }
          case 16: {
            CatFood = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CHarvestCropsResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11310,
      }

    }
    #endregion

  }

  /// <summary>
  /// 获取当前所有的探索任务
  /// </summary>
  public sealed partial class C2SGetAllExpedition : pb::IMessage<C2SGetAllExpedition> {
    private static readonly pb::MessageParser<C2SGetAllExpedition> _parser = new pb::MessageParser<C2SGetAllExpedition>(() => new C2SGetAllExpedition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetAllExpedition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[187]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetAllExpedition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetAllExpedition(C2SGetAllExpedition other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetAllExpedition Clone() {
      return new C2SGetAllExpedition(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetAllExpedition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetAllExpedition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetAllExpedition other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetAllExpedition message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11400,
      }

    }
    #endregion

  }

  public sealed partial class ExpeditonEvent : pb::IMessage<ExpeditonEvent> {
    private static readonly pb::MessageParser<ExpeditonEvent> _parser = new pb::MessageParser<ExpeditonEvent>(() => new ExpeditonEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExpeditonEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[188]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpeditonEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpeditonEvent(ExpeditonEvent other) : this() {
      eventId_ = other.eventId_;
      sec_ = other.sec_;
      dropIdNums_ = other.dropIdNums_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpeditonEvent Clone() {
      return new ExpeditonEvent(this);
    }

    /// <summary>Field number for the "EventId" field.</summary>
    public const int EventIdFieldNumber = 1;
    private int eventId_;
    /// <summary>
    /// 事件Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventId {
      get { return eventId_; }
      set {
        eventId_ = value;
      }
    }

    /// <summary>Field number for the "Sec" field.</summary>
    public const int SecFieldNumber = 2;
    private int sec_;
    /// <summary>
    /// 触发秒数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sec {
      get { return sec_; }
      set {
        sec_ = value;
      }
    }

    /// <summary>Field number for the "DropIdNums" field.</summary>
    public const int DropIdNumsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_dropIdNums_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> dropIdNums_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 奖励信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> DropIdNums {
      get { return dropIdNums_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExpeditonEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExpeditonEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventId != other.EventId) return false;
      if (Sec != other.Sec) return false;
      if(!dropIdNums_.Equals(other.dropIdNums_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventId != 0) hash ^= EventId.GetHashCode();
      if (Sec != 0) hash ^= Sec.GetHashCode();
      hash ^= dropIdNums_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EventId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(EventId);
      }
      if (Sec != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Sec);
      }
      dropIdNums_.WriteTo(output, _repeated_dropIdNums_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventId);
      }
      if (Sec != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sec);
      }
      size += dropIdNums_.CalculateSize(_repeated_dropIdNums_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExpeditonEvent other) {
      if (other == null) {
        return;
      }
      if (other.EventId != 0) {
        EventId = other.EventId;
      }
      if (other.Sec != 0) {
        Sec = other.Sec;
      }
      dropIdNums_.Add(other.dropIdNums_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EventId = input.ReadInt32();
            break;
          }
          case 16: {
            Sec = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            dropIdNums_.AddEntriesFrom(input, _repeated_dropIdNums_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExpeditonCondition : pb::IMessage<ExpeditonCondition> {
    private static readonly pb::MessageParser<ExpeditonCondition> _parser = new pb::MessageParser<ExpeditonCondition>(() => new ExpeditonCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExpeditonCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[189]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpeditonCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpeditonCondition(ExpeditonCondition other) : this() {
      conditionType_ = other.conditionType_;
      conVals_ = other.conVals_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpeditonCondition Clone() {
      return new ExpeditonCondition(this);
    }

    /// <summary>Field number for the "ConditionType" field.</summary>
    public const int ConditionTypeFieldNumber = 1;
    private int conditionType_;
    /// <summary>
    /// 条件类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ConditionType {
      get { return conditionType_; }
      set {
        conditionType_ = value;
      }
    }

    /// <summary>Field number for the "ConVals" field.</summary>
    public const int ConValsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_conVals_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> conVals_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 条件值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ConVals {
      get { return conVals_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExpeditonCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExpeditonCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConditionType != other.ConditionType) return false;
      if(!conVals_.Equals(other.conVals_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConditionType != 0) hash ^= ConditionType.GetHashCode();
      hash ^= conVals_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConditionType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ConditionType);
      }
      conVals_.WriteTo(output, _repeated_conVals_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConditionType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConditionType);
      }
      size += conVals_.CalculateSize(_repeated_conVals_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExpeditonCondition other) {
      if (other == null) {
        return;
      }
      if (other.ConditionType != 0) {
        ConditionType = other.ConditionType;
      }
      conVals_.Add(other.conVals_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConditionType = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            conVals_.AddEntriesFrom(input, _repeated_conVals_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExpeditionItem : pb::IMessage<ExpeditionItem> {
    private static readonly pb::MessageParser<ExpeditionItem> _parser = new pb::MessageParser<ExpeditionItem>(() => new ExpeditionItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExpeditionItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[190]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpeditionItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpeditionItem(ExpeditionItem other) : this() {
      id_ = other.id_;
      taskId_ = other.taskId_;
      expeditionLeftSec_ = other.expeditionLeftSec_;
      inCatIds_ = other.inCatIds_.Clone();
      result_ = other.result_;
      taskLeftSec_ = other.taskLeftSec_;
      curState_ = other.curState_;
      events_ = other.events_.Clone();
      conditions_ = other.conditions_.Clone();
      expeditionPassSec_ = other.expeditionPassSec_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpeditionItem Clone() {
      return new ExpeditionItem(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 唯一Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "TaskId" field.</summary>
    public const int TaskIdFieldNumber = 2;
    private int taskId_;
    /// <summary>
    /// 配置Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TaskId {
      get { return taskId_; }
      set {
        taskId_ = value;
      }
    }

    /// <summary>Field number for the "ExpeditionLeftSec" field.</summary>
    public const int ExpeditionLeftSecFieldNumber = 3;
    private int expeditionLeftSec_;
    /// <summary>
    /// 探索剩余秒
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExpeditionLeftSec {
      get { return expeditionLeftSec_; }
      set {
        expeditionLeftSec_ = value;
      }
    }

    /// <summary>Field number for the "InCatIds" field.</summary>
    public const int InCatIdsFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_inCatIds_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> inCatIds_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 其中的猫Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> InCatIds {
      get { return inCatIds_; }
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 5;
    private int result_;
    /// <summary>
    /// 探索结果 1成功 0失败
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "TaskLeftSec" field.</summary>
    public const int TaskLeftSecFieldNumber = 6;
    private int taskLeftSec_;
    /// <summary>
    /// 时限剩余秒 时限任务才有
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TaskLeftSec {
      get { return taskLeftSec_; }
      set {
        taskLeftSec_ = value;
      }
    }

    /// <summary>Field number for the "CurState" field.</summary>
    public const int CurStateFieldNumber = 7;
    private int curState_;
    /// <summary>
    /// 当前任务状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurState {
      get { return curState_; }
      set {
        curState_ = value;
      }
    }

    /// <summary>Field number for the "Events" field.</summary>
    public const int EventsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ExpeditonEvent> _repeated_events_codec
        = pb::FieldCodec.ForMessage(66, global::Msg.ClientMessage.ExpeditonEvent.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ExpeditonEvent> events_ = new pbc::RepeatedField<global::Msg.ClientMessage.ExpeditonEvent>();
    /// <summary>
    /// 随机事件
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ExpeditonEvent> Events {
      get { return events_; }
    }

    /// <summary>Field number for the "Conditions" field.</summary>
    public const int ConditionsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ExpeditonCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(74, global::Msg.ClientMessage.ExpeditonCondition.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ExpeditonCondition> conditions_ = new pbc::RepeatedField<global::Msg.ClientMessage.ExpeditonCondition>();
    /// <summary>
    /// 探险条件
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ExpeditonCondition> Conditions {
      get { return conditions_; }
    }

    /// <summary>Field number for the "ExpeditionPassSec" field.</summary>
    public const int ExpeditionPassSecFieldNumber = 10;
    private int expeditionPassSec_;
    /// <summary>
    /// 探险已经过去多少秒
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExpeditionPassSec {
      get { return expeditionPassSec_; }
      set {
        expeditionPassSec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExpeditionItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExpeditionItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (TaskId != other.TaskId) return false;
      if (ExpeditionLeftSec != other.ExpeditionLeftSec) return false;
      if(!inCatIds_.Equals(other.inCatIds_)) return false;
      if (Result != other.Result) return false;
      if (TaskLeftSec != other.TaskLeftSec) return false;
      if (CurState != other.CurState) return false;
      if(!events_.Equals(other.events_)) return false;
      if(!conditions_.Equals(other.conditions_)) return false;
      if (ExpeditionPassSec != other.ExpeditionPassSec) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (TaskId != 0) hash ^= TaskId.GetHashCode();
      if (ExpeditionLeftSec != 0) hash ^= ExpeditionLeftSec.GetHashCode();
      hash ^= inCatIds_.GetHashCode();
      if (Result != 0) hash ^= Result.GetHashCode();
      if (TaskLeftSec != 0) hash ^= TaskLeftSec.GetHashCode();
      if (CurState != 0) hash ^= CurState.GetHashCode();
      hash ^= events_.GetHashCode();
      hash ^= conditions_.GetHashCode();
      if (ExpeditionPassSec != 0) hash ^= ExpeditionPassSec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (TaskId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TaskId);
      }
      if (ExpeditionLeftSec != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ExpeditionLeftSec);
      }
      inCatIds_.WriteTo(output, _repeated_inCatIds_codec);
      if (Result != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Result);
      }
      if (TaskLeftSec != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(TaskLeftSec);
      }
      if (CurState != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(CurState);
      }
      events_.WriteTo(output, _repeated_events_codec);
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (ExpeditionPassSec != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ExpeditionPassSec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (TaskId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskId);
      }
      if (ExpeditionLeftSec != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExpeditionLeftSec);
      }
      size += inCatIds_.CalculateSize(_repeated_inCatIds_codec);
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (TaskLeftSec != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskLeftSec);
      }
      if (CurState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurState);
      }
      size += events_.CalculateSize(_repeated_events_codec);
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (ExpeditionPassSec != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExpeditionPassSec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExpeditionItem other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.TaskId != 0) {
        TaskId = other.TaskId;
      }
      if (other.ExpeditionLeftSec != 0) {
        ExpeditionLeftSec = other.ExpeditionLeftSec;
      }
      inCatIds_.Add(other.inCatIds_);
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.TaskLeftSec != 0) {
        TaskLeftSec = other.TaskLeftSec;
      }
      if (other.CurState != 0) {
        CurState = other.CurState;
      }
      events_.Add(other.events_);
      conditions_.Add(other.conditions_);
      if (other.ExpeditionPassSec != 0) {
        ExpeditionPassSec = other.ExpeditionPassSec;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            TaskId = input.ReadInt32();
            break;
          }
          case 24: {
            ExpeditionLeftSec = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            inCatIds_.AddEntriesFrom(input, _repeated_inCatIds_codec);
            break;
          }
          case 40: {
            Result = input.ReadInt32();
            break;
          }
          case 48: {
            TaskLeftSec = input.ReadInt32();
            break;
          }
          case 56: {
            CurState = input.ReadInt32();
            break;
          }
          case 66: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
          case 74: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
          case 80: {
            ExpeditionPassSec = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回当前所有的探索任务
  /// </summary>
  public sealed partial class S2CRetAllExpedition : pb::IMessage<S2CRetAllExpedition> {
    private static readonly pb::MessageParser<S2CRetAllExpedition> _parser = new pb::MessageParser<S2CRetAllExpedition>(() => new S2CRetAllExpedition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CRetAllExpedition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[191]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRetAllExpedition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRetAllExpedition(S2CRetAllExpedition other) : this() {
      tasks_ = other.tasks_.Clone();
      curChgCount_ = other.curChgCount_;
      curChgCost_ = other.curChgCost_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRetAllExpedition Clone() {
      return new S2CRetAllExpedition(this);
    }

    /// <summary>Field number for the "Tasks" field.</summary>
    public const int TasksFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ExpeditionItem> _repeated_tasks_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.ExpeditionItem.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ExpeditionItem> tasks_ = new pbc::RepeatedField<global::Msg.ClientMessage.ExpeditionItem>();
    /// <summary>
    /// 当前的任务
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ExpeditionItem> Tasks {
      get { return tasks_; }
    }

    /// <summary>Field number for the "CurChgCount" field.</summary>
    public const int CurChgCountFieldNumber = 2;
    private int curChgCount_;
    /// <summary>
    /// 当前改变（删除任务）的次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurChgCount {
      get { return curChgCount_; }
      set {
        curChgCount_ = value;
      }
    }

    /// <summary>Field number for the "CurChgCost" field.</summary>
    public const int CurChgCostFieldNumber = 3;
    private int curChgCost_;
    /// <summary>
    /// 当前改变任务的消耗
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurChgCost {
      get { return curChgCost_; }
      set {
        curChgCost_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CRetAllExpedition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CRetAllExpedition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tasks_.Equals(other.tasks_)) return false;
      if (CurChgCount != other.CurChgCount) return false;
      if (CurChgCost != other.CurChgCost) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tasks_.GetHashCode();
      if (CurChgCount != 0) hash ^= CurChgCount.GetHashCode();
      if (CurChgCost != 0) hash ^= CurChgCost.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      tasks_.WriteTo(output, _repeated_tasks_codec);
      if (CurChgCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurChgCount);
      }
      if (CurChgCost != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CurChgCost);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += tasks_.CalculateSize(_repeated_tasks_codec);
      if (CurChgCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurChgCount);
      }
      if (CurChgCost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurChgCost);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CRetAllExpedition other) {
      if (other == null) {
        return;
      }
      tasks_.Add(other.tasks_);
      if (other.CurChgCount != 0) {
        CurChgCount = other.CurChgCount;
      }
      if (other.CurChgCost != 0) {
        CurChgCost = other.CurChgCost;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            tasks_.AddEntriesFrom(input, _repeated_tasks_codec);
            break;
          }
          case 16: {
            CurChgCount = input.ReadInt32();
            break;
          }
          case 24: {
            CurChgCost = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CRetAllExpedition message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11401,
      }

    }
    #endregion

  }

  /// <summary>
  /// 刷新探索任务 返回S2CRetAllExpedition
  /// </summary>
  public sealed partial class C2SChgExpedition : pb::IMessage<C2SChgExpedition> {
    private static readonly pb::MessageParser<C2SChgExpedition> _parser = new pb::MessageParser<C2SChgExpedition>(() => new C2SChgExpedition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SChgExpedition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[192]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChgExpedition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChgExpedition(C2SChgExpedition other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChgExpedition Clone() {
      return new C2SChgExpedition(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 配置Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SChgExpedition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SChgExpedition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SChgExpedition other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SChgExpedition message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11402,
      }

    }
    #endregion

  }

  /// <summary>
  /// 开始探索 
  /// </summary>
  public sealed partial class C2SStartExpedition : pb::IMessage<C2SStartExpedition> {
    private static readonly pb::MessageParser<C2SStartExpedition> _parser = new pb::MessageParser<C2SStartExpedition>(() => new C2SStartExpedition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SStartExpedition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[193]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SStartExpedition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SStartExpedition(C2SStartExpedition other) : this() {
      id_ = other.id_;
      catIds_ = other.catIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SStartExpedition Clone() {
      return new C2SStartExpedition(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 任务Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "CatIds" field.</summary>
    public const int CatIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_catIds_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> catIds_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 派遣的猫Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CatIds {
      get { return catIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SStartExpedition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SStartExpedition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!catIds_.Equals(other.catIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= catIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      catIds_.WriteTo(output, _repeated_catIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += catIds_.CalculateSize(_repeated_catIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SStartExpedition other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      catIds_.Add(other.catIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            catIds_.AddEntriesFrom(input, _repeated_catIds_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SStartExpedition message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11403,
      }

    }
    #endregion

  }

  /// <summary>
  /// 返回开始探索结果
  /// </summary>
  public sealed partial class S2CStartExpedition : pb::IMessage<S2CStartExpedition> {
    private static readonly pb::MessageParser<S2CStartExpedition> _parser = new pb::MessageParser<S2CStartExpedition>(() => new S2CStartExpedition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CStartExpedition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[194]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CStartExpedition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CStartExpedition(S2CStartExpedition other) : this() {
      id_ = other.id_;
      taskId_ = other.taskId_;
      catIds_ = other.catIds_.Clone();
      expeditionLeftSec_ = other.expeditionLeftSec_;
      result_ = other.result_;
      taskLeftSec_ = other.taskLeftSec_;
      curState_ = other.curState_;
      events_ = other.events_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CStartExpedition Clone() {
      return new S2CStartExpedition(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 唯一Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "TaskId" field.</summary>
    public const int TaskIdFieldNumber = 2;
    private int taskId_;
    /// <summary>
    /// 任务Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TaskId {
      get { return taskId_; }
      set {
        taskId_ = value;
      }
    }

    /// <summary>Field number for the "CatIds" field.</summary>
    public const int CatIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_catIds_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> catIds_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 派遣的猫的Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CatIds {
      get { return catIds_; }
    }

    /// <summary>Field number for the "ExpeditionLeftSec" field.</summary>
    public const int ExpeditionLeftSecFieldNumber = 4;
    private int expeditionLeftSec_;
    /// <summary>
    /// 探索剩余秒
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExpeditionLeftSec {
      get { return expeditionLeftSec_; }
      set {
        expeditionLeftSec_ = value;
      }
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 5;
    private int result_;
    /// <summary>
    /// 探索结果 1成功 0失败
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "TaskLeftSec" field.</summary>
    public const int TaskLeftSecFieldNumber = 6;
    private int taskLeftSec_;
    /// <summary>
    /// 时限剩余秒 时限任务才有
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TaskLeftSec {
      get { return taskLeftSec_; }
      set {
        taskLeftSec_ = value;
      }
    }

    /// <summary>Field number for the "CurState" field.</summary>
    public const int CurStateFieldNumber = 7;
    private int curState_;
    /// <summary>
    /// 当前任务状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurState {
      get { return curState_; }
      set {
        curState_ = value;
      }
    }

    /// <summary>Field number for the "Events" field.</summary>
    public const int EventsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ExpeditonEvent> _repeated_events_codec
        = pb::FieldCodec.ForMessage(66, global::Msg.ClientMessage.ExpeditonEvent.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ExpeditonEvent> events_ = new pbc::RepeatedField<global::Msg.ClientMessage.ExpeditonEvent>();
    /// <summary>
    /// 随机事件
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ExpeditonEvent> Events {
      get { return events_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CStartExpedition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CStartExpedition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (TaskId != other.TaskId) return false;
      if(!catIds_.Equals(other.catIds_)) return false;
      if (ExpeditionLeftSec != other.ExpeditionLeftSec) return false;
      if (Result != other.Result) return false;
      if (TaskLeftSec != other.TaskLeftSec) return false;
      if (CurState != other.CurState) return false;
      if(!events_.Equals(other.events_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (TaskId != 0) hash ^= TaskId.GetHashCode();
      hash ^= catIds_.GetHashCode();
      if (ExpeditionLeftSec != 0) hash ^= ExpeditionLeftSec.GetHashCode();
      if (Result != 0) hash ^= Result.GetHashCode();
      if (TaskLeftSec != 0) hash ^= TaskLeftSec.GetHashCode();
      if (CurState != 0) hash ^= CurState.GetHashCode();
      hash ^= events_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (TaskId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TaskId);
      }
      catIds_.WriteTo(output, _repeated_catIds_codec);
      if (ExpeditionLeftSec != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ExpeditionLeftSec);
      }
      if (Result != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Result);
      }
      if (TaskLeftSec != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(TaskLeftSec);
      }
      if (CurState != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(CurState);
      }
      events_.WriteTo(output, _repeated_events_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (TaskId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskId);
      }
      size += catIds_.CalculateSize(_repeated_catIds_codec);
      if (ExpeditionLeftSec != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExpeditionLeftSec);
      }
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (TaskLeftSec != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskLeftSec);
      }
      if (CurState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurState);
      }
      size += events_.CalculateSize(_repeated_events_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CStartExpedition other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.TaskId != 0) {
        TaskId = other.TaskId;
      }
      catIds_.Add(other.catIds_);
      if (other.ExpeditionLeftSec != 0) {
        ExpeditionLeftSec = other.ExpeditionLeftSec;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.TaskLeftSec != 0) {
        TaskLeftSec = other.TaskLeftSec;
      }
      if (other.CurState != 0) {
        CurState = other.CurState;
      }
      events_.Add(other.events_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            TaskId = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            catIds_.AddEntriesFrom(input, _repeated_catIds_codec);
            break;
          }
          case 32: {
            ExpeditionLeftSec = input.ReadInt32();
            break;
          }
          case 40: {
            Result = input.ReadInt32();
            break;
          }
          case 48: {
            TaskLeftSec = input.ReadInt32();
            break;
          }
          case 56: {
            CurState = input.ReadInt32();
            break;
          }
          case 66: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CStartExpedition message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11404,
      }

    }
    #endregion

  }

  /// <summary>
  /// 中断探索 返回S2CRetAllExpedition
  /// </summary>
  public sealed partial class C2SStopExpedition : pb::IMessage<C2SStopExpedition> {
    private static readonly pb::MessageParser<C2SStopExpedition> _parser = new pb::MessageParser<C2SStopExpedition>(() => new C2SStopExpedition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SStopExpedition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[195]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SStopExpedition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SStopExpedition(C2SStopExpedition other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SStopExpedition Clone() {
      return new C2SStopExpedition(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 任务Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SStopExpedition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SStopExpedition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SStopExpedition other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SStopExpedition message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11405,
      }

    }
    #endregion

  }

  /// <summary>
  /// 领取探索任务奖励
  /// </summary>
  public sealed partial class C2SGetExpeditionReward : pb::IMessage<C2SGetExpeditionReward> {
    private static readonly pb::MessageParser<C2SGetExpeditionReward> _parser = new pb::MessageParser<C2SGetExpeditionReward>(() => new C2SGetExpeditionReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetExpeditionReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[196]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetExpeditionReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetExpeditionReward(C2SGetExpeditionReward other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetExpeditionReward Clone() {
      return new C2SGetExpeditionReward(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 任务Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetExpeditionReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetExpeditionReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetExpeditionReward other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetExpeditionReward message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11406,
      }

    }
    #endregion

  }

  /// <summary>
  /// 返回领取奖励结果
  /// </summary>
  public sealed partial class S2CGetExpeditionReward : pb::IMessage<S2CGetExpeditionReward> {
    private static readonly pb::MessageParser<S2CGetExpeditionReward> _parser = new pb::MessageParser<S2CGetExpeditionReward>(() => new S2CGetExpeditionReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGetExpeditionReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[197]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetExpeditionReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetExpeditionReward(S2CGetExpeditionReward other) : this() {
      id_ = other.id_;
      rewards_ = other.rewards_.Clone();
      specials_ = other.specials_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetExpeditionReward Clone() {
      return new S2CGetExpeditionReward(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 任务Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Rewards" field.</summary>
    public const int RewardsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.IdNum> _repeated_rewards_codec
        = pb::FieldCodec.ForMessage(18, global::Msg.ClientMessage.IdNum.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.IdNum> rewards_ = new pbc::RepeatedField<global::Msg.ClientMessage.IdNum>();
    /// <summary>
    /// 奖励信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.IdNum> Rewards {
      get { return rewards_; }
    }

    /// <summary>Field number for the "Specials" field.</summary>
    public const int SpecialsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.IdNum> _repeated_specials_codec
        = pb::FieldCodec.ForMessage(26, global::Msg.ClientMessage.IdNum.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.IdNum> specials_ = new pbc::RepeatedField<global::Msg.ClientMessage.IdNum>();
    /// <summary>
    /// 特殊奖励信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.IdNum> Specials {
      get { return specials_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGetExpeditionReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGetExpeditionReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!rewards_.Equals(other.rewards_)) return false;
      if(!specials_.Equals(other.specials_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= rewards_.GetHashCode();
      hash ^= specials_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      rewards_.WriteTo(output, _repeated_rewards_codec);
      specials_.WriteTo(output, _repeated_specials_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += rewards_.CalculateSize(_repeated_rewards_codec);
      size += specials_.CalculateSize(_repeated_specials_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGetExpeditionReward other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      rewards_.Add(other.rewards_);
      specials_.Add(other.specials_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            rewards_.AddEntriesFrom(input, _repeated_rewards_codec);
            break;
          }
          case 26: {
            specials_.AddEntriesFrom(input, _repeated_specials_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGetExpeditionReward message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11407,
      }

    }
    #endregion

  }

  /// <summary>
  /// 修改探索任务结果
  /// </summary>
  public sealed partial class C2SChgExpeditionResult : pb::IMessage<C2SChgExpeditionResult> {
    private static readonly pb::MessageParser<C2SChgExpeditionResult> _parser = new pb::MessageParser<C2SChgExpeditionResult>(() => new C2SChgExpeditionResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SChgExpeditionResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[198]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChgExpeditionResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChgExpeditionResult(C2SChgExpeditionResult other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChgExpeditionResult Clone() {
      return new C2SChgExpeditionResult(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 任务Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SChgExpeditionResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SChgExpeditionResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SChgExpeditionResult other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SChgExpeditionResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11408,
      }

    }
    #endregion

  }

  /// <summary>
  /// 拉取猫舍
  /// </summary>
  public sealed partial class C2SGetCatHousesInfo : pb::IMessage<C2SGetCatHousesInfo> {
    private static readonly pb::MessageParser<C2SGetCatHousesInfo> _parser = new pb::MessageParser<C2SGetCatHousesInfo>(() => new C2SGetCatHousesInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetCatHousesInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[199]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetCatHousesInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetCatHousesInfo(C2SGetCatHousesInfo other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetCatHousesInfo Clone() {
      return new C2SGetCatHousesInfo(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetCatHousesInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetCatHousesInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetCatHousesInfo other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetCatHousesInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11500,
      }

    }
    #endregion

  }

  public sealed partial class CatHouseInfo : pb::IMessage<CatHouseInfo> {
    private static readonly pb::MessageParser<CatHouseInfo> _parser = new pb::MessageParser<CatHouseInfo>(() => new CatHouseInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CatHouseInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[200]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CatHouseInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CatHouseInfo(CatHouseInfo other) : this() {
      catHouseId_ = other.catHouseId_;
      level_ = other.level_;
      catIds_ = other.catIds_.Clone();
      gold_ = other.gold_;
      nextLevelRemainSeconds_ = other.nextLevelRemainSeconds_;
      buildingConfigId_ = other.buildingConfigId_;
      isDone_ = other.isDone_;
      produceGoldRemainSeconds_ = other.produceGoldRemainSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CatHouseInfo Clone() {
      return new CatHouseInfo(this);
    }

    /// <summary>Field number for the "CatHouseId" field.</summary>
    public const int CatHouseIdFieldNumber = 1;
    private int catHouseId_;
    /// <summary>
    /// 建筑物ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatHouseId {
      get { return catHouseId_; }
      set {
        catHouseId_ = value;
      }
    }

    /// <summary>Field number for the "Level" field.</summary>
    public const int LevelFieldNumber = 2;
    private int level_;
    /// <summary>
    /// 等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "CatIds" field.</summary>
    public const int CatIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_catIds_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> catIds_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 猫ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CatIds {
      get { return catIds_; }
    }

    /// <summary>Field number for the "Gold" field.</summary>
    public const int GoldFieldNumber = 4;
    private int gold_;
    /// <summary>
    /// 当前产出的金币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gold {
      get { return gold_; }
      set {
        gold_ = value;
      }
    }

    /// <summary>Field number for the "NextLevelRemainSeconds" field.</summary>
    public const int NextLevelRemainSecondsFieldNumber = 5;
    private int nextLevelRemainSeconds_;
    /// <summary>
    /// 下个等级剩余时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NextLevelRemainSeconds {
      get { return nextLevelRemainSeconds_; }
      set {
        nextLevelRemainSeconds_ = value;
      }
    }

    /// <summary>Field number for the "BuildingConfigId" field.</summary>
    public const int BuildingConfigIdFieldNumber = 6;
    private int buildingConfigId_;
    /// <summary>
    /// 建筑配置ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildingConfigId {
      get { return buildingConfigId_; }
      set {
        buildingConfigId_ = value;
      }
    }

    /// <summary>Field number for the "IsDone" field.</summary>
    public const int IsDoneFieldNumber = 7;
    private int isDone_;
    /// <summary>
    /// 是否可用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IsDone {
      get { return isDone_; }
      set {
        isDone_ = value;
      }
    }

    /// <summary>Field number for the "ProduceGoldRemainSeconds" field.</summary>
    public const int ProduceGoldRemainSecondsFieldNumber = 8;
    private int produceGoldRemainSeconds_;
    /// <summary>
    /// 产金剩余时间   -1表示没有产金  >=0表示产金剩余时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProduceGoldRemainSeconds {
      get { return produceGoldRemainSeconds_; }
      set {
        produceGoldRemainSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CatHouseInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CatHouseInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatHouseId != other.CatHouseId) return false;
      if (Level != other.Level) return false;
      if(!catIds_.Equals(other.catIds_)) return false;
      if (Gold != other.Gold) return false;
      if (NextLevelRemainSeconds != other.NextLevelRemainSeconds) return false;
      if (BuildingConfigId != other.BuildingConfigId) return false;
      if (IsDone != other.IsDone) return false;
      if (ProduceGoldRemainSeconds != other.ProduceGoldRemainSeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatHouseId != 0) hash ^= CatHouseId.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      hash ^= catIds_.GetHashCode();
      if (Gold != 0) hash ^= Gold.GetHashCode();
      if (NextLevelRemainSeconds != 0) hash ^= NextLevelRemainSeconds.GetHashCode();
      if (BuildingConfigId != 0) hash ^= BuildingConfigId.GetHashCode();
      if (IsDone != 0) hash ^= IsDone.GetHashCode();
      if (ProduceGoldRemainSeconds != 0) hash ^= ProduceGoldRemainSeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatHouseId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatHouseId);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Level);
      }
      catIds_.WriteTo(output, _repeated_catIds_codec);
      if (Gold != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Gold);
      }
      if (NextLevelRemainSeconds != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(NextLevelRemainSeconds);
      }
      if (BuildingConfigId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(BuildingConfigId);
      }
      if (IsDone != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(IsDone);
      }
      if (ProduceGoldRemainSeconds != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ProduceGoldRemainSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatHouseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatHouseId);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      size += catIds_.CalculateSize(_repeated_catIds_codec);
      if (Gold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gold);
      }
      if (NextLevelRemainSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NextLevelRemainSeconds);
      }
      if (BuildingConfigId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingConfigId);
      }
      if (IsDone != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsDone);
      }
      if (ProduceGoldRemainSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProduceGoldRemainSeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CatHouseInfo other) {
      if (other == null) {
        return;
      }
      if (other.CatHouseId != 0) {
        CatHouseId = other.CatHouseId;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      catIds_.Add(other.catIds_);
      if (other.Gold != 0) {
        Gold = other.Gold;
      }
      if (other.NextLevelRemainSeconds != 0) {
        NextLevelRemainSeconds = other.NextLevelRemainSeconds;
      }
      if (other.BuildingConfigId != 0) {
        BuildingConfigId = other.BuildingConfigId;
      }
      if (other.IsDone != 0) {
        IsDone = other.IsDone;
      }
      if (other.ProduceGoldRemainSeconds != 0) {
        ProduceGoldRemainSeconds = other.ProduceGoldRemainSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatHouseId = input.ReadInt32();
            break;
          }
          case 16: {
            Level = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            catIds_.AddEntriesFrom(input, _repeated_catIds_codec);
            break;
          }
          case 32: {
            Gold = input.ReadInt32();
            break;
          }
          case 40: {
            NextLevelRemainSeconds = input.ReadInt32();
            break;
          }
          case 48: {
            BuildingConfigId = input.ReadInt32();
            break;
          }
          case 56: {
            IsDone = input.ReadInt32();
            break;
          }
          case 64: {
            ProduceGoldRemainSeconds = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CGetCatHousesInfoResult : pb::IMessage<S2CGetCatHousesInfoResult> {
    private static readonly pb::MessageParser<S2CGetCatHousesInfoResult> _parser = new pb::MessageParser<S2CGetCatHousesInfoResult>(() => new S2CGetCatHousesInfoResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGetCatHousesInfoResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[201]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetCatHousesInfoResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetCatHousesInfoResult(S2CGetCatHousesInfoResult other) : this() {
      houses_ = other.houses_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetCatHousesInfoResult Clone() {
      return new S2CGetCatHousesInfoResult(this);
    }

    /// <summary>Field number for the "Houses" field.</summary>
    public const int HousesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.CatHouseInfo> _repeated_houses_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.CatHouseInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.CatHouseInfo> houses_ = new pbc::RepeatedField<global::Msg.ClientMessage.CatHouseInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.CatHouseInfo> Houses {
      get { return houses_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGetCatHousesInfoResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGetCatHousesInfoResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!houses_.Equals(other.houses_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= houses_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      houses_.WriteTo(output, _repeated_houses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += houses_.CalculateSize(_repeated_houses_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGetCatHousesInfoResult other) {
      if (other == null) {
        return;
      }
      houses_.Add(other.houses_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            houses_.AddEntriesFrom(input, _repeated_houses_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGetCatHousesInfoResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11501,
      }

    }
    #endregion

  }

  /// <summary>
  /// 获取单个猫舍
  /// </summary>
  public sealed partial class C2SGetCatHouseInfo : pb::IMessage<C2SGetCatHouseInfo> {
    private static readonly pb::MessageParser<C2SGetCatHouseInfo> _parser = new pb::MessageParser<C2SGetCatHouseInfo>(() => new C2SGetCatHouseInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetCatHouseInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[202]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetCatHouseInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetCatHouseInfo(C2SGetCatHouseInfo other) : this() {
      catHouseId_ = other.catHouseId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetCatHouseInfo Clone() {
      return new C2SGetCatHouseInfo(this);
    }

    /// <summary>Field number for the "CatHouseId" field.</summary>
    public const int CatHouseIdFieldNumber = 1;
    private int catHouseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatHouseId {
      get { return catHouseId_; }
      set {
        catHouseId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetCatHouseInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetCatHouseInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatHouseId != other.CatHouseId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatHouseId != 0) hash ^= CatHouseId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatHouseId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatHouseId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatHouseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatHouseId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetCatHouseInfo other) {
      if (other == null) {
        return;
      }
      if (other.CatHouseId != 0) {
        CatHouseId = other.CatHouseId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatHouseId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetCatHouseInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11502,
      }

    }
    #endregion

  }

  public sealed partial class S2CGetCatHouseInfoResult : pb::IMessage<S2CGetCatHouseInfoResult> {
    private static readonly pb::MessageParser<S2CGetCatHouseInfoResult> _parser = new pb::MessageParser<S2CGetCatHouseInfoResult>(() => new S2CGetCatHouseInfoResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGetCatHouseInfoResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[203]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetCatHouseInfoResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetCatHouseInfoResult(S2CGetCatHouseInfoResult other) : this() {
      house_ = other.house_ != null ? other.house_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetCatHouseInfoResult Clone() {
      return new S2CGetCatHouseInfoResult(this);
    }

    /// <summary>Field number for the "House" field.</summary>
    public const int HouseFieldNumber = 1;
    private global::Msg.ClientMessage.CatHouseInfo house_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ClientMessage.CatHouseInfo House {
      get { return house_; }
      set {
        house_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGetCatHouseInfoResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGetCatHouseInfoResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(House, other.House)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (house_ != null) hash ^= House.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (house_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(House);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (house_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(House);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGetCatHouseInfoResult other) {
      if (other == null) {
        return;
      }
      if (other.house_ != null) {
        if (house_ == null) {
          House = new global::Msg.ClientMessage.CatHouseInfo();
        }
        House.MergeFrom(other.House);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (house_ == null) {
              House = new global::Msg.ClientMessage.CatHouseInfo();
            }
            input.ReadMessage(House);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGetCatHouseInfoResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11503,
      }

    }
    #endregion

  }

  /// <summary>
  /// 猫舍加猫
  /// </summary>
  public sealed partial class C2SCatHouseAddCat : pb::IMessage<C2SCatHouseAddCat> {
    private static readonly pb::MessageParser<C2SCatHouseAddCat> _parser = new pb::MessageParser<C2SCatHouseAddCat>(() => new C2SCatHouseAddCat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SCatHouseAddCat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[204]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatHouseAddCat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatHouseAddCat(C2SCatHouseAddCat other) : this() {
      catHouseId_ = other.catHouseId_;
      catId_ = other.catId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatHouseAddCat Clone() {
      return new C2SCatHouseAddCat(this);
    }

    /// <summary>Field number for the "CatHouseId" field.</summary>
    public const int CatHouseIdFieldNumber = 1;
    private int catHouseId_;
    /// <summary>
    /// 建筑物ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatHouseId {
      get { return catHouseId_; }
      set {
        catHouseId_ = value;
      }
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 2;
    private int catId_;
    /// <summary>
    /// 猫ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SCatHouseAddCat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SCatHouseAddCat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatHouseId != other.CatHouseId) return false;
      if (CatId != other.CatId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatHouseId != 0) hash ^= CatHouseId.GetHashCode();
      if (CatId != 0) hash ^= CatId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatHouseId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatHouseId);
      }
      if (CatId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CatId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatHouseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatHouseId);
      }
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SCatHouseAddCat other) {
      if (other == null) {
        return;
      }
      if (other.CatHouseId != 0) {
        CatHouseId = other.CatHouseId;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatHouseId = input.ReadInt32();
            break;
          }
          case 16: {
            CatId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SCatHouseAddCat message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11504,
      }

    }
    #endregion

  }

  public sealed partial class S2CCatHouseAddCatResult : pb::IMessage<S2CCatHouseAddCatResult> {
    private static readonly pb::MessageParser<S2CCatHouseAddCatResult> _parser = new pb::MessageParser<S2CCatHouseAddCatResult>(() => new S2CCatHouseAddCatResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CCatHouseAddCatResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[205]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatHouseAddCatResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatHouseAddCatResult(S2CCatHouseAddCatResult other) : this() {
      catHouseId_ = other.catHouseId_;
      catId_ = other.catId_;
      gold_ = other.gold_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatHouseAddCatResult Clone() {
      return new S2CCatHouseAddCatResult(this);
    }

    /// <summary>Field number for the "CatHouseId" field.</summary>
    public const int CatHouseIdFieldNumber = 1;
    private int catHouseId_;
    /// <summary>
    /// 建筑物ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatHouseId {
      get { return catHouseId_; }
      set {
        catHouseId_ = value;
      }
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 2;
    private int catId_;
    /// <summary>
    /// 猫ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    /// <summary>Field number for the "Gold" field.</summary>
    public const int GoldFieldNumber = 3;
    private int gold_;
    /// <summary>
    /// 当前产金量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gold {
      get { return gold_; }
      set {
        gold_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CCatHouseAddCatResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CCatHouseAddCatResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatHouseId != other.CatHouseId) return false;
      if (CatId != other.CatId) return false;
      if (Gold != other.Gold) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatHouseId != 0) hash ^= CatHouseId.GetHashCode();
      if (CatId != 0) hash ^= CatId.GetHashCode();
      if (Gold != 0) hash ^= Gold.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatHouseId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatHouseId);
      }
      if (CatId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CatId);
      }
      if (Gold != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Gold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatHouseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatHouseId);
      }
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      if (Gold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gold);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CCatHouseAddCatResult other) {
      if (other == null) {
        return;
      }
      if (other.CatHouseId != 0) {
        CatHouseId = other.CatHouseId;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      if (other.Gold != 0) {
        Gold = other.Gold;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatHouseId = input.ReadInt32();
            break;
          }
          case 16: {
            CatId = input.ReadInt32();
            break;
          }
          case 24: {
            Gold = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CCatHouseAddCatResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11505,
      }

    }
    #endregion

  }

  /// <summary>
  /// 猫舍减猫
  /// </summary>
  public sealed partial class C2SCatHouseRemoveCat : pb::IMessage<C2SCatHouseRemoveCat> {
    private static readonly pb::MessageParser<C2SCatHouseRemoveCat> _parser = new pb::MessageParser<C2SCatHouseRemoveCat>(() => new C2SCatHouseRemoveCat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SCatHouseRemoveCat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[206]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatHouseRemoveCat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatHouseRemoveCat(C2SCatHouseRemoveCat other) : this() {
      catHouseId_ = other.catHouseId_;
      catId_ = other.catId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatHouseRemoveCat Clone() {
      return new C2SCatHouseRemoveCat(this);
    }

    /// <summary>Field number for the "CatHouseId" field.</summary>
    public const int CatHouseIdFieldNumber = 1;
    private int catHouseId_;
    /// <summary>
    /// 建筑物ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatHouseId {
      get { return catHouseId_; }
      set {
        catHouseId_ = value;
      }
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 2;
    private int catId_;
    /// <summary>
    /// 猫ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SCatHouseRemoveCat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SCatHouseRemoveCat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatHouseId != other.CatHouseId) return false;
      if (CatId != other.CatId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatHouseId != 0) hash ^= CatHouseId.GetHashCode();
      if (CatId != 0) hash ^= CatId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatHouseId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatHouseId);
      }
      if (CatId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CatId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatHouseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatHouseId);
      }
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SCatHouseRemoveCat other) {
      if (other == null) {
        return;
      }
      if (other.CatHouseId != 0) {
        CatHouseId = other.CatHouseId;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatHouseId = input.ReadInt32();
            break;
          }
          case 16: {
            CatId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SCatHouseRemoveCat message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11506,
      }

    }
    #endregion

  }

  public sealed partial class S2CCatHouseRemoveCatResult : pb::IMessage<S2CCatHouseRemoveCatResult> {
    private static readonly pb::MessageParser<S2CCatHouseRemoveCatResult> _parser = new pb::MessageParser<S2CCatHouseRemoveCatResult>(() => new S2CCatHouseRemoveCatResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CCatHouseRemoveCatResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[207]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatHouseRemoveCatResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatHouseRemoveCatResult(S2CCatHouseRemoveCatResult other) : this() {
      catHouseId_ = other.catHouseId_;
      catId_ = other.catId_;
      gold_ = other.gold_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatHouseRemoveCatResult Clone() {
      return new S2CCatHouseRemoveCatResult(this);
    }

    /// <summary>Field number for the "CatHouseId" field.</summary>
    public const int CatHouseIdFieldNumber = 1;
    private int catHouseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatHouseId {
      get { return catHouseId_; }
      set {
        catHouseId_ = value;
      }
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 2;
    private int catId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    /// <summary>Field number for the "Gold" field.</summary>
    public const int GoldFieldNumber = 3;
    private int gold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gold {
      get { return gold_; }
      set {
        gold_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CCatHouseRemoveCatResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CCatHouseRemoveCatResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatHouseId != other.CatHouseId) return false;
      if (CatId != other.CatId) return false;
      if (Gold != other.Gold) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatHouseId != 0) hash ^= CatHouseId.GetHashCode();
      if (CatId != 0) hash ^= CatId.GetHashCode();
      if (Gold != 0) hash ^= Gold.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatHouseId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatHouseId);
      }
      if (CatId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CatId);
      }
      if (Gold != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Gold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatHouseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatHouseId);
      }
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      if (Gold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gold);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CCatHouseRemoveCatResult other) {
      if (other == null) {
        return;
      }
      if (other.CatHouseId != 0) {
        CatHouseId = other.CatHouseId;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      if (other.Gold != 0) {
        Gold = other.Gold;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatHouseId = input.ReadInt32();
            break;
          }
          case 16: {
            CatId = input.ReadInt32();
            break;
          }
          case 24: {
            Gold = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CCatHouseRemoveCatResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11507,
      }

    }
    #endregion

  }

  /// <summary>
  /// 猫舍开始产金
  /// </summary>
  public sealed partial class C2SCatHouseProduceGold : pb::IMessage<C2SCatHouseProduceGold> {
    private static readonly pb::MessageParser<C2SCatHouseProduceGold> _parser = new pb::MessageParser<C2SCatHouseProduceGold>(() => new C2SCatHouseProduceGold());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SCatHouseProduceGold> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[208]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatHouseProduceGold() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatHouseProduceGold(C2SCatHouseProduceGold other) : this() {
      catHouseId_ = other.catHouseId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatHouseProduceGold Clone() {
      return new C2SCatHouseProduceGold(this);
    }

    /// <summary>Field number for the "CatHouseId" field.</summary>
    public const int CatHouseIdFieldNumber = 1;
    private int catHouseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatHouseId {
      get { return catHouseId_; }
      set {
        catHouseId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SCatHouseProduceGold);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SCatHouseProduceGold other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatHouseId != other.CatHouseId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatHouseId != 0) hash ^= CatHouseId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatHouseId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatHouseId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatHouseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatHouseId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SCatHouseProduceGold other) {
      if (other == null) {
        return;
      }
      if (other.CatHouseId != 0) {
        CatHouseId = other.CatHouseId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatHouseId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SCatHouseProduceGold message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11508,
      }

    }
    #endregion

  }

  public sealed partial class S2CCatHouseProduceGoldResult : pb::IMessage<S2CCatHouseProduceGoldResult> {
    private static readonly pb::MessageParser<S2CCatHouseProduceGoldResult> _parser = new pb::MessageParser<S2CCatHouseProduceGoldResult>(() => new S2CCatHouseProduceGoldResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CCatHouseProduceGoldResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[209]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatHouseProduceGoldResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatHouseProduceGoldResult(S2CCatHouseProduceGoldResult other) : this() {
      catHouseId_ = other.catHouseId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatHouseProduceGoldResult Clone() {
      return new S2CCatHouseProduceGoldResult(this);
    }

    /// <summary>Field number for the "CatHouseId" field.</summary>
    public const int CatHouseIdFieldNumber = 1;
    private int catHouseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatHouseId {
      get { return catHouseId_; }
      set {
        catHouseId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CCatHouseProduceGoldResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CCatHouseProduceGoldResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatHouseId != other.CatHouseId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatHouseId != 0) hash ^= CatHouseId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatHouseId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatHouseId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatHouseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatHouseId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CCatHouseProduceGoldResult other) {
      if (other == null) {
        return;
      }
      if (other.CatHouseId != 0) {
        CatHouseId = other.CatHouseId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatHouseId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CCatHouseProduceGoldResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11509,
      }

    }
    #endregion

  }

  /// <summary>
  /// 猫舍收金
  /// </summary>
  public sealed partial class C2SCatHouseGetGold : pb::IMessage<C2SCatHouseGetGold> {
    private static readonly pb::MessageParser<C2SCatHouseGetGold> _parser = new pb::MessageParser<C2SCatHouseGetGold>(() => new C2SCatHouseGetGold());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SCatHouseGetGold> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[210]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatHouseGetGold() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatHouseGetGold(C2SCatHouseGetGold other) : this() {
      catHouseId_ = other.catHouseId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatHouseGetGold Clone() {
      return new C2SCatHouseGetGold(this);
    }

    /// <summary>Field number for the "CatHouseId" field.</summary>
    public const int CatHouseIdFieldNumber = 1;
    private int catHouseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatHouseId {
      get { return catHouseId_; }
      set {
        catHouseId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SCatHouseGetGold);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SCatHouseGetGold other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatHouseId != other.CatHouseId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatHouseId != 0) hash ^= CatHouseId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatHouseId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatHouseId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatHouseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatHouseId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SCatHouseGetGold other) {
      if (other == null) {
        return;
      }
      if (other.CatHouseId != 0) {
        CatHouseId = other.CatHouseId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatHouseId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SCatHouseGetGold message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11510,
      }

    }
    #endregion

  }

  public sealed partial class S2CCatHouseGetGoldResult : pb::IMessage<S2CCatHouseGetGoldResult> {
    private static readonly pb::MessageParser<S2CCatHouseGetGoldResult> _parser = new pb::MessageParser<S2CCatHouseGetGoldResult>(() => new S2CCatHouseGetGoldResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CCatHouseGetGoldResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[211]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatHouseGetGoldResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatHouseGetGoldResult(S2CCatHouseGetGoldResult other) : this() {
      catHouseId_ = other.catHouseId_;
      gold_ = other.gold_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatHouseGetGoldResult Clone() {
      return new S2CCatHouseGetGoldResult(this);
    }

    /// <summary>Field number for the "CatHouseId" field.</summary>
    public const int CatHouseIdFieldNumber = 1;
    private int catHouseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatHouseId {
      get { return catHouseId_; }
      set {
        catHouseId_ = value;
      }
    }

    /// <summary>Field number for the "Gold" field.</summary>
    public const int GoldFieldNumber = 2;
    private int gold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gold {
      get { return gold_; }
      set {
        gold_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CCatHouseGetGoldResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CCatHouseGetGoldResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatHouseId != other.CatHouseId) return false;
      if (Gold != other.Gold) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatHouseId != 0) hash ^= CatHouseId.GetHashCode();
      if (Gold != 0) hash ^= Gold.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatHouseId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatHouseId);
      }
      if (Gold != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Gold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatHouseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatHouseId);
      }
      if (Gold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gold);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CCatHouseGetGoldResult other) {
      if (other == null) {
        return;
      }
      if (other.CatHouseId != 0) {
        CatHouseId = other.CatHouseId;
      }
      if (other.Gold != 0) {
        Gold = other.Gold;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatHouseId = input.ReadInt32();
            break;
          }
          case 16: {
            Gold = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CCatHouseGetGoldResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11511,
      }

    }
    #endregion

  }

  /// <summary>
  /// 多个猫舍收金
  /// </summary>
  public sealed partial class C2SCatHousesGetGold : pb::IMessage<C2SCatHousesGetGold> {
    private static readonly pb::MessageParser<C2SCatHousesGetGold> _parser = new pb::MessageParser<C2SCatHousesGetGold>(() => new C2SCatHousesGetGold());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SCatHousesGetGold> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[212]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatHousesGetGold() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatHousesGetGold(C2SCatHousesGetGold other) : this() {
      catHouseIds_ = other.catHouseIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatHousesGetGold Clone() {
      return new C2SCatHousesGetGold(this);
    }

    /// <summary>Field number for the "CatHouseIds" field.</summary>
    public const int CatHouseIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_catHouseIds_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> catHouseIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CatHouseIds {
      get { return catHouseIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SCatHousesGetGold);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SCatHousesGetGold other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!catHouseIds_.Equals(other.catHouseIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= catHouseIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      catHouseIds_.WriteTo(output, _repeated_catHouseIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += catHouseIds_.CalculateSize(_repeated_catHouseIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SCatHousesGetGold other) {
      if (other == null) {
        return;
      }
      catHouseIds_.Add(other.catHouseIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            catHouseIds_.AddEntriesFrom(input, _repeated_catHouseIds_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SCatHousesGetGold message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11512,
      }

    }
    #endregion

  }

  public sealed partial class S2CCatHousesGetGoldResult : pb::IMessage<S2CCatHousesGetGoldResult> {
    private static readonly pb::MessageParser<S2CCatHousesGetGoldResult> _parser = new pb::MessageParser<S2CCatHousesGetGoldResult>(() => new S2CCatHousesGetGoldResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CCatHousesGetGoldResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[213]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatHousesGetGoldResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatHousesGetGoldResult(S2CCatHousesGetGoldResult other) : this() {
      catHouseIds_ = other.catHouseIds_.Clone();
      gold_ = other.gold_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatHousesGetGoldResult Clone() {
      return new S2CCatHousesGetGoldResult(this);
    }

    /// <summary>Field number for the "CatHouseIds" field.</summary>
    public const int CatHouseIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_catHouseIds_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> catHouseIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CatHouseIds {
      get { return catHouseIds_; }
    }

    /// <summary>Field number for the "Gold" field.</summary>
    public const int GoldFieldNumber = 2;
    private int gold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gold {
      get { return gold_; }
      set {
        gold_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CCatHousesGetGoldResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CCatHousesGetGoldResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!catHouseIds_.Equals(other.catHouseIds_)) return false;
      if (Gold != other.Gold) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= catHouseIds_.GetHashCode();
      if (Gold != 0) hash ^= Gold.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      catHouseIds_.WriteTo(output, _repeated_catHouseIds_codec);
      if (Gold != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Gold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += catHouseIds_.CalculateSize(_repeated_catHouseIds_codec);
      if (Gold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gold);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CCatHousesGetGoldResult other) {
      if (other == null) {
        return;
      }
      catHouseIds_.Add(other.catHouseIds_);
      if (other.Gold != 0) {
        Gold = other.Gold;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            catHouseIds_.AddEntriesFrom(input, _repeated_catHouseIds_codec);
            break;
          }
          case 16: {
            Gold = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CCatHousesGetGoldResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11513,
      }

    }
    #endregion

  }

  /// <summary>
  /// 猫舍开始升级
  /// </summary>
  public sealed partial class C2SCatHouseStartLevelup : pb::IMessage<C2SCatHouseStartLevelup> {
    private static readonly pb::MessageParser<C2SCatHouseStartLevelup> _parser = new pb::MessageParser<C2SCatHouseStartLevelup>(() => new C2SCatHouseStartLevelup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SCatHouseStartLevelup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[214]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatHouseStartLevelup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatHouseStartLevelup(C2SCatHouseStartLevelup other) : this() {
      catHouseId_ = other.catHouseId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatHouseStartLevelup Clone() {
      return new C2SCatHouseStartLevelup(this);
    }

    /// <summary>Field number for the "CatHouseId" field.</summary>
    public const int CatHouseIdFieldNumber = 1;
    private int catHouseId_;
    /// <summary>
    /// 猫舍ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatHouseId {
      get { return catHouseId_; }
      set {
        catHouseId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SCatHouseStartLevelup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SCatHouseStartLevelup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatHouseId != other.CatHouseId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatHouseId != 0) hash ^= CatHouseId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatHouseId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatHouseId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatHouseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatHouseId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SCatHouseStartLevelup other) {
      if (other == null) {
        return;
      }
      if (other.CatHouseId != 0) {
        CatHouseId = other.CatHouseId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatHouseId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SCatHouseStartLevelup message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11514,
      }

    }
    #endregion

  }

  public sealed partial class S2CCatHouseStartLevelupResult : pb::IMessage<S2CCatHouseStartLevelupResult> {
    private static readonly pb::MessageParser<S2CCatHouseStartLevelupResult> _parser = new pb::MessageParser<S2CCatHouseStartLevelupResult>(() => new S2CCatHouseStartLevelupResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CCatHouseStartLevelupResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[215]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatHouseStartLevelupResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatHouseStartLevelupResult(S2CCatHouseStartLevelupResult other) : this() {
      catHouseId_ = other.catHouseId_;
      remainSeconds_ = other.remainSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatHouseStartLevelupResult Clone() {
      return new S2CCatHouseStartLevelupResult(this);
    }

    /// <summary>Field number for the "CatHouseId" field.</summary>
    public const int CatHouseIdFieldNumber = 1;
    private int catHouseId_;
    /// <summary>
    /// 猫舍ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatHouseId {
      get { return catHouseId_; }
      set {
        catHouseId_ = value;
      }
    }

    /// <summary>Field number for the "RemainSeconds" field.</summary>
    public const int RemainSecondsFieldNumber = 2;
    private int remainSeconds_;
    /// <summary>
    /// 升级需要时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RemainSeconds {
      get { return remainSeconds_; }
      set {
        remainSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CCatHouseStartLevelupResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CCatHouseStartLevelupResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatHouseId != other.CatHouseId) return false;
      if (RemainSeconds != other.RemainSeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatHouseId != 0) hash ^= CatHouseId.GetHashCode();
      if (RemainSeconds != 0) hash ^= RemainSeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatHouseId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatHouseId);
      }
      if (RemainSeconds != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RemainSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatHouseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatHouseId);
      }
      if (RemainSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainSeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CCatHouseStartLevelupResult other) {
      if (other == null) {
        return;
      }
      if (other.CatHouseId != 0) {
        CatHouseId = other.CatHouseId;
      }
      if (other.RemainSeconds != 0) {
        RemainSeconds = other.RemainSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatHouseId = input.ReadInt32();
            break;
          }
          case 16: {
            RemainSeconds = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CCatHouseStartLevelupResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11515,
      }

    }
    #endregion

  }

  /// <summary>
  /// 加速升级
  /// </summary>
  public sealed partial class C2SCatHouseSpeedLevelup : pb::IMessage<C2SCatHouseSpeedLevelup> {
    private static readonly pb::MessageParser<C2SCatHouseSpeedLevelup> _parser = new pb::MessageParser<C2SCatHouseSpeedLevelup>(() => new C2SCatHouseSpeedLevelup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SCatHouseSpeedLevelup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[216]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatHouseSpeedLevelup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatHouseSpeedLevelup(C2SCatHouseSpeedLevelup other) : this() {
      catHouseId_ = other.catHouseId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatHouseSpeedLevelup Clone() {
      return new C2SCatHouseSpeedLevelup(this);
    }

    /// <summary>Field number for the "CatHouseId" field.</summary>
    public const int CatHouseIdFieldNumber = 1;
    private int catHouseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatHouseId {
      get { return catHouseId_; }
      set {
        catHouseId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SCatHouseSpeedLevelup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SCatHouseSpeedLevelup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatHouseId != other.CatHouseId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatHouseId != 0) hash ^= CatHouseId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatHouseId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatHouseId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatHouseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatHouseId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SCatHouseSpeedLevelup other) {
      if (other == null) {
        return;
      }
      if (other.CatHouseId != 0) {
        CatHouseId = other.CatHouseId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatHouseId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SCatHouseSpeedLevelup message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11516,
      }

    }
    #endregion

  }

  public sealed partial class S2CCatHouseSpeedLevelupResult : pb::IMessage<S2CCatHouseSpeedLevelupResult> {
    private static readonly pb::MessageParser<S2CCatHouseSpeedLevelupResult> _parser = new pb::MessageParser<S2CCatHouseSpeedLevelupResult>(() => new S2CCatHouseSpeedLevelupResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CCatHouseSpeedLevelupResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[217]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatHouseSpeedLevelupResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatHouseSpeedLevelupResult(S2CCatHouseSpeedLevelupResult other) : this() {
      catHouseId_ = other.catHouseId_;
      costDiamond_ = other.costDiamond_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatHouseSpeedLevelupResult Clone() {
      return new S2CCatHouseSpeedLevelupResult(this);
    }

    /// <summary>Field number for the "CatHouseId" field.</summary>
    public const int CatHouseIdFieldNumber = 1;
    private int catHouseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatHouseId {
      get { return catHouseId_; }
      set {
        catHouseId_ = value;
      }
    }

    /// <summary>Field number for the "CostDiamond" field.</summary>
    public const int CostDiamondFieldNumber = 2;
    private int costDiamond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CostDiamond {
      get { return costDiamond_; }
      set {
        costDiamond_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CCatHouseSpeedLevelupResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CCatHouseSpeedLevelupResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatHouseId != other.CatHouseId) return false;
      if (CostDiamond != other.CostDiamond) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatHouseId != 0) hash ^= CatHouseId.GetHashCode();
      if (CostDiamond != 0) hash ^= CostDiamond.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatHouseId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatHouseId);
      }
      if (CostDiamond != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CostDiamond);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatHouseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatHouseId);
      }
      if (CostDiamond != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CostDiamond);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CCatHouseSpeedLevelupResult other) {
      if (other == null) {
        return;
      }
      if (other.CatHouseId != 0) {
        CatHouseId = other.CatHouseId;
      }
      if (other.CostDiamond != 0) {
        CostDiamond = other.CostDiamond;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatHouseId = input.ReadInt32();
            break;
          }
          case 16: {
            CostDiamond = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CCatHouseSpeedLevelupResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11517,
      }

    }
    #endregion

  }

  /// <summary>
  /// 出售猫舍
  /// </summary>
  public sealed partial class C2SSellCatHouse : pb::IMessage<C2SSellCatHouse> {
    private static readonly pb::MessageParser<C2SSellCatHouse> _parser = new pb::MessageParser<C2SSellCatHouse>(() => new C2SSellCatHouse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SSellCatHouse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[218]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSellCatHouse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSellCatHouse(C2SSellCatHouse other) : this() {
      catHouseId_ = other.catHouseId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSellCatHouse Clone() {
      return new C2SSellCatHouse(this);
    }

    /// <summary>Field number for the "CatHouseId" field.</summary>
    public const int CatHouseIdFieldNumber = 1;
    private int catHouseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatHouseId {
      get { return catHouseId_; }
      set {
        catHouseId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SSellCatHouse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SSellCatHouse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatHouseId != other.CatHouseId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatHouseId != 0) hash ^= CatHouseId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatHouseId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatHouseId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatHouseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatHouseId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SSellCatHouse other) {
      if (other == null) {
        return;
      }
      if (other.CatHouseId != 0) {
        CatHouseId = other.CatHouseId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatHouseId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SSellCatHouse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11518,
      }

    }
    #endregion

  }

  public sealed partial class S2CSellCatHouseResult : pb::IMessage<S2CSellCatHouseResult> {
    private static readonly pb::MessageParser<S2CSellCatHouseResult> _parser = new pb::MessageParser<S2CSellCatHouseResult>(() => new S2CSellCatHouseResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSellCatHouseResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[219]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSellCatHouseResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSellCatHouseResult(S2CSellCatHouseResult other) : this() {
      catHouseId_ = other.catHouseId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSellCatHouseResult Clone() {
      return new S2CSellCatHouseResult(this);
    }

    /// <summary>Field number for the "CatHouseId" field.</summary>
    public const int CatHouseIdFieldNumber = 1;
    private int catHouseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatHouseId {
      get { return catHouseId_; }
      set {
        catHouseId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSellCatHouseResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSellCatHouseResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatHouseId != other.CatHouseId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatHouseId != 0) hash ^= CatHouseId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatHouseId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatHouseId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatHouseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatHouseId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSellCatHouseResult other) {
      if (other == null) {
        return;
      }
      if (other.CatHouseId != 0) {
        CatHouseId = other.CatHouseId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatHouseId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CSellCatHouseResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11519,
      }

    }
    #endregion

  }

  /// <summary>
  /// 设置启用状态
  /// </summary>
  public sealed partial class C2SCatHouseSetDone : pb::IMessage<C2SCatHouseSetDone> {
    private static readonly pb::MessageParser<C2SCatHouseSetDone> _parser = new pb::MessageParser<C2SCatHouseSetDone>(() => new C2SCatHouseSetDone());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SCatHouseSetDone> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[220]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatHouseSetDone() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatHouseSetDone(C2SCatHouseSetDone other) : this() {
      catHouseId_ = other.catHouseId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCatHouseSetDone Clone() {
      return new C2SCatHouseSetDone(this);
    }

    /// <summary>Field number for the "CatHouseId" field.</summary>
    public const int CatHouseIdFieldNumber = 1;
    private int catHouseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatHouseId {
      get { return catHouseId_; }
      set {
        catHouseId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SCatHouseSetDone);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SCatHouseSetDone other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatHouseId != other.CatHouseId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatHouseId != 0) hash ^= CatHouseId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatHouseId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatHouseId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatHouseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatHouseId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SCatHouseSetDone other) {
      if (other == null) {
        return;
      }
      if (other.CatHouseId != 0) {
        CatHouseId = other.CatHouseId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatHouseId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SCatHouseSetDone message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11520,
      }

    }
    #endregion

  }

  public sealed partial class S2CCatHouseSetDoneResult : pb::IMessage<S2CCatHouseSetDoneResult> {
    private static readonly pb::MessageParser<S2CCatHouseSetDoneResult> _parser = new pb::MessageParser<S2CCatHouseSetDoneResult>(() => new S2CCatHouseSetDoneResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CCatHouseSetDoneResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[221]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatHouseSetDoneResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatHouseSetDoneResult(S2CCatHouseSetDoneResult other) : this() {
      catHouseId_ = other.catHouseId_;
      isDone_ = other.isDone_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCatHouseSetDoneResult Clone() {
      return new S2CCatHouseSetDoneResult(this);
    }

    /// <summary>Field number for the "CatHouseId" field.</summary>
    public const int CatHouseIdFieldNumber = 1;
    private int catHouseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatHouseId {
      get { return catHouseId_; }
      set {
        catHouseId_ = value;
      }
    }

    /// <summary>Field number for the "IsDone" field.</summary>
    public const int IsDoneFieldNumber = 2;
    private int isDone_;
    /// <summary>
    /// 是否启用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IsDone {
      get { return isDone_; }
      set {
        isDone_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CCatHouseSetDoneResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CCatHouseSetDoneResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatHouseId != other.CatHouseId) return false;
      if (IsDone != other.IsDone) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatHouseId != 0) hash ^= CatHouseId.GetHashCode();
      if (IsDone != 0) hash ^= IsDone.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatHouseId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatHouseId);
      }
      if (IsDone != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(IsDone);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatHouseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatHouseId);
      }
      if (IsDone != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsDone);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CCatHouseSetDoneResult other) {
      if (other == null) {
        return;
      }
      if (other.CatHouseId != 0) {
        CatHouseId = other.CatHouseId;
      }
      if (other.IsDone != 0) {
        IsDone = other.IsDone;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatHouseId = input.ReadInt32();
            break;
          }
          case 16: {
            IsDone = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CCatHouseSetDoneResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11521,
      }

    }
    #endregion

  }

  /// <summary>
  /// 好友信息
  /// </summary>
  public sealed partial class FriendInfo : pb::IMessage<FriendInfo> {
    private static readonly pb::MessageParser<FriendInfo> _parser = new pb::MessageParser<FriendInfo>(() => new FriendInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[222]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendInfo(FriendInfo other) : this() {
      playerId_ = other.playerId_;
      name_ = other.name_;
      head_ = other.head_;
      level_ = other.level_;
      vipLevel_ = other.vipLevel_;
      lastLogin_ = other.lastLogin_;
      friendPoints_ = other.friendPoints_;
      leftGiveSeconds_ = other.leftGiveSeconds_;
      unreadMessageNum_ = other.unreadMessageNum_;
      zan_ = other.zan_;
      isZan_ = other.isZan_;
      isOnline_ = other.isOnline_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendInfo Clone() {
      return new FriendInfo(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    /// <summary>
    /// 好友玩家Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// 好友昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Head" field.</summary>
    public const int HeadFieldNumber = 3;
    private int head_;
    /// <summary>
    /// 好友头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Head {
      get { return head_; }
      set {
        head_ = value;
      }
    }

    /// <summary>Field number for the "Level" field.</summary>
    public const int LevelFieldNumber = 4;
    private int level_;
    /// <summary>
    /// 等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "VipLevel" field.</summary>
    public const int VipLevelFieldNumber = 5;
    private int vipLevel_;
    /// <summary>
    /// vip等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VipLevel {
      get { return vipLevel_; }
      set {
        vipLevel_ = value;
      }
    }

    /// <summary>Field number for the "LastLogin" field.</summary>
    public const int LastLoginFieldNumber = 6;
    private int lastLogin_;
    /// <summary>
    /// 上次登录时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LastLogin {
      get { return lastLogin_; }
      set {
        lastLogin_ = value;
      }
    }

    /// <summary>Field number for the "FriendPoints" field.</summary>
    public const int FriendPointsFieldNumber = 7;
    private int friendPoints_;
    /// <summary>
    /// 友情点
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendPoints {
      get { return friendPoints_; }
      set {
        friendPoints_ = value;
      }
    }

    /// <summary>Field number for the "LeftGiveSeconds" field.</summary>
    public const int LeftGiveSecondsFieldNumber = 8;
    private int leftGiveSeconds_;
    /// <summary>
    /// 剩余赠送时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LeftGiveSeconds {
      get { return leftGiveSeconds_; }
      set {
        leftGiveSeconds_ = value;
      }
    }

    /// <summary>Field number for the "UnreadMessageNum" field.</summary>
    public const int UnreadMessageNumFieldNumber = 9;
    private int unreadMessageNum_;
    /// <summary>
    /// 未读消息数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnreadMessageNum {
      get { return unreadMessageNum_; }
      set {
        unreadMessageNum_ = value;
      }
    }

    /// <summary>Field number for the "Zan" field.</summary>
    public const int ZanFieldNumber = 10;
    private int zan_;
    /// <summary>
    /// 赞
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Zan {
      get { return zan_; }
      set {
        zan_ = value;
      }
    }

    /// <summary>Field number for the "IsZan" field.</summary>
    public const int IsZanFieldNumber = 11;
    private bool isZan_;
    /// <summary>
    /// 是否赞过
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsZan {
      get { return isZan_; }
      set {
        isZan_ = value;
      }
    }

    /// <summary>Field number for the "IsOnline" field.</summary>
    public const int IsOnlineFieldNumber = 12;
    private bool isOnline_;
    /// <summary>
    /// 是否在线
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOnline {
      get { return isOnline_; }
      set {
        isOnline_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (Name != other.Name) return false;
      if (Head != other.Head) return false;
      if (Level != other.Level) return false;
      if (VipLevel != other.VipLevel) return false;
      if (LastLogin != other.LastLogin) return false;
      if (FriendPoints != other.FriendPoints) return false;
      if (LeftGiveSeconds != other.LeftGiveSeconds) return false;
      if (UnreadMessageNum != other.UnreadMessageNum) return false;
      if (Zan != other.Zan) return false;
      if (IsZan != other.IsZan) return false;
      if (IsOnline != other.IsOnline) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Head != 0) hash ^= Head.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (VipLevel != 0) hash ^= VipLevel.GetHashCode();
      if (LastLogin != 0) hash ^= LastLogin.GetHashCode();
      if (FriendPoints != 0) hash ^= FriendPoints.GetHashCode();
      if (LeftGiveSeconds != 0) hash ^= LeftGiveSeconds.GetHashCode();
      if (UnreadMessageNum != 0) hash ^= UnreadMessageNum.GetHashCode();
      if (Zan != 0) hash ^= Zan.GetHashCode();
      if (IsZan != false) hash ^= IsZan.GetHashCode();
      if (IsOnline != false) hash ^= IsOnline.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Head != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Head);
      }
      if (Level != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Level);
      }
      if (VipLevel != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(VipLevel);
      }
      if (LastLogin != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(LastLogin);
      }
      if (FriendPoints != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(FriendPoints);
      }
      if (LeftGiveSeconds != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(LeftGiveSeconds);
      }
      if (UnreadMessageNum != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(UnreadMessageNum);
      }
      if (Zan != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Zan);
      }
      if (IsZan != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsZan);
      }
      if (IsOnline != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsOnline);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Head != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Head);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (VipLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VipLevel);
      }
      if (LastLogin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LastLogin);
      }
      if (FriendPoints != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendPoints);
      }
      if (LeftGiveSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeftGiveSeconds);
      }
      if (UnreadMessageNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnreadMessageNum);
      }
      if (Zan != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Zan);
      }
      if (IsZan != false) {
        size += 1 + 1;
      }
      if (IsOnline != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendInfo other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Head != 0) {
        Head = other.Head;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.VipLevel != 0) {
        VipLevel = other.VipLevel;
      }
      if (other.LastLogin != 0) {
        LastLogin = other.LastLogin;
      }
      if (other.FriendPoints != 0) {
        FriendPoints = other.FriendPoints;
      }
      if (other.LeftGiveSeconds != 0) {
        LeftGiveSeconds = other.LeftGiveSeconds;
      }
      if (other.UnreadMessageNum != 0) {
        UnreadMessageNum = other.UnreadMessageNum;
      }
      if (other.Zan != 0) {
        Zan = other.Zan;
      }
      if (other.IsZan != false) {
        IsZan = other.IsZan;
      }
      if (other.IsOnline != false) {
        IsOnline = other.IsOnline;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Head = input.ReadInt32();
            break;
          }
          case 32: {
            Level = input.ReadInt32();
            break;
          }
          case 40: {
            VipLevel = input.ReadInt32();
            break;
          }
          case 48: {
            LastLogin = input.ReadInt32();
            break;
          }
          case 56: {
            FriendPoints = input.ReadInt32();
            break;
          }
          case 64: {
            LeftGiveSeconds = input.ReadInt32();
            break;
          }
          case 72: {
            UnreadMessageNum = input.ReadInt32();
            break;
          }
          case 80: {
            Zan = input.ReadInt32();
            break;
          }
          case 88: {
            IsZan = input.ReadBool();
            break;
          }
          case 96: {
            IsOnline = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 按昵称查找好友信息
  /// </summary>
  public sealed partial class C2SFriendSearch : pb::IMessage<C2SFriendSearch> {
    private static readonly pb::MessageParser<C2SFriendSearch> _parser = new pb::MessageParser<C2SFriendSearch>(() => new C2SFriendSearch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SFriendSearch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[223]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFriendSearch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFriendSearch(C2SFriendSearch other) : this() {
      key_ = other.key_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFriendSearch Clone() {
      return new C2SFriendSearch(this);
    }

    /// <summary>Field number for the "Key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    /// <summary>
    /// 搜索内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SFriendSearch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SFriendSearch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SFriendSearch other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SFriendSearch message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11600,
      }

    }
    #endregion

  }

  /// <summary>
  /// 按ID查找好友
  /// </summary>
  public sealed partial class C2SFriendSearchById : pb::IMessage<C2SFriendSearchById> {
    private static readonly pb::MessageParser<C2SFriendSearchById> _parser = new pb::MessageParser<C2SFriendSearchById>(() => new C2SFriendSearchById());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SFriendSearchById> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[224]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFriendSearchById() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFriendSearchById(C2SFriendSearchById other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFriendSearchById Clone() {
      return new C2SFriendSearchById(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    /// <summary>
    ///玩家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SFriendSearchById);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SFriendSearchById other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SFriendSearchById other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SFriendSearchById message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11601,
      }

    }
    #endregion

  }

  /// <summary>
  /// 返回好友信息
  /// </summary>
  public sealed partial class S2CFriendSearchResult : pb::IMessage<S2CFriendSearchResult> {
    private static readonly pb::MessageParser<S2CFriendSearchResult> _parser = new pb::MessageParser<S2CFriendSearchResult>(() => new S2CFriendSearchResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CFriendSearchResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[225]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFriendSearchResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFriendSearchResult(S2CFriendSearchResult other) : this() {
      result_ = other.result_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFriendSearchResult Clone() {
      return new S2CFriendSearchResult(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.FriendInfo> _repeated_result_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.FriendInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.FriendInfo> result_ = new pbc::RepeatedField<global::Msg.ClientMessage.FriendInfo>();
    /// <summary>
    /// 搜索结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.FriendInfo> Result {
      get { return result_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CFriendSearchResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CFriendSearchResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!result_.Equals(other.result_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= result_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      result_.WriteTo(output, _repeated_result_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += result_.CalculateSize(_repeated_result_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CFriendSearchResult other) {
      if (other == null) {
        return;
      }
      result_.Add(other.result_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            result_.AddEntriesFrom(input, _repeated_result_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CFriendSearchResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11602,
      }

    }
    #endregion

  }

  /// <summary>
  /// 客户端向服务器获取好友相关列表
  /// </summary>
  public sealed partial class C2SGetFriendList : pb::IMessage<C2SGetFriendList> {
    private static readonly pb::MessageParser<C2SGetFriendList> _parser = new pb::MessageParser<C2SGetFriendList>(() => new C2SGetFriendList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetFriendList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[226]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetFriendList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetFriendList(C2SGetFriendList other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetFriendList Clone() {
      return new C2SGetFriendList(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetFriendList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetFriendList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetFriendList other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetFriendList message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11603,
      }

    }
    #endregion

  }

  /// <summary>
  /// 加好友请求信息
  /// </summary>
  public sealed partial class FriendReq : pb::IMessage<FriendReq> {
    private static readonly pb::MessageParser<FriendReq> _parser = new pb::MessageParser<FriendReq>(() => new FriendReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[227]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendReq(FriendReq other) : this() {
      playerId_ = other.playerId_;
      name_ = other.name_;
      score_ = other.score_;
      head_ = other.head_;
      level_ = other.level_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendReq Clone() {
      return new FriendReq(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    /// <summary>
    /// 好友玩家Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// 好友名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Score" field.</summary>
    public const int ScoreFieldNumber = 3;
    private int score_;
    /// <summary>
    /// 好友积分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "Head" field.</summary>
    public const int HeadFieldNumber = 4;
    private int head_;
    /// <summary>
    /// 好友头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Head {
      get { return head_; }
      set {
        head_ = value;
      }
    }

    /// <summary>Field number for the "Level" field.</summary>
    public const int LevelFieldNumber = 5;
    private int level_;
    /// <summary>
    /// 等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (Name != other.Name) return false;
      if (Score != other.Score) return false;
      if (Head != other.Head) return false;
      if (Level != other.Level) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (Head != 0) hash ^= Head.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Score != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Score);
      }
      if (Head != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Head);
      }
      if (Level != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (Head != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Head);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendReq other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.Head != 0) {
        Head = other.Head;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Score = input.ReadInt32();
            break;
          }
          case 32: {
            Head = input.ReadInt32();
            break;
          }
          case 40: {
            Level = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器向客户端返回好友列表
  /// </summary>
  public sealed partial class S2CRetFriendListResult : pb::IMessage<S2CRetFriendListResult> {
    private static readonly pb::MessageParser<S2CRetFriendListResult> _parser = new pb::MessageParser<S2CRetFriendListResult>(() => new S2CRetFriendListResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CRetFriendListResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[228]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRetFriendListResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRetFriendListResult(S2CRetFriendListResult other) : this() {
      friendList_ = other.friendList_.Clone();
      reqs_ = other.reqs_.Clone();
      leftGivePointsNum_ = other.leftGivePointsNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRetFriendListResult Clone() {
      return new S2CRetFriendListResult(this);
    }

    /// <summary>Field number for the "FriendList" field.</summary>
    public const int FriendListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.FriendInfo> _repeated_friendList_codec
        = pb::FieldCodec.ForMessage(18, global::Msg.ClientMessage.FriendInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.FriendInfo> friendList_ = new pbc::RepeatedField<global::Msg.ClientMessage.FriendInfo>();
    /// <summary>
    /// 好友列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.FriendInfo> FriendList {
      get { return friendList_; }
    }

    /// <summary>Field number for the "Reqs" field.</summary>
    public const int ReqsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.FriendReq> _repeated_reqs_codec
        = pb::FieldCodec.ForMessage(26, global::Msg.ClientMessage.FriendReq.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.FriendReq> reqs_ = new pbc::RepeatedField<global::Msg.ClientMessage.FriendReq>();
    /// <summary>
    /// 加好友请求
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.FriendReq> Reqs {
      get { return reqs_; }
    }

    /// <summary>Field number for the "LeftGivePointsNum" field.</summary>
    public const int LeftGivePointsNumFieldNumber = 4;
    private int leftGivePointsNum_;
    /// <summary>
    /// 剩余赠送次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LeftGivePointsNum {
      get { return leftGivePointsNum_; }
      set {
        leftGivePointsNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CRetFriendListResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CRetFriendListResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!friendList_.Equals(other.friendList_)) return false;
      if(!reqs_.Equals(other.reqs_)) return false;
      if (LeftGivePointsNum != other.LeftGivePointsNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= friendList_.GetHashCode();
      hash ^= reqs_.GetHashCode();
      if (LeftGivePointsNum != 0) hash ^= LeftGivePointsNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      friendList_.WriteTo(output, _repeated_friendList_codec);
      reqs_.WriteTo(output, _repeated_reqs_codec);
      if (LeftGivePointsNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LeftGivePointsNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += friendList_.CalculateSize(_repeated_friendList_codec);
      size += reqs_.CalculateSize(_repeated_reqs_codec);
      if (LeftGivePointsNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeftGivePointsNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CRetFriendListResult other) {
      if (other == null) {
        return;
      }
      friendList_.Add(other.friendList_);
      reqs_.Add(other.reqs_);
      if (other.LeftGivePointsNum != 0) {
        LeftGivePointsNum = other.LeftGivePointsNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            friendList_.AddEntriesFrom(input, _repeated_friendList_codec);
            break;
          }
          case 26: {
            reqs_.AddEntriesFrom(input, _repeated_reqs_codec);
            break;
          }
          case 32: {
            LeftGivePointsNum = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CRetFriendListResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11604,
      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器通知好友状态
  /// </summary>
  public sealed partial class S2CFriendStateNotify : pb::IMessage<S2CFriendStateNotify> {
    private static readonly pb::MessageParser<S2CFriendStateNotify> _parser = new pb::MessageParser<S2CFriendStateNotify>(() => new S2CFriendStateNotify());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CFriendStateNotify> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[229]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFriendStateNotify() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFriendStateNotify(S2CFriendStateNotify other) : this() {
      stateType_ = other.stateType_;
      info_ = other.info_ != null ? other.info_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFriendStateNotify Clone() {
      return new S2CFriendStateNotify(this);
    }

    /// <summary>Field number for the "StateType" field.</summary>
    public const int StateTypeFieldNumber = 1;
    private int stateType_;
    /// <summary>
    /// 0 更新  1 增加 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StateType {
      get { return stateType_; }
      set {
        stateType_ = value;
      }
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 2;
    private global::Msg.ClientMessage.FriendInfo info_;
    /// <summary>
    /// 好友数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ClientMessage.FriendInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CFriendStateNotify);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CFriendStateNotify other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StateType != other.StateType) return false;
      if (!object.Equals(Info, other.Info)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StateType != 0) hash ^= StateType.GetHashCode();
      if (info_ != null) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StateType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(StateType);
      }
      if (info_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StateType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StateType);
      }
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CFriendStateNotify other) {
      if (other == null) {
        return;
      }
      if (other.StateType != 0) {
        StateType = other.StateType;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::Msg.ClientMessage.FriendInfo();
        }
        Info.MergeFrom(other.Info);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StateType = input.ReadInt32();
            break;
          }
          case 18: {
            if (info_ == null) {
              Info = new global::Msg.ClientMessage.FriendInfo();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CFriendStateNotify message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11605,
      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器通知好友请求
  /// </summary>
  public sealed partial class S2CFriendReqNotify : pb::IMessage<S2CFriendReqNotify> {
    private static readonly pb::MessageParser<S2CFriendReqNotify> _parser = new pb::MessageParser<S2CFriendReqNotify>(() => new S2CFriendReqNotify());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CFriendReqNotify> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[230]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFriendReqNotify() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFriendReqNotify(S2CFriendReqNotify other) : this() {
      req_ = other.req_ != null ? other.req_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFriendReqNotify Clone() {
      return new S2CFriendReqNotify(this);
    }

    /// <summary>Field number for the "Req" field.</summary>
    public const int ReqFieldNumber = 1;
    private global::Msg.ClientMessage.FriendReq req_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ClientMessage.FriendReq Req {
      get { return req_; }
      set {
        req_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CFriendReqNotify);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CFriendReqNotify other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Req, other.Req)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (req_ != null) hash ^= Req.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (req_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Req);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (req_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Req);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CFriendReqNotify other) {
      if (other == null) {
        return;
      }
      if (other.req_ != null) {
        if (req_ == null) {
          Req = new global::Msg.ClientMessage.FriendReq();
        }
        Req.MergeFrom(other.Req);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (req_ == null) {
              Req = new global::Msg.ClientMessage.FriendReq();
            }
            input.ReadMessage(Req);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CFriendReqNotify message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11606,
      }

    }
    #endregion

  }

  /// <summary>
  /// 客户端通过Id加好友
  /// </summary>
  public sealed partial class C2SAddFriendByPId : pb::IMessage<C2SAddFriendByPId> {
    private static readonly pb::MessageParser<C2SAddFriendByPId> _parser = new pb::MessageParser<C2SAddFriendByPId>(() => new C2SAddFriendByPId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SAddFriendByPId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[231]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SAddFriendByPId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SAddFriendByPId(C2SAddFriendByPId other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SAddFriendByPId Clone() {
      return new C2SAddFriendByPId(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    /// <summary>
    /// 玩家Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SAddFriendByPId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SAddFriendByPId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SAddFriendByPId other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SAddFriendByPId message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11607,
      }

    }
    #endregion

  }

  /// <summary>
  /// 客户端通过昵称加好友
  /// </summary>
  public sealed partial class C2SAddFriendByName : pb::IMessage<C2SAddFriendByName> {
    private static readonly pb::MessageParser<C2SAddFriendByName> _parser = new pb::MessageParser<C2SAddFriendByName>(() => new C2SAddFriendByName());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SAddFriendByName> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[232]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SAddFriendByName() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SAddFriendByName(C2SAddFriendByName other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SAddFriendByName Clone() {
      return new C2SAddFriendByName(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// 玩家账号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SAddFriendByName);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SAddFriendByName other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SAddFriendByName other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SAddFriendByName message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11608,
      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器回复添加好友
  /// </summary>
  public sealed partial class S2CAddFriendResult : pb::IMessage<S2CAddFriendResult> {
    private static readonly pb::MessageParser<S2CAddFriendResult> _parser = new pb::MessageParser<S2CAddFriendResult>(() => new S2CAddFriendResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CAddFriendResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[233]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CAddFriendResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CAddFriendResult(S2CAddFriendResult other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CAddFriendResult Clone() {
      return new S2CAddFriendResult(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CAddFriendResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CAddFriendResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CAddFriendResult other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CAddFriendResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11609,
      }

    }
    #endregion

  }

  /// <summary>
  /// 客户端同意加好友
  /// </summary>
  public sealed partial class C2SAgreeFriend : pb::IMessage<C2SAgreeFriend> {
    private static readonly pb::MessageParser<C2SAgreeFriend> _parser = new pb::MessageParser<C2SAgreeFriend>(() => new C2SAgreeFriend());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SAgreeFriend> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[234]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SAgreeFriend() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SAgreeFriend(C2SAgreeFriend other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SAgreeFriend Clone() {
      return new C2SAgreeFriend(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    /// <summary>
    /// 玩家Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SAgreeFriend);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SAgreeFriend other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SAgreeFriend other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SAgreeFriend message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11610,
      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器返回增加好友回复
  /// </summary>
  public sealed partial class S2CAgreeFriendResult : pb::IMessage<S2CAgreeFriendResult> {
    private static readonly pb::MessageParser<S2CAgreeFriendResult> _parser = new pb::MessageParser<S2CAgreeFriendResult>(() => new S2CAgreeFriendResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CAgreeFriendResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[235]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CAgreeFriendResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CAgreeFriendResult(S2CAgreeFriendResult other) : this() {
      playerId_ = other.playerId_;
      name_ = other.name_;
      score_ = other.score_;
      level_ = other.level_;
      head_ = other.head_;
      vipLevel_ = other.vipLevel_;
      lastLogin_ = other.lastLogin_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CAgreeFriendResult Clone() {
      return new S2CAgreeFriendResult(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    /// <summary>
    /// 好友玩家Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// 好友名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Score" field.</summary>
    public const int ScoreFieldNumber = 3;
    private int score_;
    /// <summary>
    /// 好友积分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "Level" field.</summary>
    public const int LevelFieldNumber = 4;
    private int level_;
    /// <summary>
    /// 等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "Head" field.</summary>
    public const int HeadFieldNumber = 5;
    private int head_;
    /// <summary>
    /// 头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Head {
      get { return head_; }
      set {
        head_ = value;
      }
    }

    /// <summary>Field number for the "VipLevel" field.</summary>
    public const int VipLevelFieldNumber = 6;
    private int vipLevel_;
    /// <summary>
    /// VIP等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VipLevel {
      get { return vipLevel_; }
      set {
        vipLevel_ = value;
      }
    }

    /// <summary>Field number for the "LastLogin" field.</summary>
    public const int LastLoginFieldNumber = 7;
    private int lastLogin_;
    /// <summary>
    /// 上次登陆时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LastLogin {
      get { return lastLogin_; }
      set {
        lastLogin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CAgreeFriendResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CAgreeFriendResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (Name != other.Name) return false;
      if (Score != other.Score) return false;
      if (Level != other.Level) return false;
      if (Head != other.Head) return false;
      if (VipLevel != other.VipLevel) return false;
      if (LastLogin != other.LastLogin) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Head != 0) hash ^= Head.GetHashCode();
      if (VipLevel != 0) hash ^= VipLevel.GetHashCode();
      if (LastLogin != 0) hash ^= LastLogin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Score != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Score);
      }
      if (Level != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Level);
      }
      if (Head != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Head);
      }
      if (VipLevel != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(VipLevel);
      }
      if (LastLogin != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(LastLogin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (Head != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Head);
      }
      if (VipLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VipLevel);
      }
      if (LastLogin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LastLogin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CAgreeFriendResult other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Head != 0) {
        Head = other.Head;
      }
      if (other.VipLevel != 0) {
        VipLevel = other.VipLevel;
      }
      if (other.LastLogin != 0) {
        LastLogin = other.LastLogin;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Score = input.ReadInt32();
            break;
          }
          case 32: {
            Level = input.ReadInt32();
            break;
          }
          case 40: {
            Head = input.ReadInt32();
            break;
          }
          case 48: {
            VipLevel = input.ReadInt32();
            break;
          }
          case 56: {
            LastLogin = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CAgreeFriendResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11611,
      }

    }
    #endregion

  }

  /// <summary>
  /// 客户端拒绝加好友
  /// </summary>
  public sealed partial class C2SRefuseFriend : pb::IMessage<C2SRefuseFriend> {
    private static readonly pb::MessageParser<C2SRefuseFriend> _parser = new pb::MessageParser<C2SRefuseFriend>(() => new C2SRefuseFriend());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SRefuseFriend> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[236]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SRefuseFriend() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SRefuseFriend(C2SRefuseFriend other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SRefuseFriend Clone() {
      return new C2SRefuseFriend(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    /// <summary>
    /// 玩家Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SRefuseFriend);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SRefuseFriend other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SRefuseFriend other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SRefuseFriend message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11612,
      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器通知拒绝加好友
  /// </summary>
  public sealed partial class S2CRefuseFriendResult : pb::IMessage<S2CRefuseFriendResult> {
    private static readonly pb::MessageParser<S2CRefuseFriendResult> _parser = new pb::MessageParser<S2CRefuseFriendResult>(() => new S2CRefuseFriendResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CRefuseFriendResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[237]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRefuseFriendResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRefuseFriendResult(S2CRefuseFriendResult other) : this() {
      name_ = other.name_;
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRefuseFriendResult Clone() {
      return new S2CRefuseFriendResult(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// 对方名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private int playerId_;
    /// <summary>
    /// 对方ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CRefuseFriendResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CRefuseFriendResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CRefuseFriendResult other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CRefuseFriendResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11613,
      }

    }
    #endregion

  }

  /// <summary>
  /// 客户端删除好友
  /// </summary>
  public sealed partial class C2SRemoveFriend : pb::IMessage<C2SRemoveFriend> {
    private static readonly pb::MessageParser<C2SRemoveFriend> _parser = new pb::MessageParser<C2SRemoveFriend>(() => new C2SRemoveFriend());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SRemoveFriend> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[238]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SRemoveFriend() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SRemoveFriend(C2SRemoveFriend other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SRemoveFriend Clone() {
      return new C2SRemoveFriend(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    /// <summary>
    /// 玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SRemoveFriend);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SRemoveFriend other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SRemoveFriend other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SRemoveFriend message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11614,
      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器通知客户端删除好友
  /// </summary>
  public sealed partial class S2CRemoveFriendResult : pb::IMessage<S2CRemoveFriendResult> {
    private static readonly pb::MessageParser<S2CRemoveFriendResult> _parser = new pb::MessageParser<S2CRemoveFriendResult>(() => new S2CRemoveFriendResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CRemoveFriendResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[239]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRemoveFriendResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRemoveFriendResult(S2CRemoveFriendResult other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRemoveFriendResult Clone() {
      return new S2CRemoveFriendResult(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    /// <summary>
    /// 好友Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CRemoveFriendResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CRemoveFriendResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CRemoveFriendResult other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CRemoveFriendResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11615,
      }

    }
    #endregion

  }

  /// <summary>
  /// 赠送友情点
  /// </summary>
  public sealed partial class C2SGiveFriendPoints : pb::IMessage<C2SGiveFriendPoints> {
    private static readonly pb::MessageParser<C2SGiveFriendPoints> _parser = new pb::MessageParser<C2SGiveFriendPoints>(() => new C2SGiveFriendPoints());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGiveFriendPoints> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[240]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGiveFriendPoints() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGiveFriendPoints(C2SGiveFriendPoints other) : this() {
      friendId_ = other.friendId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGiveFriendPoints Clone() {
      return new C2SGiveFriendPoints(this);
    }

    /// <summary>Field number for the "FriendId" field.</summary>
    public const int FriendIdFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_friendId_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> friendId_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> FriendId {
      get { return friendId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGiveFriendPoints);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGiveFriendPoints other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!friendId_.Equals(other.friendId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= friendId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      friendId_.WriteTo(output, _repeated_friendId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += friendId_.CalculateSize(_repeated_friendId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGiveFriendPoints other) {
      if (other == null) {
        return;
      }
      friendId_.Add(other.friendId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            friendId_.AddEntriesFrom(input, _repeated_friendId_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGiveFriendPoints message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11616,
      }

    }
    #endregion

  }

  public sealed partial class FriendPointsResult : pb::IMessage<FriendPointsResult> {
    private static readonly pb::MessageParser<FriendPointsResult> _parser = new pb::MessageParser<FriendPointsResult>(() => new FriendPointsResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendPointsResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[241]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendPointsResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendPointsResult(FriendPointsResult other) : this() {
      friendId_ = other.friendId_;
      points_ = other.points_;
      error_ = other.error_;
      remainSeconds_ = other.remainSeconds_;
      isTodayGive_ = other.isTodayGive_;
      backPoints_ = other.backPoints_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendPointsResult Clone() {
      return new FriendPointsResult(this);
    }

    /// <summary>Field number for the "FriendId" field.</summary>
    public const int FriendIdFieldNumber = 1;
    private int friendId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendId {
      get { return friendId_; }
      set {
        friendId_ = value;
      }
    }

    /// <summary>Field number for the "Points" field.</summary>
    public const int PointsFieldNumber = 2;
    private int points_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Points {
      get { return points_; }
      set {
        points_ = value;
      }
    }

    /// <summary>Field number for the "Error" field.</summary>
    public const int ErrorFieldNumber = 3;
    private int error_;
    /// <summary>
    /// 0成功  小于0表示错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "RemainSeconds" field.</summary>
    public const int RemainSecondsFieldNumber = 4;
    private int remainSeconds_;
    /// <summary>
    /// 剩余友情点赠送时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RemainSeconds {
      get { return remainSeconds_; }
      set {
        remainSeconds_ = value;
      }
    }

    /// <summary>Field number for the "IsTodayGive" field.</summary>
    public const int IsTodayGiveFieldNumber = 5;
    private bool isTodayGive_;
    /// <summary>
    /// 今天是否已赠送
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsTodayGive {
      get { return isTodayGive_; }
      set {
        isTodayGive_ = value;
      }
    }

    /// <summary>Field number for the "BackPoints" field.</summary>
    public const int BackPointsFieldNumber = 6;
    private int backPoints_;
    /// <summary>
    /// 回馈友情点
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BackPoints {
      get { return backPoints_; }
      set {
        backPoints_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendPointsResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendPointsResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FriendId != other.FriendId) return false;
      if (Points != other.Points) return false;
      if (Error != other.Error) return false;
      if (RemainSeconds != other.RemainSeconds) return false;
      if (IsTodayGive != other.IsTodayGive) return false;
      if (BackPoints != other.BackPoints) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FriendId != 0) hash ^= FriendId.GetHashCode();
      if (Points != 0) hash ^= Points.GetHashCode();
      if (Error != 0) hash ^= Error.GetHashCode();
      if (RemainSeconds != 0) hash ^= RemainSeconds.GetHashCode();
      if (IsTodayGive != false) hash ^= IsTodayGive.GetHashCode();
      if (BackPoints != 0) hash ^= BackPoints.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FriendId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FriendId);
      }
      if (Points != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Points);
      }
      if (Error != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Error);
      }
      if (RemainSeconds != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RemainSeconds);
      }
      if (IsTodayGive != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsTodayGive);
      }
      if (BackPoints != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(BackPoints);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FriendId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendId);
      }
      if (Points != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Points);
      }
      if (Error != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Error);
      }
      if (RemainSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainSeconds);
      }
      if (IsTodayGive != false) {
        size += 1 + 1;
      }
      if (BackPoints != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BackPoints);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendPointsResult other) {
      if (other == null) {
        return;
      }
      if (other.FriendId != 0) {
        FriendId = other.FriendId;
      }
      if (other.Points != 0) {
        Points = other.Points;
      }
      if (other.Error != 0) {
        Error = other.Error;
      }
      if (other.RemainSeconds != 0) {
        RemainSeconds = other.RemainSeconds;
      }
      if (other.IsTodayGive != false) {
        IsTodayGive = other.IsTodayGive;
      }
      if (other.BackPoints != 0) {
        BackPoints = other.BackPoints;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FriendId = input.ReadInt32();
            break;
          }
          case 16: {
            Points = input.ReadInt32();
            break;
          }
          case 24: {
            Error = input.ReadInt32();
            break;
          }
          case 32: {
            RemainSeconds = input.ReadInt32();
            break;
          }
          case 40: {
            IsTodayGive = input.ReadBool();
            break;
          }
          case 48: {
            BackPoints = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CGiveFriendPointsResult : pb::IMessage<S2CGiveFriendPointsResult> {
    private static readonly pb::MessageParser<S2CGiveFriendPointsResult> _parser = new pb::MessageParser<S2CGiveFriendPointsResult>(() => new S2CGiveFriendPointsResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGiveFriendPointsResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[242]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGiveFriendPointsResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGiveFriendPointsResult(S2CGiveFriendPointsResult other) : this() {
      pointsData_ = other.pointsData_.Clone();
      leftGivePointsNum_ = other.leftGivePointsNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGiveFriendPointsResult Clone() {
      return new S2CGiveFriendPointsResult(this);
    }

    /// <summary>Field number for the "PointsData" field.</summary>
    public const int PointsDataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.FriendPointsResult> _repeated_pointsData_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.FriendPointsResult.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.FriendPointsResult> pointsData_ = new pbc::RepeatedField<global::Msg.ClientMessage.FriendPointsResult>();
    /// <summary>
    /// 赠送友情点数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.FriendPointsResult> PointsData {
      get { return pointsData_; }
    }

    /// <summary>Field number for the "LeftGivePointsNum" field.</summary>
    public const int LeftGivePointsNumFieldNumber = 2;
    private int leftGivePointsNum_;
    /// <summary>
    /// 剩余赠送次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LeftGivePointsNum {
      get { return leftGivePointsNum_; }
      set {
        leftGivePointsNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGiveFriendPointsResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGiveFriendPointsResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pointsData_.Equals(other.pointsData_)) return false;
      if (LeftGivePointsNum != other.LeftGivePointsNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pointsData_.GetHashCode();
      if (LeftGivePointsNum != 0) hash ^= LeftGivePointsNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      pointsData_.WriteTo(output, _repeated_pointsData_codec);
      if (LeftGivePointsNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(LeftGivePointsNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += pointsData_.CalculateSize(_repeated_pointsData_codec);
      if (LeftGivePointsNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeftGivePointsNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGiveFriendPointsResult other) {
      if (other == null) {
        return;
      }
      pointsData_.Add(other.pointsData_);
      if (other.LeftGivePointsNum != 0) {
        LeftGivePointsNum = other.LeftGivePointsNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            pointsData_.AddEntriesFrom(input, _repeated_pointsData_codec);
            break;
          }
          case 16: {
            LeftGivePointsNum = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGiveFriendPointsResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11617,
      }

    }
    #endregion

  }

  /// <summary>
  /// 收取友情点
  /// </summary>
  public sealed partial class C2SGetFriendPoints : pb::IMessage<C2SGetFriendPoints> {
    private static readonly pb::MessageParser<C2SGetFriendPoints> _parser = new pb::MessageParser<C2SGetFriendPoints>(() => new C2SGetFriendPoints());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetFriendPoints> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[243]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetFriendPoints() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetFriendPoints(C2SGetFriendPoints other) : this() {
      friendId_ = other.friendId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetFriendPoints Clone() {
      return new C2SGetFriendPoints(this);
    }

    /// <summary>Field number for the "FriendId" field.</summary>
    public const int FriendIdFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_friendId_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> friendId_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> FriendId {
      get { return friendId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetFriendPoints);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetFriendPoints other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!friendId_.Equals(other.friendId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= friendId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      friendId_.WriteTo(output, _repeated_friendId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += friendId_.CalculateSize(_repeated_friendId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetFriendPoints other) {
      if (other == null) {
        return;
      }
      friendId_.Add(other.friendId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            friendId_.AddEntriesFrom(input, _repeated_friendId_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetFriendPoints message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11618,
      }

    }
    #endregion

  }

  public sealed partial class FriendPoints : pb::IMessage<FriendPoints> {
    private static readonly pb::MessageParser<FriendPoints> _parser = new pb::MessageParser<FriendPoints>(() => new FriendPoints());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendPoints> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[244]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendPoints() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendPoints(FriendPoints other) : this() {
      friendId_ = other.friendId_;
      points_ = other.points_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendPoints Clone() {
      return new FriendPoints(this);
    }

    /// <summary>Field number for the "FriendId" field.</summary>
    public const int FriendIdFieldNumber = 1;
    private int friendId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendId {
      get { return friendId_; }
      set {
        friendId_ = value;
      }
    }

    /// <summary>Field number for the "Points" field.</summary>
    public const int PointsFieldNumber = 2;
    private int points_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Points {
      get { return points_; }
      set {
        points_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendPoints);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendPoints other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FriendId != other.FriendId) return false;
      if (Points != other.Points) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FriendId != 0) hash ^= FriendId.GetHashCode();
      if (Points != 0) hash ^= Points.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FriendId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FriendId);
      }
      if (Points != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Points);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FriendId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendId);
      }
      if (Points != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Points);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendPoints other) {
      if (other == null) {
        return;
      }
      if (other.FriendId != 0) {
        FriendId = other.FriendId;
      }
      if (other.Points != 0) {
        Points = other.Points;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FriendId = input.ReadInt32();
            break;
          }
          case 16: {
            Points = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CGetFriendPointsResult : pb::IMessage<S2CGetFriendPointsResult> {
    private static readonly pb::MessageParser<S2CGetFriendPointsResult> _parser = new pb::MessageParser<S2CGetFriendPointsResult>(() => new S2CGetFriendPointsResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGetFriendPointsResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[245]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetFriendPointsResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetFriendPointsResult(S2CGetFriendPointsResult other) : this() {
      pointsData_ = other.pointsData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetFriendPointsResult Clone() {
      return new S2CGetFriendPointsResult(this);
    }

    /// <summary>Field number for the "PointsData" field.</summary>
    public const int PointsDataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.FriendPoints> _repeated_pointsData_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.FriendPoints.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.FriendPoints> pointsData_ = new pbc::RepeatedField<global::Msg.ClientMessage.FriendPoints>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.FriendPoints> PointsData {
      get { return pointsData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGetFriendPointsResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGetFriendPointsResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pointsData_.Equals(other.pointsData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pointsData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      pointsData_.WriteTo(output, _repeated_pointsData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += pointsData_.CalculateSize(_repeated_pointsData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGetFriendPointsResult other) {
      if (other == null) {
        return;
      }
      pointsData_.Add(other.pointsData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            pointsData_.AddEntriesFrom(input, _repeated_pointsData_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGetFriendPointsResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11619,
      }

    }
    #endregion

  }

  /// <summary>
  /// 客户端给好友发送消息
  /// </summary>
  public sealed partial class C2SFriendChat : pb::IMessage<C2SFriendChat> {
    private static readonly pb::MessageParser<C2SFriendChat> _parser = new pb::MessageParser<C2SFriendChat>(() => new C2SFriendChat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SFriendChat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[246]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFriendChat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFriendChat(C2SFriendChat other) : this() {
      playerId_ = other.playerId_;
      content_ = other.content_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFriendChat Clone() {
      return new C2SFriendChat(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    /// <summary>
    /// 玩家Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "Content" field.</summary>
    public const int ContentFieldNumber = 2;
    private pb::ByteString content_ = pb::ByteString.Empty;
    /// <summary>
    /// 聊天内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SFriendChat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SFriendChat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (Content != other.Content) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SFriendChat other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            Content = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SFriendChat message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11700,
      }

    }
    #endregion

  }

  public sealed partial class S2CFriendChatResult : pb::IMessage<S2CFriendChatResult> {
    private static readonly pb::MessageParser<S2CFriendChatResult> _parser = new pb::MessageParser<S2CFriendChatResult>(() => new S2CFriendChatResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CFriendChatResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[247]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFriendChatResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFriendChatResult(S2CFriendChatResult other) : this() {
      playerId_ = other.playerId_;
      content_ = other.content_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFriendChatResult Clone() {
      return new S2CFriendChatResult(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    /// <summary>
    /// 玩家Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "Content" field.</summary>
    public const int ContentFieldNumber = 2;
    private pb::ByteString content_ = pb::ByteString.Empty;
    /// <summary>
    /// 聊天内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CFriendChatResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CFriendChatResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (Content != other.Content) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CFriendChatResult other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            Content = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CFriendChatResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11701,
      }

    }
    #endregion

  }

  /// <summary>
  /// 获取好友未读消息数量
  /// </summary>
  public sealed partial class C2SFriendGetUnreadMessageNum : pb::IMessage<C2SFriendGetUnreadMessageNum> {
    private static readonly pb::MessageParser<C2SFriendGetUnreadMessageNum> _parser = new pb::MessageParser<C2SFriendGetUnreadMessageNum>(() => new C2SFriendGetUnreadMessageNum());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SFriendGetUnreadMessageNum> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[248]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFriendGetUnreadMessageNum() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFriendGetUnreadMessageNum(C2SFriendGetUnreadMessageNum other) : this() {
      friendIds_ = other.friendIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFriendGetUnreadMessageNum Clone() {
      return new C2SFriendGetUnreadMessageNum(this);
    }

    /// <summary>Field number for the "FriendIds" field.</summary>
    public const int FriendIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_friendIds_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> friendIds_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 好友ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> FriendIds {
      get { return friendIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SFriendGetUnreadMessageNum);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SFriendGetUnreadMessageNum other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!friendIds_.Equals(other.friendIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= friendIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      friendIds_.WriteTo(output, _repeated_friendIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += friendIds_.CalculateSize(_repeated_friendIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SFriendGetUnreadMessageNum other) {
      if (other == null) {
        return;
      }
      friendIds_.Add(other.friendIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            friendIds_.AddEntriesFrom(input, _repeated_friendIds_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SFriendGetUnreadMessageNum message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11702,
      }

    }
    #endregion

  }

  public sealed partial class FriendUnreadMessageNumData : pb::IMessage<FriendUnreadMessageNumData> {
    private static readonly pb::MessageParser<FriendUnreadMessageNumData> _parser = new pb::MessageParser<FriendUnreadMessageNumData>(() => new FriendUnreadMessageNumData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendUnreadMessageNumData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[249]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendUnreadMessageNumData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendUnreadMessageNumData(FriendUnreadMessageNumData other) : this() {
      friendId_ = other.friendId_;
      messageNum_ = other.messageNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendUnreadMessageNumData Clone() {
      return new FriendUnreadMessageNumData(this);
    }

    /// <summary>Field number for the "FriendId" field.</summary>
    public const int FriendIdFieldNumber = 1;
    private int friendId_;
    /// <summary>
    /// 好友ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendId {
      get { return friendId_; }
      set {
        friendId_ = value;
      }
    }

    /// <summary>Field number for the "MessageNum" field.</summary>
    public const int MessageNumFieldNumber = 2;
    private int messageNum_;
    /// <summary>
    /// 未读消息数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MessageNum {
      get { return messageNum_; }
      set {
        messageNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendUnreadMessageNumData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendUnreadMessageNumData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FriendId != other.FriendId) return false;
      if (MessageNum != other.MessageNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FriendId != 0) hash ^= FriendId.GetHashCode();
      if (MessageNum != 0) hash ^= MessageNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FriendId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FriendId);
      }
      if (MessageNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MessageNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FriendId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendId);
      }
      if (MessageNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MessageNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendUnreadMessageNumData other) {
      if (other == null) {
        return;
      }
      if (other.FriendId != 0) {
        FriendId = other.FriendId;
      }
      if (other.MessageNum != 0) {
        MessageNum = other.MessageNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FriendId = input.ReadInt32();
            break;
          }
          case 16: {
            MessageNum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CFriendGetUnreadMessageNumResult : pb::IMessage<S2CFriendGetUnreadMessageNumResult> {
    private static readonly pb::MessageParser<S2CFriendGetUnreadMessageNumResult> _parser = new pb::MessageParser<S2CFriendGetUnreadMessageNumResult>(() => new S2CFriendGetUnreadMessageNumResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CFriendGetUnreadMessageNumResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[250]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFriendGetUnreadMessageNumResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFriendGetUnreadMessageNumResult(S2CFriendGetUnreadMessageNumResult other) : this() {
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFriendGetUnreadMessageNumResult Clone() {
      return new S2CFriendGetUnreadMessageNumResult(this);
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.FriendUnreadMessageNumData> _repeated_data_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.FriendUnreadMessageNumData.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.FriendUnreadMessageNumData> data_ = new pbc::RepeatedField<global::Msg.ClientMessage.FriendUnreadMessageNumData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.FriendUnreadMessageNumData> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CFriendGetUnreadMessageNumResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CFriendGetUnreadMessageNumResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CFriendGetUnreadMessageNumResult other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CFriendGetUnreadMessageNumResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11703,
      }

    }
    #endregion

  }

  /// <summary>
  /// 拉取好友未读聊天消息
  /// </summary>
  public sealed partial class C2SFriendPullUnreadMessage : pb::IMessage<C2SFriendPullUnreadMessage> {
    private static readonly pb::MessageParser<C2SFriendPullUnreadMessage> _parser = new pb::MessageParser<C2SFriendPullUnreadMessage>(() => new C2SFriendPullUnreadMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SFriendPullUnreadMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[251]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFriendPullUnreadMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFriendPullUnreadMessage(C2SFriendPullUnreadMessage other) : this() {
      friendId_ = other.friendId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFriendPullUnreadMessage Clone() {
      return new C2SFriendPullUnreadMessage(this);
    }

    /// <summary>Field number for the "FriendId" field.</summary>
    public const int FriendIdFieldNumber = 1;
    private int friendId_;
    /// <summary>
    /// 好友ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendId {
      get { return friendId_; }
      set {
        friendId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SFriendPullUnreadMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SFriendPullUnreadMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FriendId != other.FriendId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FriendId != 0) hash ^= FriendId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FriendId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FriendId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FriendId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SFriendPullUnreadMessage other) {
      if (other == null) {
        return;
      }
      if (other.FriendId != 0) {
        FriendId = other.FriendId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FriendId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SFriendPullUnreadMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11704,
      }

    }
    #endregion

  }

  public sealed partial class FriendChatData : pb::IMessage<FriendChatData> {
    private static readonly pb::MessageParser<FriendChatData> _parser = new pb::MessageParser<FriendChatData>(() => new FriendChatData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendChatData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[252]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendChatData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendChatData(FriendChatData other) : this() {
      content_ = other.content_;
      sendTime_ = other.sendTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendChatData Clone() {
      return new FriendChatData(this);
    }

    /// <summary>Field number for the "Content" field.</summary>
    public const int ContentFieldNumber = 1;
    private pb::ByteString content_ = pb::ByteString.Empty;
    /// <summary>
    /// 内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SendTime" field.</summary>
    public const int SendTimeFieldNumber = 2;
    private int sendTime_;
    /// <summary>
    /// 发送时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SendTime {
      get { return sendTime_; }
      set {
        sendTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendChatData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendChatData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Content != other.Content) return false;
      if (SendTime != other.SendTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (SendTime != 0) hash ^= SendTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Content.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Content);
      }
      if (SendTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SendTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
      }
      if (SendTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SendTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendChatData other) {
      if (other == null) {
        return;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.SendTime != 0) {
        SendTime = other.SendTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Content = input.ReadBytes();
            break;
          }
          case 16: {
            SendTime = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CFriendPullUnreadMessageResult : pb::IMessage<S2CFriendPullUnreadMessageResult> {
    private static readonly pb::MessageParser<S2CFriendPullUnreadMessageResult> _parser = new pb::MessageParser<S2CFriendPullUnreadMessageResult>(() => new S2CFriendPullUnreadMessageResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CFriendPullUnreadMessageResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[253]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFriendPullUnreadMessageResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFriendPullUnreadMessageResult(S2CFriendPullUnreadMessageResult other) : this() {
      friendId_ = other.friendId_;
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFriendPullUnreadMessageResult Clone() {
      return new S2CFriendPullUnreadMessageResult(this);
    }

    /// <summary>Field number for the "FriendId" field.</summary>
    public const int FriendIdFieldNumber = 1;
    private int friendId_;
    /// <summary>
    /// 好友ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendId {
      get { return friendId_; }
      set {
        friendId_ = value;
      }
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.FriendChatData> _repeated_data_codec
        = pb::FieldCodec.ForMessage(18, global::Msg.ClientMessage.FriendChatData.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.FriendChatData> data_ = new pbc::RepeatedField<global::Msg.ClientMessage.FriendChatData>();
    /// <summary>
    /// 聊天数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.FriendChatData> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CFriendPullUnreadMessageResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CFriendPullUnreadMessageResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FriendId != other.FriendId) return false;
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FriendId != 0) hash ^= FriendId.GetHashCode();
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FriendId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FriendId);
      }
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FriendId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendId);
      }
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CFriendPullUnreadMessageResult other) {
      if (other == null) {
        return;
      }
      if (other.FriendId != 0) {
        FriendId = other.FriendId;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FriendId = input.ReadInt32();
            break;
          }
          case 18: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CFriendPullUnreadMessageResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11705,
      }

    }
    #endregion

  }

  /// <summary>
  /// 确认聊天未读消息
  /// </summary>
  public sealed partial class C2SFriendConfirmUnreadMessage : pb::IMessage<C2SFriendConfirmUnreadMessage> {
    private static readonly pb::MessageParser<C2SFriendConfirmUnreadMessage> _parser = new pb::MessageParser<C2SFriendConfirmUnreadMessage>(() => new C2SFriendConfirmUnreadMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SFriendConfirmUnreadMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[254]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFriendConfirmUnreadMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFriendConfirmUnreadMessage(C2SFriendConfirmUnreadMessage other) : this() {
      friendId_ = other.friendId_;
      messageNum_ = other.messageNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFriendConfirmUnreadMessage Clone() {
      return new C2SFriendConfirmUnreadMessage(this);
    }

    /// <summary>Field number for the "FriendId" field.</summary>
    public const int FriendIdFieldNumber = 1;
    private int friendId_;
    /// <summary>
    /// 好友ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendId {
      get { return friendId_; }
      set {
        friendId_ = value;
      }
    }

    /// <summary>Field number for the "MessageNum" field.</summary>
    public const int MessageNumFieldNumber = 2;
    private int messageNum_;
    /// <summary>
    /// 消息条数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MessageNum {
      get { return messageNum_; }
      set {
        messageNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SFriendConfirmUnreadMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SFriendConfirmUnreadMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FriendId != other.FriendId) return false;
      if (MessageNum != other.MessageNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FriendId != 0) hash ^= FriendId.GetHashCode();
      if (MessageNum != 0) hash ^= MessageNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FriendId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FriendId);
      }
      if (MessageNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MessageNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FriendId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendId);
      }
      if (MessageNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MessageNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SFriendConfirmUnreadMessage other) {
      if (other == null) {
        return;
      }
      if (other.FriendId != 0) {
        FriendId = other.FriendId;
      }
      if (other.MessageNum != 0) {
        MessageNum = other.MessageNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FriendId = input.ReadInt32();
            break;
          }
          case 16: {
            MessageNum = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SFriendConfirmUnreadMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11706,
      }

    }
    #endregion

  }

  public sealed partial class S2CFriendConfirmUnreadMessageResult : pb::IMessage<S2CFriendConfirmUnreadMessageResult> {
    private static readonly pb::MessageParser<S2CFriendConfirmUnreadMessageResult> _parser = new pb::MessageParser<S2CFriendConfirmUnreadMessageResult>(() => new S2CFriendConfirmUnreadMessageResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CFriendConfirmUnreadMessageResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[255]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFriendConfirmUnreadMessageResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFriendConfirmUnreadMessageResult(S2CFriendConfirmUnreadMessageResult other) : this() {
      friendId_ = other.friendId_;
      messageNum_ = other.messageNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFriendConfirmUnreadMessageResult Clone() {
      return new S2CFriendConfirmUnreadMessageResult(this);
    }

    /// <summary>Field number for the "FriendId" field.</summary>
    public const int FriendIdFieldNumber = 1;
    private int friendId_;
    /// <summary>
    /// 好友ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendId {
      get { return friendId_; }
      set {
        friendId_ = value;
      }
    }

    /// <summary>Field number for the "MessageNum" field.</summary>
    public const int MessageNumFieldNumber = 2;
    private int messageNum_;
    /// <summary>
    /// 消息条数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MessageNum {
      get { return messageNum_; }
      set {
        messageNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CFriendConfirmUnreadMessageResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CFriendConfirmUnreadMessageResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FriendId != other.FriendId) return false;
      if (MessageNum != other.MessageNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FriendId != 0) hash ^= FriendId.GetHashCode();
      if (MessageNum != 0) hash ^= MessageNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FriendId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FriendId);
      }
      if (MessageNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MessageNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FriendId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendId);
      }
      if (MessageNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MessageNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CFriendConfirmUnreadMessageResult other) {
      if (other == null) {
        return;
      }
      if (other.FriendId != 0) {
        FriendId = other.FriendId;
      }
      if (other.MessageNum != 0) {
        MessageNum = other.MessageNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FriendId = input.ReadInt32();
            break;
          }
          case 16: {
            MessageNum = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CFriendConfirmUnreadMessageResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11707,
      }

    }
    #endregion

  }

  /// <summary>
  /// 客户端请求好友在线状态
  /// </summary>
  public sealed partial class C2SGetOnlineFriends : pb::IMessage<C2SGetOnlineFriends> {
    private static readonly pb::MessageParser<C2SGetOnlineFriends> _parser = new pb::MessageParser<C2SGetOnlineFriends>(() => new C2SGetOnlineFriends());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetOnlineFriends> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[256]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetOnlineFriends() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetOnlineFriends(C2SGetOnlineFriends other) : this() {
      key_ = other.key_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetOnlineFriends Clone() {
      return new C2SGetOnlineFriends(this);
    }

    /// <summary>Field number for the "Key" field.</summary>
    public const int KeyFieldNumber = 1;
    private int key_;
    /// <summary>
    ///  好友类型 1好友 2是关注 3是粉丝
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetOnlineFriends);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetOnlineFriends other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key != 0) hash ^= Key.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Key);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetOnlineFriends other) {
      if (other == null) {
        return;
      }
      if (other.Key != 0) {
        Key = other.Key;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Key = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetOnlineFriends message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11708,
      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器返回在线好友
  /// </summary>
  public sealed partial class S2CRetOnlineFriends : pb::IMessage<S2CRetOnlineFriends> {
    private static readonly pb::MessageParser<S2CRetOnlineFriends> _parser = new pb::MessageParser<S2CRetOnlineFriends>(() => new S2CRetOnlineFriends());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CRetOnlineFriends> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[257]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRetOnlineFriends() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRetOnlineFriends(S2CRetOnlineFriends other) : this() {
      playerIds_ = other.playerIds_.Clone();
      key_ = other.key_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRetOnlineFriends Clone() {
      return new S2CRetOnlineFriends(this);
    }

    /// <summary>Field number for the "PlayerIds" field.</summary>
    public const int PlayerIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_playerIds_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> playerIds_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 在线好友Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> PlayerIds {
      get { return playerIds_; }
    }

    /// <summary>Field number for the "Key" field.</summary>
    public const int KeyFieldNumber = 2;
    private int key_;
    /// <summary>
    ///  好友类型 1好友 2是关注 3是粉丝
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CRetOnlineFriends);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CRetOnlineFriends other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!playerIds_.Equals(other.playerIds_)) return false;
      if (Key != other.Key) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= playerIds_.GetHashCode();
      if (Key != 0) hash ^= Key.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      playerIds_.WriteTo(output, _repeated_playerIds_codec);
      if (Key != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += playerIds_.CalculateSize(_repeated_playerIds_codec);
      if (Key != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Key);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CRetOnlineFriends other) {
      if (other == null) {
        return;
      }
      playerIds_.Add(other.playerIds_);
      if (other.Key != 0) {
        Key = other.Key;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            playerIds_.AddEntriesFrom(input, _repeated_playerIds_codec);
            break;
          }
          case 16: {
            Key = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CRetOnlineFriends message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11709,
      }

    }
    #endregion

  }

  /// <summary>
  /// 拉取图鉴
  /// </summary>
  public sealed partial class C2SGetHandbook : pb::IMessage<C2SGetHandbook> {
    private static readonly pb::MessageParser<C2SGetHandbook> _parser = new pb::MessageParser<C2SGetHandbook>(() => new C2SGetHandbook());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetHandbook> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[258]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetHandbook() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetHandbook(C2SGetHandbook other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetHandbook Clone() {
      return new C2SGetHandbook(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetHandbook);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetHandbook other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetHandbook other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetHandbook message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11800,
      }

    }
    #endregion

  }

  public sealed partial class S2CGetHandbookResult : pb::IMessage<S2CGetHandbookResult> {
    private static readonly pb::MessageParser<S2CGetHandbookResult> _parser = new pb::MessageParser<S2CGetHandbookResult>(() => new S2CGetHandbookResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGetHandbookResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[259]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetHandbookResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetHandbookResult(S2CGetHandbookResult other) : this() {
      items_ = other.items_.Clone();
      awardSuitId_ = other.awardSuitId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetHandbookResult Clone() {
      return new S2CGetHandbookResult(this);
    }

    /// <summary>Field number for the "Items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_items_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> items_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 图鉴ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "AwardSuitId" field.</summary>
    public const int AwardSuitIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_awardSuitId_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> awardSuitId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 领过奖的套装ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> AwardSuitId {
      get { return awardSuitId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGetHandbookResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGetHandbookResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      if(!awardSuitId_.Equals(other.awardSuitId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      hash ^= awardSuitId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      awardSuitId_.WriteTo(output, _repeated_awardSuitId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      size += awardSuitId_.CalculateSize(_repeated_awardSuitId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGetHandbookResult other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      awardSuitId_.Add(other.awardSuitId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
          case 18:
          case 16: {
            awardSuitId_.AddEntriesFrom(input, _repeated_awardSuitId_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGetHandbookResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11801,
      }

    }
    #endregion

  }

  /// <summary>
  /// 新图鉴物品
  /// </summary>
  public sealed partial class S2CNewHandbookItemNotify : pb::IMessage<S2CNewHandbookItemNotify> {
    private static readonly pb::MessageParser<S2CNewHandbookItemNotify> _parser = new pb::MessageParser<S2CNewHandbookItemNotify>(() => new S2CNewHandbookItemNotify());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CNewHandbookItemNotify> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[260]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CNewHandbookItemNotify() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CNewHandbookItemNotify(S2CNewHandbookItemNotify other) : this() {
      itemId_ = other.itemId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CNewHandbookItemNotify Clone() {
      return new S2CNewHandbookItemNotify(this);
    }

    /// <summary>Field number for the "ItemId" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private int itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CNewHandbookItemNotify);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CNewHandbookItemNotify other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ItemId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CNewHandbookItemNotify other) {
      if (other == null) {
        return;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CNewHandbookItemNotify message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11802,
      }

    }
    #endregion

  }

  /// <summary>
  /// 头像列表
  /// </summary>
  public sealed partial class C2SGetHead : pb::IMessage<C2SGetHead> {
    private static readonly pb::MessageParser<C2SGetHead> _parser = new pb::MessageParser<C2SGetHead>(() => new C2SGetHead());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetHead> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[261]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetHead() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetHead(C2SGetHead other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetHead Clone() {
      return new C2SGetHead(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetHead);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetHead other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetHead other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetHead message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11803,
      }

    }
    #endregion

  }

  public sealed partial class S2CGetHeadResult : pb::IMessage<S2CGetHeadResult> {
    private static readonly pb::MessageParser<S2CGetHeadResult> _parser = new pb::MessageParser<S2CGetHeadResult>(() => new S2CGetHeadResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGetHeadResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[262]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetHeadResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetHeadResult(S2CGetHeadResult other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetHeadResult Clone() {
      return new S2CGetHeadResult(this);
    }

    /// <summary>Field number for the "Items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_items_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> items_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGetHeadResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGetHeadResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGetHeadResult other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGetHeadResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11804,
      }

    }
    #endregion

  }

  /// <summary>
  /// 新头像
  /// </summary>
  public sealed partial class S2CNewHeadNotify : pb::IMessage<S2CNewHeadNotify> {
    private static readonly pb::MessageParser<S2CNewHeadNotify> _parser = new pb::MessageParser<S2CNewHeadNotify>(() => new S2CNewHeadNotify());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CNewHeadNotify> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[263]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CNewHeadNotify() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CNewHeadNotify(S2CNewHeadNotify other) : this() {
      itemId_ = other.itemId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CNewHeadNotify Clone() {
      return new S2CNewHeadNotify(this);
    }

    /// <summary>Field number for the "ItemId" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private int itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CNewHeadNotify);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CNewHeadNotify other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ItemId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CNewHeadNotify other) {
      if (other == null) {
        return;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CNewHeadNotify message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11805,
      }

    }
    #endregion

  }

  /// <summary>
  /// 套装图鉴领奖
  /// </summary>
  public sealed partial class C2SGetSuitHandbookReward : pb::IMessage<C2SGetSuitHandbookReward> {
    private static readonly pb::MessageParser<C2SGetSuitHandbookReward> _parser = new pb::MessageParser<C2SGetSuitHandbookReward>(() => new C2SGetSuitHandbookReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetSuitHandbookReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[264]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetSuitHandbookReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetSuitHandbookReward(C2SGetSuitHandbookReward other) : this() {
      suitId_ = other.suitId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetSuitHandbookReward Clone() {
      return new C2SGetSuitHandbookReward(this);
    }

    /// <summary>Field number for the "SuitId" field.</summary>
    public const int SuitIdFieldNumber = 1;
    private int suitId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SuitId {
      get { return suitId_; }
      set {
        suitId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetSuitHandbookReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetSuitHandbookReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SuitId != other.SuitId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SuitId != 0) hash ^= SuitId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SuitId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SuitId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SuitId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuitId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetSuitHandbookReward other) {
      if (other == null) {
        return;
      }
      if (other.SuitId != 0) {
        SuitId = other.SuitId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SuitId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetSuitHandbookReward message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11806,
      }

    }
    #endregion

  }

  public sealed partial class S2CGetSuitHandbookRewardResult : pb::IMessage<S2CGetSuitHandbookRewardResult> {
    private static readonly pb::MessageParser<S2CGetSuitHandbookRewardResult> _parser = new pb::MessageParser<S2CGetSuitHandbookRewardResult>(() => new S2CGetSuitHandbookRewardResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGetSuitHandbookRewardResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[265]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetSuitHandbookRewardResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetSuitHandbookRewardResult(S2CGetSuitHandbookRewardResult other) : this() {
      rewards_ = other.rewards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetSuitHandbookRewardResult Clone() {
      return new S2CGetSuitHandbookRewardResult(this);
    }

    /// <summary>Field number for the "Rewards" field.</summary>
    public const int RewardsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ItemInfo> _repeated_rewards_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.ItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> rewards_ = new pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> Rewards {
      get { return rewards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGetSuitHandbookRewardResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGetSuitHandbookRewardResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rewards_.Equals(other.rewards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rewards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      rewards_.WriteTo(output, _repeated_rewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += rewards_.CalculateSize(_repeated_rewards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGetSuitHandbookRewardResult other) {
      if (other == null) {
        return;
      }
      rewards_.Add(other.rewards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            rewards_.AddEntriesFrom(input, _repeated_rewards_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGetSuitHandbookRewardResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 11807,
      }

    }
    #endregion

  }

  /// <summary>
  /// ----------------------------------- 点赞 -----------------------------------
  /// </summary>
  public sealed partial class C2SZanPlayer : pb::IMessage<C2SZanPlayer> {
    private static readonly pb::MessageParser<C2SZanPlayer> _parser = new pb::MessageParser<C2SZanPlayer>(() => new C2SZanPlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SZanPlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[266]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SZanPlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SZanPlayer(C2SZanPlayer other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SZanPlayer Clone() {
      return new C2SZanPlayer(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SZanPlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SZanPlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SZanPlayer other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SZanPlayer message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12000,
      }

    }
    #endregion

  }

  public sealed partial class S2CZanPlayerResult : pb::IMessage<S2CZanPlayerResult> {
    private static readonly pb::MessageParser<S2CZanPlayerResult> _parser = new pb::MessageParser<S2CZanPlayerResult>(() => new S2CZanPlayerResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CZanPlayerResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[267]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CZanPlayerResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CZanPlayerResult(S2CZanPlayerResult other) : this() {
      playerId_ = other.playerId_;
      totalZan_ = other.totalZan_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CZanPlayerResult Clone() {
      return new S2CZanPlayerResult(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "TotalZan" field.</summary>
    public const int TotalZanFieldNumber = 2;
    private int totalZan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalZan {
      get { return totalZan_; }
      set {
        totalZan_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CZanPlayerResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CZanPlayerResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (TotalZan != other.TotalZan) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (TotalZan != 0) hash ^= TotalZan.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (TotalZan != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TotalZan);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (TotalZan != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalZan);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CZanPlayerResult other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.TotalZan != 0) {
        TotalZan = other.TotalZan;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            TotalZan = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CZanPlayerResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12001,
      }

    }
    #endregion

  }

  /// <summary>
  /// 拉取寄养所数据
  /// </summary>
  public sealed partial class C2SPullFosterData : pb::IMessage<C2SPullFosterData> {
    private static readonly pb::MessageParser<C2SPullFosterData> _parser = new pb::MessageParser<C2SPullFosterData>(() => new C2SPullFosterData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SPullFosterData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[268]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPullFosterData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPullFosterData(C2SPullFosterData other) : this() {
      isSettle_ = other.isSettle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPullFosterData Clone() {
      return new C2SPullFosterData(this);
    }

    /// <summary>Field number for the "IsSettle" field.</summary>
    public const int IsSettleFieldNumber = 1;
    private bool isSettle_;
    /// <summary>
    /// 是否结算
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSettle {
      get { return isSettle_; }
      set {
        isSettle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SPullFosterData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SPullFosterData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsSettle != other.IsSettle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsSettle != false) hash ^= IsSettle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsSettle != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsSettle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsSettle != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SPullFosterData other) {
      if (other == null) {
        return;
      }
      if (other.IsSettle != false) {
        IsSettle = other.IsSettle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsSettle = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SPullFosterData message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12100,
      }

    }
    #endregion

  }

  public sealed partial class FosterCatInfo : pb::IMessage<FosterCatInfo> {
    private static readonly pb::MessageParser<FosterCatInfo> _parser = new pb::MessageParser<FosterCatInfo>(() => new FosterCatInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FosterCatInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[269]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FosterCatInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FosterCatInfo(FosterCatInfo other) : this() {
      catId_ = other.catId_;
      catExp_ = other.catExp_;
      catLevel_ = other.catLevel_;
      items_ = other.items_.Clone();
      startTime_ = other.startTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FosterCatInfo Clone() {
      return new FosterCatInfo(this);
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 1;
    private int catId_;
    /// <summary>
    /// 猫ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    /// <summary>Field number for the "CatExp" field.</summary>
    public const int CatExpFieldNumber = 2;
    private int catExp_;
    /// <summary>
    /// 目前获取的经验进度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatExp {
      get { return catExp_; }
      set {
        catExp_ = value;
      }
    }

    /// <summary>Field number for the "CatLevel" field.</summary>
    public const int CatLevelFieldNumber = 3;
    private int catLevel_;
    /// <summary>
    /// 目前猫的等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatLevel {
      get { return catLevel_; }
      set {
        catLevel_ = value;
      }
    }

    /// <summary>Field number for the "Items" field.</summary>
    public const int ItemsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ItemInfo> _repeated_items_codec
        = pb::FieldCodec.ForMessage(34, global::Msg.ClientMessage.ItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> items_ = new pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo>();
    /// <summary>
    /// 目前获取的物品进度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "StartTime" field.</summary>
    public const int StartTimeFieldNumber = 5;
    private int startTime_;
    /// <summary>
    /// 开始时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FosterCatInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FosterCatInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatId != other.CatId) return false;
      if (CatExp != other.CatExp) return false;
      if (CatLevel != other.CatLevel) return false;
      if(!items_.Equals(other.items_)) return false;
      if (StartTime != other.StartTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatId != 0) hash ^= CatId.GetHashCode();
      if (CatExp != 0) hash ^= CatExp.GetHashCode();
      if (CatLevel != 0) hash ^= CatLevel.GetHashCode();
      hash ^= items_.GetHashCode();
      if (StartTime != 0) hash ^= StartTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatId);
      }
      if (CatExp != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CatExp);
      }
      if (CatLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CatLevel);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (StartTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(StartTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      if (CatExp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatExp);
      }
      if (CatLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatLevel);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (StartTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FosterCatInfo other) {
      if (other == null) {
        return;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      if (other.CatExp != 0) {
        CatExp = other.CatExp;
      }
      if (other.CatLevel != 0) {
        CatLevel = other.CatLevel;
      }
      items_.Add(other.items_);
      if (other.StartTime != 0) {
        StartTime = other.StartTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatId = input.ReadInt32();
            break;
          }
          case 16: {
            CatExp = input.ReadInt32();
            break;
          }
          case 24: {
            CatLevel = input.ReadInt32();
            break;
          }
          case 34: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
          case 40: {
            StartTime = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CPullFosterDataResult : pb::IMessage<S2CPullFosterDataResult> {
    private static readonly pb::MessageParser<S2CPullFosterDataResult> _parser = new pb::MessageParser<S2CPullFosterDataResult>(() => new S2CPullFosterDataResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CPullFosterDataResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[270]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPullFosterDataResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPullFosterDataResult(S2CPullFosterDataResult other) : this() {
      buildingId_ = other.buildingId_;
      cardId_ = other.cardId_;
      cardRemainSeconds_ = other.cardRemainSeconds_;
      selfCats_ = other.selfCats_.Clone();
      selfSlotNum_ = other.selfSlotNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPullFosterDataResult Clone() {
      return new S2CPullFosterDataResult(this);
    }

    /// <summary>Field number for the "BuildingId" field.</summary>
    public const int BuildingIdFieldNumber = 1;
    private int buildingId_;
    /// <summary>
    /// 建筑ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildingId {
      get { return buildingId_; }
      set {
        buildingId_ = value;
      }
    }

    /// <summary>Field number for the "CardId" field.</summary>
    public const int CardIdFieldNumber = 2;
    private int cardId_;
    /// <summary>
    /// 寄样卡ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CardId {
      get { return cardId_; }
      set {
        cardId_ = value;
      }
    }

    /// <summary>Field number for the "CardRemainSeconds" field.</summary>
    public const int CardRemainSecondsFieldNumber = 3;
    private int cardRemainSeconds_;
    /// <summary>
    /// 寄样卡剩余时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CardRemainSeconds {
      get { return cardRemainSeconds_; }
      set {
        cardRemainSeconds_ = value;
      }
    }

    /// <summary>Field number for the "SelfCats" field.</summary>
    public const int SelfCatsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.FosterCatInfo> _repeated_selfCats_codec
        = pb::FieldCodec.ForMessage(34, global::Msg.ClientMessage.FosterCatInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.FosterCatInfo> selfCats_ = new pbc::RepeatedField<global::Msg.ClientMessage.FosterCatInfo>();
    /// <summary>
    /// 自己寄养的猫
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.FosterCatInfo> SelfCats {
      get { return selfCats_; }
    }

    /// <summary>Field number for the "SelfSlotNum" field.</summary>
    public const int SelfSlotNumFieldNumber = 5;
    private int selfSlotNum_;
    /// <summary>
    /// 自己的槽位
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SelfSlotNum {
      get { return selfSlotNum_; }
      set {
        selfSlotNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CPullFosterDataResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CPullFosterDataResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildingId != other.BuildingId) return false;
      if (CardId != other.CardId) return false;
      if (CardRemainSeconds != other.CardRemainSeconds) return false;
      if(!selfCats_.Equals(other.selfCats_)) return false;
      if (SelfSlotNum != other.SelfSlotNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuildingId != 0) hash ^= BuildingId.GetHashCode();
      if (CardId != 0) hash ^= CardId.GetHashCode();
      if (CardRemainSeconds != 0) hash ^= CardRemainSeconds.GetHashCode();
      hash ^= selfCats_.GetHashCode();
      if (SelfSlotNum != 0) hash ^= SelfSlotNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuildingId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuildingId);
      }
      if (CardId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CardId);
      }
      if (CardRemainSeconds != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CardRemainSeconds);
      }
      selfCats_.WriteTo(output, _repeated_selfCats_codec);
      if (SelfSlotNum != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(SelfSlotNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuildingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingId);
      }
      if (CardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CardId);
      }
      if (CardRemainSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CardRemainSeconds);
      }
      size += selfCats_.CalculateSize(_repeated_selfCats_codec);
      if (SelfSlotNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SelfSlotNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CPullFosterDataResult other) {
      if (other == null) {
        return;
      }
      if (other.BuildingId != 0) {
        BuildingId = other.BuildingId;
      }
      if (other.CardId != 0) {
        CardId = other.CardId;
      }
      if (other.CardRemainSeconds != 0) {
        CardRemainSeconds = other.CardRemainSeconds;
      }
      selfCats_.Add(other.selfCats_);
      if (other.SelfSlotNum != 0) {
        SelfSlotNum = other.SelfSlotNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuildingId = input.ReadInt32();
            break;
          }
          case 16: {
            CardId = input.ReadInt32();
            break;
          }
          case 24: {
            CardRemainSeconds = input.ReadInt32();
            break;
          }
          case 34: {
            selfCats_.AddEntriesFrom(input, _repeated_selfCats_codec);
            break;
          }
          case 40: {
            SelfSlotNum = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CPullFosterDataResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12101,
      }

    }
    #endregion

  }

  /// <summary>
  /// 拉取寄养在好友的猫和好友寄养的猫
  /// </summary>
  public sealed partial class C2SPullFosterCatsWithFriend : pb::IMessage<C2SPullFosterCatsWithFriend> {
    private static readonly pb::MessageParser<C2SPullFosterCatsWithFriend> _parser = new pb::MessageParser<C2SPullFosterCatsWithFriend>(() => new C2SPullFosterCatsWithFriend());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SPullFosterCatsWithFriend> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[271]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPullFosterCatsWithFriend() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPullFosterCatsWithFriend(C2SPullFosterCatsWithFriend other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPullFosterCatsWithFriend Clone() {
      return new C2SPullFosterCatsWithFriend(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SPullFosterCatsWithFriend);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SPullFosterCatsWithFriend other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SPullFosterCatsWithFriend other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SPullFosterCatsWithFriend message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12102,
      }

    }
    #endregion

  }

  /// <summary>
  /// 寄养在好友的猫
  /// </summary>
  public sealed partial class FosterCatInFriendInfo : pb::IMessage<FosterCatInFriendInfo> {
    private static readonly pb::MessageParser<FosterCatInFriendInfo> _parser = new pb::MessageParser<FosterCatInFriendInfo>(() => new FosterCatInFriendInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FosterCatInFriendInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[272]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FosterCatInFriendInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FosterCatInFriendInfo(FosterCatInFriendInfo other) : this() {
      catId_ = other.catId_;
      remainSeconds_ = other.remainSeconds_;
      friendId_ = other.friendId_;
      friendLevel_ = other.friendLevel_;
      friendName_ = other.friendName_;
      friendHead_ = other.friendHead_;
      startCardId_ = other.startCardId_;
      catExp_ = other.catExp_;
      items_ = other.items_.Clone();
      startTime_ = other.startTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FosterCatInFriendInfo Clone() {
      return new FosterCatInFriendInfo(this);
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 1;
    private int catId_;
    /// <summary>
    /// 猫ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    /// <summary>Field number for the "RemainSeconds" field.</summary>
    public const int RemainSecondsFieldNumber = 2;
    private int remainSeconds_;
    /// <summary>
    /// 剩余寄养时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RemainSeconds {
      get { return remainSeconds_; }
      set {
        remainSeconds_ = value;
      }
    }

    /// <summary>Field number for the "FriendId" field.</summary>
    public const int FriendIdFieldNumber = 3;
    private int friendId_;
    /// <summary>
    /// 好友ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendId {
      get { return friendId_; }
      set {
        friendId_ = value;
      }
    }

    /// <summary>Field number for the "FriendLevel" field.</summary>
    public const int FriendLevelFieldNumber = 4;
    private int friendLevel_;
    /// <summary>
    /// 好友等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendLevel {
      get { return friendLevel_; }
      set {
        friendLevel_ = value;
      }
    }

    /// <summary>Field number for the "FriendName" field.</summary>
    public const int FriendNameFieldNumber = 5;
    private string friendName_ = "";
    /// <summary>
    /// 好友昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FriendName {
      get { return friendName_; }
      set {
        friendName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FriendHead" field.</summary>
    public const int FriendHeadFieldNumber = 6;
    private int friendHead_;
    /// <summary>
    /// 好友头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendHead {
      get { return friendHead_; }
      set {
        friendHead_ = value;
      }
    }

    /// <summary>Field number for the "StartCardId" field.</summary>
    public const int StartCardIdFieldNumber = 7;
    private int startCardId_;
    /// <summary>
    /// 放入猫时的寄养卡
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartCardId {
      get { return startCardId_; }
      set {
        startCardId_ = value;
      }
    }

    /// <summary>Field number for the "CatExp" field.</summary>
    public const int CatExpFieldNumber = 8;
    private int catExp_;
    /// <summary>
    /// 结算猫的经验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatExp {
      get { return catExp_; }
      set {
        catExp_ = value;
      }
    }

    /// <summary>Field number for the "Items" field.</summary>
    public const int ItemsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ItemInfo> _repeated_items_codec
        = pb::FieldCodec.ForMessage(74, global::Msg.ClientMessage.ItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> items_ = new pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo>();
    /// <summary>
    /// 结算获得的物品
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "StartTime" field.</summary>
    public const int StartTimeFieldNumber = 10;
    private int startTime_;
    /// <summary>
    /// 开始时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FosterCatInFriendInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FosterCatInFriendInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatId != other.CatId) return false;
      if (RemainSeconds != other.RemainSeconds) return false;
      if (FriendId != other.FriendId) return false;
      if (FriendLevel != other.FriendLevel) return false;
      if (FriendName != other.FriendName) return false;
      if (FriendHead != other.FriendHead) return false;
      if (StartCardId != other.StartCardId) return false;
      if (CatExp != other.CatExp) return false;
      if(!items_.Equals(other.items_)) return false;
      if (StartTime != other.StartTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatId != 0) hash ^= CatId.GetHashCode();
      if (RemainSeconds != 0) hash ^= RemainSeconds.GetHashCode();
      if (FriendId != 0) hash ^= FriendId.GetHashCode();
      if (FriendLevel != 0) hash ^= FriendLevel.GetHashCode();
      if (FriendName.Length != 0) hash ^= FriendName.GetHashCode();
      if (FriendHead != 0) hash ^= FriendHead.GetHashCode();
      if (StartCardId != 0) hash ^= StartCardId.GetHashCode();
      if (CatExp != 0) hash ^= CatExp.GetHashCode();
      hash ^= items_.GetHashCode();
      if (StartTime != 0) hash ^= StartTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatId);
      }
      if (RemainSeconds != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RemainSeconds);
      }
      if (FriendId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FriendId);
      }
      if (FriendLevel != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FriendLevel);
      }
      if (FriendName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(FriendName);
      }
      if (FriendHead != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(FriendHead);
      }
      if (StartCardId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(StartCardId);
      }
      if (CatExp != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(CatExp);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (StartTime != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(StartTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      if (RemainSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainSeconds);
      }
      if (FriendId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendId);
      }
      if (FriendLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendLevel);
      }
      if (FriendName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FriendName);
      }
      if (FriendHead != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendHead);
      }
      if (StartCardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartCardId);
      }
      if (CatExp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatExp);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (StartTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FosterCatInFriendInfo other) {
      if (other == null) {
        return;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      if (other.RemainSeconds != 0) {
        RemainSeconds = other.RemainSeconds;
      }
      if (other.FriendId != 0) {
        FriendId = other.FriendId;
      }
      if (other.FriendLevel != 0) {
        FriendLevel = other.FriendLevel;
      }
      if (other.FriendName.Length != 0) {
        FriendName = other.FriendName;
      }
      if (other.FriendHead != 0) {
        FriendHead = other.FriendHead;
      }
      if (other.StartCardId != 0) {
        StartCardId = other.StartCardId;
      }
      if (other.CatExp != 0) {
        CatExp = other.CatExp;
      }
      items_.Add(other.items_);
      if (other.StartTime != 0) {
        StartTime = other.StartTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatId = input.ReadInt32();
            break;
          }
          case 16: {
            RemainSeconds = input.ReadInt32();
            break;
          }
          case 24: {
            FriendId = input.ReadInt32();
            break;
          }
          case 32: {
            FriendLevel = input.ReadInt32();
            break;
          }
          case 42: {
            FriendName = input.ReadString();
            break;
          }
          case 48: {
            FriendHead = input.ReadInt32();
            break;
          }
          case 56: {
            StartCardId = input.ReadInt32();
            break;
          }
          case 64: {
            CatExp = input.ReadInt32();
            break;
          }
          case 74: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
          case 80: {
            StartTime = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 好友寄养的猫
  /// </summary>
  public sealed partial class FosteredFriendCatInfo : pb::IMessage<FosteredFriendCatInfo> {
    private static readonly pb::MessageParser<FosteredFriendCatInfo> _parser = new pb::MessageParser<FosteredFriendCatInfo>(() => new FosteredFriendCatInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FosteredFriendCatInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[273]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FosteredFriendCatInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FosteredFriendCatInfo(FosteredFriendCatInfo other) : this() {
      catTableId_ = other.catTableId_;
      catNick_ = other.catNick_;
      catLevel_ = other.catLevel_;
      catStar_ = other.catStar_;
      friendId_ = other.friendId_;
      friendName_ = other.friendName_;
      friendHead_ = other.friendHead_;
      friendLevel_ = other.friendLevel_;
      remainSeconds_ = other.remainSeconds_;
      startCardId_ = other.startCardId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FosteredFriendCatInfo Clone() {
      return new FosteredFriendCatInfo(this);
    }

    /// <summary>Field number for the "CatTableId" field.</summary>
    public const int CatTableIdFieldNumber = 1;
    private int catTableId_;
    /// <summary>
    /// 猫配置ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatTableId {
      get { return catTableId_; }
      set {
        catTableId_ = value;
      }
    }

    /// <summary>Field number for the "CatNick" field.</summary>
    public const int CatNickFieldNumber = 2;
    private string catNick_ = "";
    /// <summary>
    /// 猫昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CatNick {
      get { return catNick_; }
      set {
        catNick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CatLevel" field.</summary>
    public const int CatLevelFieldNumber = 3;
    private int catLevel_;
    /// <summary>
    /// 猫等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatLevel {
      get { return catLevel_; }
      set {
        catLevel_ = value;
      }
    }

    /// <summary>Field number for the "CatStar" field.</summary>
    public const int CatStarFieldNumber = 4;
    private int catStar_;
    /// <summary>
    /// 猫星级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatStar {
      get { return catStar_; }
      set {
        catStar_ = value;
      }
    }

    /// <summary>Field number for the "FriendId" field.</summary>
    public const int FriendIdFieldNumber = 5;
    private int friendId_;
    /// <summary>
    /// 好友ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendId {
      get { return friendId_; }
      set {
        friendId_ = value;
      }
    }

    /// <summary>Field number for the "FriendName" field.</summary>
    public const int FriendNameFieldNumber = 6;
    private string friendName_ = "";
    /// <summary>
    /// 好友名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FriendName {
      get { return friendName_; }
      set {
        friendName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FriendHead" field.</summary>
    public const int FriendHeadFieldNumber = 7;
    private int friendHead_;
    /// <summary>
    /// 好友头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendHead {
      get { return friendHead_; }
      set {
        friendHead_ = value;
      }
    }

    /// <summary>Field number for the "FriendLevel" field.</summary>
    public const int FriendLevelFieldNumber = 8;
    private int friendLevel_;
    /// <summary>
    /// 好友等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendLevel {
      get { return friendLevel_; }
      set {
        friendLevel_ = value;
      }
    }

    /// <summary>Field number for the "RemainSeconds" field.</summary>
    public const int RemainSecondsFieldNumber = 9;
    private int remainSeconds_;
    /// <summary>
    /// 剩余寄养时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RemainSeconds {
      get { return remainSeconds_; }
      set {
        remainSeconds_ = value;
      }
    }

    /// <summary>Field number for the "StartCardId" field.</summary>
    public const int StartCardIdFieldNumber = 10;
    private int startCardId_;
    /// <summary>
    /// 放入猫时的寄养卡
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartCardId {
      get { return startCardId_; }
      set {
        startCardId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FosteredFriendCatInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FosteredFriendCatInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatTableId != other.CatTableId) return false;
      if (CatNick != other.CatNick) return false;
      if (CatLevel != other.CatLevel) return false;
      if (CatStar != other.CatStar) return false;
      if (FriendId != other.FriendId) return false;
      if (FriendName != other.FriendName) return false;
      if (FriendHead != other.FriendHead) return false;
      if (FriendLevel != other.FriendLevel) return false;
      if (RemainSeconds != other.RemainSeconds) return false;
      if (StartCardId != other.StartCardId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatTableId != 0) hash ^= CatTableId.GetHashCode();
      if (CatNick.Length != 0) hash ^= CatNick.GetHashCode();
      if (CatLevel != 0) hash ^= CatLevel.GetHashCode();
      if (CatStar != 0) hash ^= CatStar.GetHashCode();
      if (FriendId != 0) hash ^= FriendId.GetHashCode();
      if (FriendName.Length != 0) hash ^= FriendName.GetHashCode();
      if (FriendHead != 0) hash ^= FriendHead.GetHashCode();
      if (FriendLevel != 0) hash ^= FriendLevel.GetHashCode();
      if (RemainSeconds != 0) hash ^= RemainSeconds.GetHashCode();
      if (StartCardId != 0) hash ^= StartCardId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatTableId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatTableId);
      }
      if (CatNick.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CatNick);
      }
      if (CatLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CatLevel);
      }
      if (CatStar != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CatStar);
      }
      if (FriendId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FriendId);
      }
      if (FriendName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(FriendName);
      }
      if (FriendHead != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(FriendHead);
      }
      if (FriendLevel != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(FriendLevel);
      }
      if (RemainSeconds != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(RemainSeconds);
      }
      if (StartCardId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(StartCardId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatTableId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatTableId);
      }
      if (CatNick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CatNick);
      }
      if (CatLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatLevel);
      }
      if (CatStar != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatStar);
      }
      if (FriendId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendId);
      }
      if (FriendName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FriendName);
      }
      if (FriendHead != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendHead);
      }
      if (FriendLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendLevel);
      }
      if (RemainSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainSeconds);
      }
      if (StartCardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartCardId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FosteredFriendCatInfo other) {
      if (other == null) {
        return;
      }
      if (other.CatTableId != 0) {
        CatTableId = other.CatTableId;
      }
      if (other.CatNick.Length != 0) {
        CatNick = other.CatNick;
      }
      if (other.CatLevel != 0) {
        CatLevel = other.CatLevel;
      }
      if (other.CatStar != 0) {
        CatStar = other.CatStar;
      }
      if (other.FriendId != 0) {
        FriendId = other.FriendId;
      }
      if (other.FriendName.Length != 0) {
        FriendName = other.FriendName;
      }
      if (other.FriendHead != 0) {
        FriendHead = other.FriendHead;
      }
      if (other.FriendLevel != 0) {
        FriendLevel = other.FriendLevel;
      }
      if (other.RemainSeconds != 0) {
        RemainSeconds = other.RemainSeconds;
      }
      if (other.StartCardId != 0) {
        StartCardId = other.StartCardId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatTableId = input.ReadInt32();
            break;
          }
          case 18: {
            CatNick = input.ReadString();
            break;
          }
          case 24: {
            CatLevel = input.ReadInt32();
            break;
          }
          case 32: {
            CatStar = input.ReadInt32();
            break;
          }
          case 40: {
            FriendId = input.ReadInt32();
            break;
          }
          case 50: {
            FriendName = input.ReadString();
            break;
          }
          case 56: {
            FriendHead = input.ReadInt32();
            break;
          }
          case 64: {
            FriendLevel = input.ReadInt32();
            break;
          }
          case 72: {
            RemainSeconds = input.ReadInt32();
            break;
          }
          case 80: {
            StartCardId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CPullFosterCatsWithFriendResult : pb::IMessage<S2CPullFosterCatsWithFriendResult> {
    private static readonly pb::MessageParser<S2CPullFosterCatsWithFriendResult> _parser = new pb::MessageParser<S2CPullFosterCatsWithFriendResult>(() => new S2CPullFosterCatsWithFriendResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CPullFosterCatsWithFriendResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[274]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPullFosterCatsWithFriendResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPullFosterCatsWithFriendResult(S2CPullFosterCatsWithFriendResult other) : this() {
      catsInFriend_ = other.catsInFriend_.Clone();
      fosterFriendSlotNum_ = other.fosterFriendSlotNum_;
      friendCats_ = other.friendCats_.Clone();
      friendFosteredSlotNum_ = other.friendFosteredSlotNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPullFosterCatsWithFriendResult Clone() {
      return new S2CPullFosterCatsWithFriendResult(this);
    }

    /// <summary>Field number for the "CatsInFriend" field.</summary>
    public const int CatsInFriendFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.FosterCatInFriendInfo> _repeated_catsInFriend_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.FosterCatInFriendInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.FosterCatInFriendInfo> catsInFriend_ = new pbc::RepeatedField<global::Msg.ClientMessage.FosterCatInFriendInfo>();
    /// <summary>
    /// 寄养在好友的猫
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.FosterCatInFriendInfo> CatsInFriend {
      get { return catsInFriend_; }
    }

    /// <summary>Field number for the "FosterFriendSlotNum" field.</summary>
    public const int FosterFriendSlotNumFieldNumber = 2;
    private int fosterFriendSlotNum_;
    /// <summary>
    /// 寄养好友槽位数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FosterFriendSlotNum {
      get { return fosterFriendSlotNum_; }
      set {
        fosterFriendSlotNum_ = value;
      }
    }

    /// <summary>Field number for the "FriendCats" field.</summary>
    public const int FriendCatsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.FosteredFriendCatInfo> _repeated_friendCats_codec
        = pb::FieldCodec.ForMessage(26, global::Msg.ClientMessage.FosteredFriendCatInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.FosteredFriendCatInfo> friendCats_ = new pbc::RepeatedField<global::Msg.ClientMessage.FosteredFriendCatInfo>();
    /// <summary>
    /// 好友寄养的猫
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.FosteredFriendCatInfo> FriendCats {
      get { return friendCats_; }
    }

    /// <summary>Field number for the "FriendFosteredSlotNum" field.</summary>
    public const int FriendFosteredSlotNumFieldNumber = 4;
    private int friendFosteredSlotNum_;
    /// <summary>
    /// 被好友寄养的槽位数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendFosteredSlotNum {
      get { return friendFosteredSlotNum_; }
      set {
        friendFosteredSlotNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CPullFosterCatsWithFriendResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CPullFosterCatsWithFriendResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!catsInFriend_.Equals(other.catsInFriend_)) return false;
      if (FosterFriendSlotNum != other.FosterFriendSlotNum) return false;
      if(!friendCats_.Equals(other.friendCats_)) return false;
      if (FriendFosteredSlotNum != other.FriendFosteredSlotNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= catsInFriend_.GetHashCode();
      if (FosterFriendSlotNum != 0) hash ^= FosterFriendSlotNum.GetHashCode();
      hash ^= friendCats_.GetHashCode();
      if (FriendFosteredSlotNum != 0) hash ^= FriendFosteredSlotNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      catsInFriend_.WriteTo(output, _repeated_catsInFriend_codec);
      if (FosterFriendSlotNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FosterFriendSlotNum);
      }
      friendCats_.WriteTo(output, _repeated_friendCats_codec);
      if (FriendFosteredSlotNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FriendFosteredSlotNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += catsInFriend_.CalculateSize(_repeated_catsInFriend_codec);
      if (FosterFriendSlotNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FosterFriendSlotNum);
      }
      size += friendCats_.CalculateSize(_repeated_friendCats_codec);
      if (FriendFosteredSlotNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendFosteredSlotNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CPullFosterCatsWithFriendResult other) {
      if (other == null) {
        return;
      }
      catsInFriend_.Add(other.catsInFriend_);
      if (other.FosterFriendSlotNum != 0) {
        FosterFriendSlotNum = other.FosterFriendSlotNum;
      }
      friendCats_.Add(other.friendCats_);
      if (other.FriendFosteredSlotNum != 0) {
        FriendFosteredSlotNum = other.FriendFosteredSlotNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            catsInFriend_.AddEntriesFrom(input, _repeated_catsInFriend_codec);
            break;
          }
          case 16: {
            FosterFriendSlotNum = input.ReadInt32();
            break;
          }
          case 26: {
            friendCats_.AddEntriesFrom(input, _repeated_friendCats_codec);
            break;
          }
          case 32: {
            FriendFosteredSlotNum = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CPullFosterCatsWithFriendResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12103,
      }

    }
    #endregion

  }

  /// <summary>
  /// 寄养卡合成
  /// </summary>
  public sealed partial class C2SFosterCardCompose : pb::IMessage<C2SFosterCardCompose> {
    private static readonly pb::MessageParser<C2SFosterCardCompose> _parser = new pb::MessageParser<C2SFosterCardCompose>(() => new C2SFosterCardCompose());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SFosterCardCompose> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[275]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFosterCardCompose() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFosterCardCompose(C2SFosterCardCompose other) : this() {
      itemIds_ = other.itemIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFosterCardCompose Clone() {
      return new C2SFosterCardCompose(this);
    }

    /// <summary>Field number for the "ItemIds" field.</summary>
    public const int ItemIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_itemIds_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> itemIds_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 寄养卡ID数组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ItemIds {
      get { return itemIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SFosterCardCompose);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SFosterCardCompose other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!itemIds_.Equals(other.itemIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= itemIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      itemIds_.WriteTo(output, _repeated_itemIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += itemIds_.CalculateSize(_repeated_itemIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SFosterCardCompose other) {
      if (other == null) {
        return;
      }
      itemIds_.Add(other.itemIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            itemIds_.AddEntriesFrom(input, _repeated_itemIds_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SFosterCardCompose message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12104,
      }

    }
    #endregion

  }

  public sealed partial class S2CFosterCardComposeResult : pb::IMessage<S2CFosterCardComposeResult> {
    private static readonly pb::MessageParser<S2CFosterCardComposeResult> _parser = new pb::MessageParser<S2CFosterCardComposeResult>(() => new S2CFosterCardComposeResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CFosterCardComposeResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[276]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFosterCardComposeResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFosterCardComposeResult(S2CFosterCardComposeResult other) : this() {
      itemIds_ = other.itemIds_.Clone();
      destItemTableId_ = other.destItemTableId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFosterCardComposeResult Clone() {
      return new S2CFosterCardComposeResult(this);
    }

    /// <summary>Field number for the "ItemIds" field.</summary>
    public const int ItemIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_itemIds_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> itemIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ItemIds {
      get { return itemIds_; }
    }

    /// <summary>Field number for the "DestItemTableId" field.</summary>
    public const int DestItemTableIdFieldNumber = 2;
    private int destItemTableId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DestItemTableId {
      get { return destItemTableId_; }
      set {
        destItemTableId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CFosterCardComposeResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CFosterCardComposeResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!itemIds_.Equals(other.itemIds_)) return false;
      if (DestItemTableId != other.DestItemTableId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= itemIds_.GetHashCode();
      if (DestItemTableId != 0) hash ^= DestItemTableId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      itemIds_.WriteTo(output, _repeated_itemIds_codec);
      if (DestItemTableId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DestItemTableId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += itemIds_.CalculateSize(_repeated_itemIds_codec);
      if (DestItemTableId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DestItemTableId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CFosterCardComposeResult other) {
      if (other == null) {
        return;
      }
      itemIds_.Add(other.itemIds_);
      if (other.DestItemTableId != 0) {
        DestItemTableId = other.DestItemTableId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            itemIds_.AddEntriesFrom(input, _repeated_itemIds_codec);
            break;
          }
          case 16: {
            DestItemTableId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CFosterCardComposeResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12105,
      }

    }
    #endregion

  }

  /// <summary>
  /// 装备寄养卡
  /// </summary>
  public sealed partial class C2SFosterEquipCard : pb::IMessage<C2SFosterEquipCard> {
    private static readonly pb::MessageParser<C2SFosterEquipCard> _parser = new pb::MessageParser<C2SFosterEquipCard>(() => new C2SFosterEquipCard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SFosterEquipCard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[277]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFosterEquipCard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFosterEquipCard(C2SFosterEquipCard other) : this() {
      buildingId_ = other.buildingId_;
      cardId_ = other.cardId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFosterEquipCard Clone() {
      return new C2SFosterEquipCard(this);
    }

    /// <summary>Field number for the "BuildingId" field.</summary>
    public const int BuildingIdFieldNumber = 1;
    private int buildingId_;
    /// <summary>
    /// 寄养所建筑ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildingId {
      get { return buildingId_; }
      set {
        buildingId_ = value;
      }
    }

    /// <summary>Field number for the "CardId" field.</summary>
    public const int CardIdFieldNumber = 2;
    private int cardId_;
    /// <summary>
    /// 寄养卡ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CardId {
      get { return cardId_; }
      set {
        cardId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SFosterEquipCard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SFosterEquipCard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildingId != other.BuildingId) return false;
      if (CardId != other.CardId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuildingId != 0) hash ^= BuildingId.GetHashCode();
      if (CardId != 0) hash ^= CardId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuildingId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuildingId);
      }
      if (CardId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CardId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuildingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingId);
      }
      if (CardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CardId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SFosterEquipCard other) {
      if (other == null) {
        return;
      }
      if (other.BuildingId != 0) {
        BuildingId = other.BuildingId;
      }
      if (other.CardId != 0) {
        CardId = other.CardId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuildingId = input.ReadInt32();
            break;
          }
          case 16: {
            CardId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SFosterEquipCard message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12106,
      }

    }
    #endregion

  }

  public sealed partial class S2CFosterEquipCardResult : pb::IMessage<S2CFosterEquipCardResult> {
    private static readonly pb::MessageParser<S2CFosterEquipCardResult> _parser = new pb::MessageParser<S2CFosterEquipCardResult>(() => new S2CFosterEquipCardResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CFosterEquipCardResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[278]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFosterEquipCardResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFosterEquipCardResult(S2CFosterEquipCardResult other) : this() {
      buildingId_ = other.buildingId_;
      cardId_ = other.cardId_;
      cardRemainSeconds_ = other.cardRemainSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFosterEquipCardResult Clone() {
      return new S2CFosterEquipCardResult(this);
    }

    /// <summary>Field number for the "BuildingId" field.</summary>
    public const int BuildingIdFieldNumber = 1;
    private int buildingId_;
    /// <summary>
    /// 寄养所
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildingId {
      get { return buildingId_; }
      set {
        buildingId_ = value;
      }
    }

    /// <summary>Field number for the "CardId" field.</summary>
    public const int CardIdFieldNumber = 2;
    private int cardId_;
    /// <summary>
    /// 寄养卡
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CardId {
      get { return cardId_; }
      set {
        cardId_ = value;
      }
    }

    /// <summary>Field number for the "CardRemainSeconds" field.</summary>
    public const int CardRemainSecondsFieldNumber = 3;
    private int cardRemainSeconds_;
    /// <summary>
    /// 剩余时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CardRemainSeconds {
      get { return cardRemainSeconds_; }
      set {
        cardRemainSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CFosterEquipCardResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CFosterEquipCardResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildingId != other.BuildingId) return false;
      if (CardId != other.CardId) return false;
      if (CardRemainSeconds != other.CardRemainSeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuildingId != 0) hash ^= BuildingId.GetHashCode();
      if (CardId != 0) hash ^= CardId.GetHashCode();
      if (CardRemainSeconds != 0) hash ^= CardRemainSeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuildingId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuildingId);
      }
      if (CardId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CardId);
      }
      if (CardRemainSeconds != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CardRemainSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuildingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingId);
      }
      if (CardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CardId);
      }
      if (CardRemainSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CardRemainSeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CFosterEquipCardResult other) {
      if (other == null) {
        return;
      }
      if (other.BuildingId != 0) {
        BuildingId = other.BuildingId;
      }
      if (other.CardId != 0) {
        CardId = other.CardId;
      }
      if (other.CardRemainSeconds != 0) {
        CardRemainSeconds = other.CardRemainSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuildingId = input.ReadInt32();
            break;
          }
          case 16: {
            CardId = input.ReadInt32();
            break;
          }
          case 24: {
            CardRemainSeconds = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CFosterEquipCardResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12107,
      }

    }
    #endregion

  }

  /// <summary>
  /// 卸载寄养卡
  /// </summary>
  public sealed partial class C2SFosterUnequipCard : pb::IMessage<C2SFosterUnequipCard> {
    private static readonly pb::MessageParser<C2SFosterUnequipCard> _parser = new pb::MessageParser<C2SFosterUnequipCard>(() => new C2SFosterUnequipCard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SFosterUnequipCard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[279]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFosterUnequipCard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFosterUnequipCard(C2SFosterUnequipCard other) : this() {
      buildingId_ = other.buildingId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFosterUnequipCard Clone() {
      return new C2SFosterUnequipCard(this);
    }

    /// <summary>Field number for the "BuildingId" field.</summary>
    public const int BuildingIdFieldNumber = 1;
    private int buildingId_;
    /// <summary>
    /// 寄养所建筑ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildingId {
      get { return buildingId_; }
      set {
        buildingId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SFosterUnequipCard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SFosterUnequipCard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildingId != other.BuildingId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuildingId != 0) hash ^= BuildingId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuildingId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuildingId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuildingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SFosterUnequipCard other) {
      if (other == null) {
        return;
      }
      if (other.BuildingId != 0) {
        BuildingId = other.BuildingId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuildingId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SFosterUnequipCard message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12108,
      }

    }
    #endregion

  }

  public sealed partial class S2CFosterUnequipCardResult : pb::IMessage<S2CFosterUnequipCardResult> {
    private static readonly pb::MessageParser<S2CFosterUnequipCardResult> _parser = new pb::MessageParser<S2CFosterUnequipCardResult>(() => new S2CFosterUnequipCardResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CFosterUnequipCardResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[280]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFosterUnequipCardResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFosterUnequipCardResult(S2CFosterUnequipCardResult other) : this() {
      buildingId_ = other.buildingId_;
      rewards_ = other.rewards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFosterUnequipCardResult Clone() {
      return new S2CFosterUnequipCardResult(this);
    }

    /// <summary>Field number for the "BuildingId" field.</summary>
    public const int BuildingIdFieldNumber = 1;
    private int buildingId_;
    /// <summary>
    /// 寄养所建筑ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildingId {
      get { return buildingId_; }
      set {
        buildingId_ = value;
      }
    }

    /// <summary>Field number for the "Rewards" field.</summary>
    public const int RewardsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ItemInfo> _repeated_rewards_codec
        = pb::FieldCodec.ForMessage(18, global::Msg.ClientMessage.ItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> rewards_ = new pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo>();
    /// <summary>
    /// 结算
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> Rewards {
      get { return rewards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CFosterUnequipCardResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CFosterUnequipCardResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildingId != other.BuildingId) return false;
      if(!rewards_.Equals(other.rewards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuildingId != 0) hash ^= BuildingId.GetHashCode();
      hash ^= rewards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuildingId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuildingId);
      }
      rewards_.WriteTo(output, _repeated_rewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuildingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingId);
      }
      size += rewards_.CalculateSize(_repeated_rewards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CFosterUnequipCardResult other) {
      if (other == null) {
        return;
      }
      if (other.BuildingId != 0) {
        BuildingId = other.BuildingId;
      }
      rewards_.Add(other.rewards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuildingId = input.ReadInt32();
            break;
          }
          case 18: {
            rewards_.AddEntriesFrom(input, _repeated_rewards_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CFosterUnequipCardResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12109,
      }

    }
    #endregion

  }

  /// <summary>
  /// 猫进寄养所
  /// </summary>
  public sealed partial class C2SFosterSetCat : pb::IMessage<C2SFosterSetCat> {
    private static readonly pb::MessageParser<C2SFosterSetCat> _parser = new pb::MessageParser<C2SFosterSetCat>(() => new C2SFosterSetCat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SFosterSetCat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[281]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFosterSetCat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFosterSetCat(C2SFosterSetCat other) : this() {
      buildingId_ = other.buildingId_;
      catId_ = other.catId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFosterSetCat Clone() {
      return new C2SFosterSetCat(this);
    }

    /// <summary>Field number for the "BuildingId" field.</summary>
    public const int BuildingIdFieldNumber = 1;
    private int buildingId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildingId {
      get { return buildingId_; }
      set {
        buildingId_ = value;
      }
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 2;
    private int catId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SFosterSetCat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SFosterSetCat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildingId != other.BuildingId) return false;
      if (CatId != other.CatId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuildingId != 0) hash ^= BuildingId.GetHashCode();
      if (CatId != 0) hash ^= CatId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuildingId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuildingId);
      }
      if (CatId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CatId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuildingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingId);
      }
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SFosterSetCat other) {
      if (other == null) {
        return;
      }
      if (other.BuildingId != 0) {
        BuildingId = other.BuildingId;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuildingId = input.ReadInt32();
            break;
          }
          case 16: {
            CatId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SFosterSetCat message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12110,
      }

    }
    #endregion

  }

  public sealed partial class S2CFosterSetCatResult : pb::IMessage<S2CFosterSetCatResult> {
    private static readonly pb::MessageParser<S2CFosterSetCatResult> _parser = new pb::MessageParser<S2CFosterSetCatResult>(() => new S2CFosterSetCatResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CFosterSetCatResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[282]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFosterSetCatResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFosterSetCatResult(S2CFosterSetCatResult other) : this() {
      buildingId_ = other.buildingId_;
      catId_ = other.catId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFosterSetCatResult Clone() {
      return new S2CFosterSetCatResult(this);
    }

    /// <summary>Field number for the "BuildingId" field.</summary>
    public const int BuildingIdFieldNumber = 1;
    private int buildingId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildingId {
      get { return buildingId_; }
      set {
        buildingId_ = value;
      }
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 2;
    private int catId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CFosterSetCatResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CFosterSetCatResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildingId != other.BuildingId) return false;
      if (CatId != other.CatId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuildingId != 0) hash ^= BuildingId.GetHashCode();
      if (CatId != 0) hash ^= CatId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuildingId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuildingId);
      }
      if (CatId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CatId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuildingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingId);
      }
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CFosterSetCatResult other) {
      if (other == null) {
        return;
      }
      if (other.BuildingId != 0) {
        BuildingId = other.BuildingId;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuildingId = input.ReadInt32();
            break;
          }
          case 16: {
            CatId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CFosterSetCatResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12111,
      }

    }
    #endregion

  }

  /// <summary>
  /// 猫出寄养所
  /// </summary>
  public sealed partial class C2SFosterOutCat : pb::IMessage<C2SFosterOutCat> {
    private static readonly pb::MessageParser<C2SFosterOutCat> _parser = new pb::MessageParser<C2SFosterOutCat>(() => new C2SFosterOutCat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SFosterOutCat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[283]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFosterOutCat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFosterOutCat(C2SFosterOutCat other) : this() {
      buildingId_ = other.buildingId_;
      catId_ = other.catId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFosterOutCat Clone() {
      return new C2SFosterOutCat(this);
    }

    /// <summary>Field number for the "BuildingId" field.</summary>
    public const int BuildingIdFieldNumber = 1;
    private int buildingId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildingId {
      get { return buildingId_; }
      set {
        buildingId_ = value;
      }
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 2;
    private int catId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SFosterOutCat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SFosterOutCat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildingId != other.BuildingId) return false;
      if (CatId != other.CatId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuildingId != 0) hash ^= BuildingId.GetHashCode();
      if (CatId != 0) hash ^= CatId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuildingId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuildingId);
      }
      if (CatId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CatId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuildingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingId);
      }
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SFosterOutCat other) {
      if (other == null) {
        return;
      }
      if (other.BuildingId != 0) {
        BuildingId = other.BuildingId;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuildingId = input.ReadInt32();
            break;
          }
          case 16: {
            CatId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SFosterOutCat message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12112,
      }

    }
    #endregion

  }

  public sealed partial class S2CFosterOutCatResult : pb::IMessage<S2CFosterOutCatResult> {
    private static readonly pb::MessageParser<S2CFosterOutCatResult> _parser = new pb::MessageParser<S2CFosterOutCatResult>(() => new S2CFosterOutCatResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CFosterOutCatResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[284]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFosterOutCatResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFosterOutCatResult(S2CFosterOutCatResult other) : this() {
      buildingId_ = other.buildingId_;
      catId_ = other.catId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFosterOutCatResult Clone() {
      return new S2CFosterOutCatResult(this);
    }

    /// <summary>Field number for the "BuildingId" field.</summary>
    public const int BuildingIdFieldNumber = 1;
    private int buildingId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildingId {
      get { return buildingId_; }
      set {
        buildingId_ = value;
      }
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 2;
    private int catId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CFosterOutCatResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CFosterOutCatResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildingId != other.BuildingId) return false;
      if (CatId != other.CatId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuildingId != 0) hash ^= BuildingId.GetHashCode();
      if (CatId != 0) hash ^= CatId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuildingId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuildingId);
      }
      if (CatId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CatId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuildingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingId);
      }
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CFosterOutCatResult other) {
      if (other == null) {
        return;
      }
      if (other.BuildingId != 0) {
        BuildingId = other.BuildingId;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuildingId = input.ReadInt32();
            break;
          }
          case 16: {
            CatId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CFosterOutCatResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12113,
      }

    }
    #endregion

  }

  /// <summary>
  /// 猫进好友寄养所
  /// </summary>
  public sealed partial class C2SFosterSetCat2Friend : pb::IMessage<C2SFosterSetCat2Friend> {
    private static readonly pb::MessageParser<C2SFosterSetCat2Friend> _parser = new pb::MessageParser<C2SFosterSetCat2Friend>(() => new C2SFosterSetCat2Friend());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SFosterSetCat2Friend> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[285]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFosterSetCat2Friend() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFosterSetCat2Friend(C2SFosterSetCat2Friend other) : this() {
      friendId_ = other.friendId_;
      catId_ = other.catId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFosterSetCat2Friend Clone() {
      return new C2SFosterSetCat2Friend(this);
    }

    /// <summary>Field number for the "FriendId" field.</summary>
    public const int FriendIdFieldNumber = 1;
    private int friendId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendId {
      get { return friendId_; }
      set {
        friendId_ = value;
      }
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 2;
    private int catId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SFosterSetCat2Friend);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SFosterSetCat2Friend other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FriendId != other.FriendId) return false;
      if (CatId != other.CatId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FriendId != 0) hash ^= FriendId.GetHashCode();
      if (CatId != 0) hash ^= CatId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FriendId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FriendId);
      }
      if (CatId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CatId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FriendId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendId);
      }
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SFosterSetCat2Friend other) {
      if (other == null) {
        return;
      }
      if (other.FriendId != 0) {
        FriendId = other.FriendId;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FriendId = input.ReadInt32();
            break;
          }
          case 16: {
            CatId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SFosterSetCat2Friend message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12114,
      }

    }
    #endregion

  }

  public sealed partial class S2CFosterSetCat2FriendResult : pb::IMessage<S2CFosterSetCat2FriendResult> {
    private static readonly pb::MessageParser<S2CFosterSetCat2FriendResult> _parser = new pb::MessageParser<S2CFosterSetCat2FriendResult>(() => new S2CFosterSetCat2FriendResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CFosterSetCat2FriendResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[286]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFosterSetCat2FriendResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFosterSetCat2FriendResult(S2CFosterSetCat2FriendResult other) : this() {
      friendId_ = other.friendId_;
      catId_ = other.catId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFosterSetCat2FriendResult Clone() {
      return new S2CFosterSetCat2FriendResult(this);
    }

    /// <summary>Field number for the "FriendId" field.</summary>
    public const int FriendIdFieldNumber = 1;
    private int friendId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendId {
      get { return friendId_; }
      set {
        friendId_ = value;
      }
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 2;
    private int catId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CFosterSetCat2FriendResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CFosterSetCat2FriendResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FriendId != other.FriendId) return false;
      if (CatId != other.CatId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FriendId != 0) hash ^= FriendId.GetHashCode();
      if (CatId != 0) hash ^= CatId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FriendId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FriendId);
      }
      if (CatId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CatId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FriendId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendId);
      }
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CFosterSetCat2FriendResult other) {
      if (other == null) {
        return;
      }
      if (other.FriendId != 0) {
        FriendId = other.FriendId;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FriendId = input.ReadInt32();
            break;
          }
          case 16: {
            CatId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CFosterSetCat2FriendResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12115,
      }

    }
    #endregion

  }

  /// <summary>
  /// 获取有寄养空位的好友列表
  /// </summary>
  public sealed partial class C2SFosterGetEmptySlotFriends : pb::IMessage<C2SFosterGetEmptySlotFriends> {
    private static readonly pb::MessageParser<C2SFosterGetEmptySlotFriends> _parser = new pb::MessageParser<C2SFosterGetEmptySlotFriends>(() => new C2SFosterGetEmptySlotFriends());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SFosterGetEmptySlotFriends> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[287]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFosterGetEmptySlotFriends() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFosterGetEmptySlotFriends(C2SFosterGetEmptySlotFriends other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFosterGetEmptySlotFriends Clone() {
      return new C2SFosterGetEmptySlotFriends(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SFosterGetEmptySlotFriends);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SFosterGetEmptySlotFriends other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SFosterGetEmptySlotFriends other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SFosterGetEmptySlotFriends message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12116,
      }

    }
    #endregion

  }

  public sealed partial class S2CFosterGetEmptySlotFriendsResult : pb::IMessage<S2CFosterGetEmptySlotFriendsResult> {
    private static readonly pb::MessageParser<S2CFosterGetEmptySlotFriendsResult> _parser = new pb::MessageParser<S2CFosterGetEmptySlotFriendsResult>(() => new S2CFosterGetEmptySlotFriendsResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CFosterGetEmptySlotFriendsResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[288]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFosterGetEmptySlotFriendsResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFosterGetEmptySlotFriendsResult(S2CFosterGetEmptySlotFriendsResult other) : this() {
      friends_ = other.friends_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFosterGetEmptySlotFriendsResult Clone() {
      return new S2CFosterGetEmptySlotFriendsResult(this);
    }

    /// <summary>Field number for the "Friends" field.</summary>
    public const int FriendsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.FriendInfo> _repeated_friends_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.FriendInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.FriendInfo> friends_ = new pbc::RepeatedField<global::Msg.ClientMessage.FriendInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.FriendInfo> Friends {
      get { return friends_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CFosterGetEmptySlotFriendsResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CFosterGetEmptySlotFriendsResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!friends_.Equals(other.friends_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= friends_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      friends_.WriteTo(output, _repeated_friends_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += friends_.CalculateSize(_repeated_friends_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CFosterGetEmptySlotFriendsResult other) {
      if (other == null) {
        return;
      }
      friends_.Add(other.friends_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            friends_.AddEntriesFrom(input, _repeated_friends_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CFosterGetEmptySlotFriendsResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12117,
      }

    }
    #endregion

  }

  /// <summary>
  /// 获取玩家的寄养所
  /// </summary>
  public sealed partial class C2SGetPlayerFosterCats : pb::IMessage<C2SGetPlayerFosterCats> {
    private static readonly pb::MessageParser<C2SGetPlayerFosterCats> _parser = new pb::MessageParser<C2SGetPlayerFosterCats>(() => new C2SGetPlayerFosterCats());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetPlayerFosterCats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[289]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetPlayerFosterCats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetPlayerFosterCats(C2SGetPlayerFosterCats other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetPlayerFosterCats Clone() {
      return new C2SGetPlayerFosterCats(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetPlayerFosterCats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetPlayerFosterCats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetPlayerFosterCats other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetPlayerFosterCats message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12118,
      }

    }
    #endregion

  }

  public sealed partial class FosterPlayerCatInfo : pb::IMessage<FosterPlayerCatInfo> {
    private static readonly pb::MessageParser<FosterPlayerCatInfo> _parser = new pb::MessageParser<FosterPlayerCatInfo>(() => new FosterPlayerCatInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FosterPlayerCatInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[290]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FosterPlayerCatInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FosterPlayerCatInfo(FosterPlayerCatInfo other) : this() {
      catTableId_ = other.catTableId_;
      catLevel_ = other.catLevel_;
      catStar_ = other.catStar_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FosterPlayerCatInfo Clone() {
      return new FosterPlayerCatInfo(this);
    }

    /// <summary>Field number for the "CatTableId" field.</summary>
    public const int CatTableIdFieldNumber = 1;
    private int catTableId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatTableId {
      get { return catTableId_; }
      set {
        catTableId_ = value;
      }
    }

    /// <summary>Field number for the "CatLevel" field.</summary>
    public const int CatLevelFieldNumber = 2;
    private int catLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatLevel {
      get { return catLevel_; }
      set {
        catLevel_ = value;
      }
    }

    /// <summary>Field number for the "CatStar" field.</summary>
    public const int CatStarFieldNumber = 3;
    private int catStar_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatStar {
      get { return catStar_; }
      set {
        catStar_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FosterPlayerCatInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FosterPlayerCatInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatTableId != other.CatTableId) return false;
      if (CatLevel != other.CatLevel) return false;
      if (CatStar != other.CatStar) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatTableId != 0) hash ^= CatTableId.GetHashCode();
      if (CatLevel != 0) hash ^= CatLevel.GetHashCode();
      if (CatStar != 0) hash ^= CatStar.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatTableId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatTableId);
      }
      if (CatLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CatLevel);
      }
      if (CatStar != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CatStar);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatTableId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatTableId);
      }
      if (CatLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatLevel);
      }
      if (CatStar != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatStar);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FosterPlayerCatInfo other) {
      if (other == null) {
        return;
      }
      if (other.CatTableId != 0) {
        CatTableId = other.CatTableId;
      }
      if (other.CatLevel != 0) {
        CatLevel = other.CatLevel;
      }
      if (other.CatStar != 0) {
        CatStar = other.CatStar;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatTableId = input.ReadInt32();
            break;
          }
          case 16: {
            CatLevel = input.ReadInt32();
            break;
          }
          case 24: {
            CatStar = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FosterPlayerSelfCatInfo : pb::IMessage<FosterPlayerSelfCatInfo> {
    private static readonly pb::MessageParser<FosterPlayerSelfCatInfo> _parser = new pb::MessageParser<FosterPlayerSelfCatInfo>(() => new FosterPlayerSelfCatInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FosterPlayerSelfCatInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[291]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FosterPlayerSelfCatInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FosterPlayerSelfCatInfo(FosterPlayerSelfCatInfo other) : this() {
      catId_ = other.catId_;
      startCardId_ = other.startCardId_;
      remainSeconds_ = other.remainSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FosterPlayerSelfCatInfo Clone() {
      return new FosterPlayerSelfCatInfo(this);
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 1;
    private int catId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    /// <summary>Field number for the "StartCardId" field.</summary>
    public const int StartCardIdFieldNumber = 2;
    private int startCardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartCardId {
      get { return startCardId_; }
      set {
        startCardId_ = value;
      }
    }

    /// <summary>Field number for the "RemainSeconds" field.</summary>
    public const int RemainSecondsFieldNumber = 3;
    private int remainSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RemainSeconds {
      get { return remainSeconds_; }
      set {
        remainSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FosterPlayerSelfCatInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FosterPlayerSelfCatInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatId != other.CatId) return false;
      if (StartCardId != other.StartCardId) return false;
      if (RemainSeconds != other.RemainSeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatId != 0) hash ^= CatId.GetHashCode();
      if (StartCardId != 0) hash ^= StartCardId.GetHashCode();
      if (RemainSeconds != 0) hash ^= RemainSeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatId);
      }
      if (StartCardId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(StartCardId);
      }
      if (RemainSeconds != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RemainSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      if (StartCardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartCardId);
      }
      if (RemainSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainSeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FosterPlayerSelfCatInfo other) {
      if (other == null) {
        return;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      if (other.StartCardId != 0) {
        StartCardId = other.StartCardId;
      }
      if (other.RemainSeconds != 0) {
        RemainSeconds = other.RemainSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatId = input.ReadInt32();
            break;
          }
          case 16: {
            StartCardId = input.ReadInt32();
            break;
          }
          case 24: {
            RemainSeconds = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CGetPlayerFosterCatsResult : pb::IMessage<S2CGetPlayerFosterCatsResult> {
    private static readonly pb::MessageParser<S2CGetPlayerFosterCatsResult> _parser = new pb::MessageParser<S2CGetPlayerFosterCatsResult>(() => new S2CGetPlayerFosterCatsResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGetPlayerFosterCatsResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[292]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetPlayerFosterCatsResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetPlayerFosterCatsResult(S2CGetPlayerFosterCatsResult other) : this() {
      playerId_ = other.playerId_;
      fosterCardId_ = other.fosterCardId_;
      cardRemainSeconds_ = other.cardRemainSeconds_;
      cats_ = other.cats_.Clone();
      friendCats_ = other.friendCats_.Clone();
      fosteredSlotNum_ = other.fosteredSlotNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetPlayerFosterCatsResult Clone() {
      return new S2CGetPlayerFosterCatsResult(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "FosterCardId" field.</summary>
    public const int FosterCardIdFieldNumber = 2;
    private int fosterCardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FosterCardId {
      get { return fosterCardId_; }
      set {
        fosterCardId_ = value;
      }
    }

    /// <summary>Field number for the "CardRemainSeconds" field.</summary>
    public const int CardRemainSecondsFieldNumber = 3;
    private int cardRemainSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CardRemainSeconds {
      get { return cardRemainSeconds_; }
      set {
        cardRemainSeconds_ = value;
      }
    }

    /// <summary>Field number for the "Cats" field.</summary>
    public const int CatsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.FosterPlayerCatInfo> _repeated_cats_codec
        = pb::FieldCodec.ForMessage(34, global::Msg.ClientMessage.FosterPlayerCatInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.FosterPlayerCatInfo> cats_ = new pbc::RepeatedField<global::Msg.ClientMessage.FosterPlayerCatInfo>();
    /// <summary>
    /// 玩家寄养所的猫
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.FosterPlayerCatInfo> Cats {
      get { return cats_; }
    }

    /// <summary>Field number for the "FriendCats" field.</summary>
    public const int FriendCatsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.FosteredFriendCatInfo> _repeated_friendCats_codec
        = pb::FieldCodec.ForMessage(42, global::Msg.ClientMessage.FosteredFriendCatInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.FosteredFriendCatInfo> friendCats_ = new pbc::RepeatedField<global::Msg.ClientMessage.FosteredFriendCatInfo>();
    /// <summary>
    /// 玩家好友寄养的猫
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.FosteredFriendCatInfo> FriendCats {
      get { return friendCats_; }
    }

    /// <summary>Field number for the "FosteredSlotNum" field.</summary>
    public const int FosteredSlotNumFieldNumber = 6;
    private int fosteredSlotNum_;
    /// <summary>
    /// 寄养槽位数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FosteredSlotNum {
      get { return fosteredSlotNum_; }
      set {
        fosteredSlotNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGetPlayerFosterCatsResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGetPlayerFosterCatsResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (FosterCardId != other.FosterCardId) return false;
      if (CardRemainSeconds != other.CardRemainSeconds) return false;
      if(!cats_.Equals(other.cats_)) return false;
      if(!friendCats_.Equals(other.friendCats_)) return false;
      if (FosteredSlotNum != other.FosteredSlotNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (FosterCardId != 0) hash ^= FosterCardId.GetHashCode();
      if (CardRemainSeconds != 0) hash ^= CardRemainSeconds.GetHashCode();
      hash ^= cats_.GetHashCode();
      hash ^= friendCats_.GetHashCode();
      if (FosteredSlotNum != 0) hash ^= FosteredSlotNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (FosterCardId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FosterCardId);
      }
      if (CardRemainSeconds != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CardRemainSeconds);
      }
      cats_.WriteTo(output, _repeated_cats_codec);
      friendCats_.WriteTo(output, _repeated_friendCats_codec);
      if (FosteredSlotNum != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(FosteredSlotNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (FosterCardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FosterCardId);
      }
      if (CardRemainSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CardRemainSeconds);
      }
      size += cats_.CalculateSize(_repeated_cats_codec);
      size += friendCats_.CalculateSize(_repeated_friendCats_codec);
      if (FosteredSlotNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FosteredSlotNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGetPlayerFosterCatsResult other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.FosterCardId != 0) {
        FosterCardId = other.FosterCardId;
      }
      if (other.CardRemainSeconds != 0) {
        CardRemainSeconds = other.CardRemainSeconds;
      }
      cats_.Add(other.cats_);
      friendCats_.Add(other.friendCats_);
      if (other.FosteredSlotNum != 0) {
        FosteredSlotNum = other.FosteredSlotNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            FosterCardId = input.ReadInt32();
            break;
          }
          case 24: {
            CardRemainSeconds = input.ReadInt32();
            break;
          }
          case 34: {
            cats_.AddEntriesFrom(input, _repeated_cats_codec);
            break;
          }
          case 42: {
            friendCats_.AddEntriesFrom(input, _repeated_friendCats_codec);
            break;
          }
          case 48: {
            FosteredSlotNum = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGetPlayerFosterCatsResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12119,
      }

    }
    #endregion

  }

  /// <summary>
  /// ----------------------------------- 排行榜 ---------------------------------
  /// 排行项
  /// </summary>
  public sealed partial class RankItemInfo : pb::IMessage<RankItemInfo> {
    private static readonly pb::MessageParser<RankItemInfo> _parser = new pb::MessageParser<RankItemInfo>(() => new RankItemInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RankItemInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[293]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankItemInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankItemInfo(RankItemInfo other) : this() {
      rank_ = other.rank_;
      playerId_ = other.playerId_;
      playerName_ = other.playerName_;
      playerLevel_ = other.playerLevel_;
      playerHead_ = other.playerHead_;
      playerValue_ = other.playerValue_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankItemInfo Clone() {
      return new RankItemInfo(this);
    }

    /// <summary>Field number for the "Rank" field.</summary>
    public const int RankFieldNumber = 1;
    private int rank_;
    /// <summary>
    /// 排名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rank {
      get { return rank_; }
      set {
        rank_ = value;
      }
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private int playerId_;
    /// <summary>
    /// 玩家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "PlayerName" field.</summary>
    public const int PlayerNameFieldNumber = 3;
    private string playerName_ = "";
    /// <summary>
    /// 玩家昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PlayerLevel" field.</summary>
    public const int PlayerLevelFieldNumber = 4;
    private int playerLevel_;
    /// <summary>
    /// 玩家等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerLevel {
      get { return playerLevel_; }
      set {
        playerLevel_ = value;
      }
    }

    /// <summary>Field number for the "PlayerHead" field.</summary>
    public const int PlayerHeadFieldNumber = 5;
    private int playerHead_;
    /// <summary>
    /// 玩家头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerHead {
      get { return playerHead_; }
      set {
        playerHead_ = value;
      }
    }

    /// <summary>Field number for the "PlayerValue" field.</summary>
    public const int PlayerValueFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_playerValue_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> playerValue_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 数值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> PlayerValue {
      get { return playerValue_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RankItemInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RankItemInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Rank != other.Rank) return false;
      if (PlayerId != other.PlayerId) return false;
      if (PlayerName != other.PlayerName) return false;
      if (PlayerLevel != other.PlayerLevel) return false;
      if (PlayerHead != other.PlayerHead) return false;
      if(!playerValue_.Equals(other.playerValue_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Rank != 0) hash ^= Rank.GetHashCode();
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (PlayerLevel != 0) hash ^= PlayerLevel.GetHashCode();
      if (PlayerHead != 0) hash ^= PlayerHead.GetHashCode();
      hash ^= playerValue_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Rank != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Rank);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PlayerName);
      }
      if (PlayerLevel != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PlayerLevel);
      }
      if (PlayerHead != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PlayerHead);
      }
      playerValue_.WriteTo(output, _repeated_playerValue_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Rank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rank);
      }
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (PlayerLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerLevel);
      }
      if (PlayerHead != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerHead);
      }
      size += playerValue_.CalculateSize(_repeated_playerValue_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RankItemInfo other) {
      if (other == null) {
        return;
      }
      if (other.Rank != 0) {
        Rank = other.Rank;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      if (other.PlayerLevel != 0) {
        PlayerLevel = other.PlayerLevel;
      }
      if (other.PlayerHead != 0) {
        PlayerHead = other.PlayerHead;
      }
      playerValue_.Add(other.playerValue_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Rank = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 26: {
            PlayerName = input.ReadString();
            break;
          }
          case 32: {
            PlayerLevel = input.ReadInt32();
            break;
          }
          case 40: {
            PlayerHead = input.ReadInt32();
            break;
          }
          case 50:
          case 48: {
            playerValue_.AddEntriesFrom(input, _repeated_playerValue_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 请求排行榜
  /// </summary>
  public sealed partial class C2SRankListRequest : pb::IMessage<C2SRankListRequest> {
    private static readonly pb::MessageParser<C2SRankListRequest> _parser = new pb::MessageParser<C2SRankListRequest>(() => new C2SRankListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SRankListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[294]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SRankListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SRankListRequest(C2SRankListRequest other) : this() {
      rankType_ = other.rankType_;
      startRank_ = other.startRank_;
      rankNum_ = other.rankNum_;
      params_ = other.params_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SRankListRequest Clone() {
      return new C2SRankListRequest(this);
    }

    /// <summary>Field number for the "RankType" field.</summary>
    public const int RankTypeFieldNumber = 1;
    private int rankType_;
    /// <summary>
    /// 排行榜类型    1 关卡总分  2 魅力  3 欧气  4 被赞
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RankType {
      get { return rankType_; }
      set {
        rankType_ = value;
      }
    }

    /// <summary>Field number for the "StartRank" field.</summary>
    public const int StartRankFieldNumber = 2;
    private int startRank_;
    /// <summary>
    /// 开始
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartRank {
      get { return startRank_; }
      set {
        startRank_ = value;
      }
    }

    /// <summary>Field number for the "RankNum" field.</summary>
    public const int RankNumFieldNumber = 3;
    private int rankNum_;
    /// <summary>
    /// 数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RankNum {
      get { return rankNum_; }
      set {
        rankNum_ = value;
      }
    }

    /// <summary>Field number for the "Params" field.</summary>
    public const int ParamsFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_params_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> params_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 参数, 跟具体类型有关
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Params {
      get { return params_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SRankListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SRankListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RankType != other.RankType) return false;
      if (StartRank != other.StartRank) return false;
      if (RankNum != other.RankNum) return false;
      if(!params_.Equals(other.params_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RankType != 0) hash ^= RankType.GetHashCode();
      if (StartRank != 0) hash ^= StartRank.GetHashCode();
      if (RankNum != 0) hash ^= RankNum.GetHashCode();
      hash ^= params_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RankType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RankType);
      }
      if (StartRank != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(StartRank);
      }
      if (RankNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RankNum);
      }
      params_.WriteTo(output, _repeated_params_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RankType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RankType);
      }
      if (StartRank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartRank);
      }
      if (RankNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RankNum);
      }
      size += params_.CalculateSize(_repeated_params_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SRankListRequest other) {
      if (other == null) {
        return;
      }
      if (other.RankType != 0) {
        RankType = other.RankType;
      }
      if (other.StartRank != 0) {
        StartRank = other.StartRank;
      }
      if (other.RankNum != 0) {
        RankNum = other.RankNum;
      }
      params_.Add(other.params_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RankType = input.ReadInt32();
            break;
          }
          case 16: {
            StartRank = input.ReadInt32();
            break;
          }
          case 24: {
            RankNum = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            params_.AddEntriesFrom(input, _repeated_params_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SRankListRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12200,
      }

    }
    #endregion

  }

  public sealed partial class S2CRankListResponse : pb::IMessage<S2CRankListResponse> {
    private static readonly pb::MessageParser<S2CRankListResponse> _parser = new pb::MessageParser<S2CRankListResponse>(() => new S2CRankListResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CRankListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[295]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRankListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRankListResponse(S2CRankListResponse other) : this() {
      rankListType_ = other.rankListType_;
      rankItems_ = other.rankItems_.Clone();
      selfHistoryTopRank_ = other.selfHistoryTopRank_;
      selfRank_ = other.selfRank_;
      selfValue_ = other.selfValue_;
      selfValue2_ = other.selfValue2_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRankListResponse Clone() {
      return new S2CRankListResponse(this);
    }

    /// <summary>Field number for the "RankListType" field.</summary>
    public const int RankListTypeFieldNumber = 1;
    private int rankListType_;
    /// <summary>
    /// 排行榜类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RankListType {
      get { return rankListType_; }
      set {
        rankListType_ = value;
      }
    }

    /// <summary>Field number for the "RankItems" field.</summary>
    public const int RankItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.RankItemInfo> _repeated_rankItems_codec
        = pb::FieldCodec.ForMessage(18, global::Msg.ClientMessage.RankItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.RankItemInfo> rankItems_ = new pbc::RepeatedField<global::Msg.ClientMessage.RankItemInfo>();
    /// <summary>
    /// 排名项
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.RankItemInfo> RankItems {
      get { return rankItems_; }
    }

    /// <summary>Field number for the "SelfHistoryTopRank" field.</summary>
    public const int SelfHistoryTopRankFieldNumber = 3;
    private int selfHistoryTopRank_;
    /// <summary>
    /// 自己历史最高排名，暂时只有竞技场有
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SelfHistoryTopRank {
      get { return selfHistoryTopRank_; }
      set {
        selfHistoryTopRank_ = value;
      }
    }

    /// <summary>Field number for the "SelfRank" field.</summary>
    public const int SelfRankFieldNumber = 4;
    private int selfRank_;
    /// <summary>
    /// 自己排名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SelfRank {
      get { return selfRank_; }
      set {
        selfRank_ = value;
      }
    }

    /// <summary>Field number for the "SelfValue" field.</summary>
    public const int SelfValueFieldNumber = 5;
    private int selfValue_;
    /// <summary>
    /// 数据值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SelfValue {
      get { return selfValue_; }
      set {
        selfValue_ = value;
      }
    }

    /// <summary>Field number for the "SelfValue2" field.</summary>
    public const int SelfValue2FieldNumber = 6;
    private int selfValue2_;
    /// <summary>
    /// 数据值2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SelfValue2 {
      get { return selfValue2_; }
      set {
        selfValue2_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CRankListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CRankListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RankListType != other.RankListType) return false;
      if(!rankItems_.Equals(other.rankItems_)) return false;
      if (SelfHistoryTopRank != other.SelfHistoryTopRank) return false;
      if (SelfRank != other.SelfRank) return false;
      if (SelfValue != other.SelfValue) return false;
      if (SelfValue2 != other.SelfValue2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RankListType != 0) hash ^= RankListType.GetHashCode();
      hash ^= rankItems_.GetHashCode();
      if (SelfHistoryTopRank != 0) hash ^= SelfHistoryTopRank.GetHashCode();
      if (SelfRank != 0) hash ^= SelfRank.GetHashCode();
      if (SelfValue != 0) hash ^= SelfValue.GetHashCode();
      if (SelfValue2 != 0) hash ^= SelfValue2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RankListType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RankListType);
      }
      rankItems_.WriteTo(output, _repeated_rankItems_codec);
      if (SelfHistoryTopRank != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SelfHistoryTopRank);
      }
      if (SelfRank != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SelfRank);
      }
      if (SelfValue != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(SelfValue);
      }
      if (SelfValue2 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(SelfValue2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RankListType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RankListType);
      }
      size += rankItems_.CalculateSize(_repeated_rankItems_codec);
      if (SelfHistoryTopRank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SelfHistoryTopRank);
      }
      if (SelfRank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SelfRank);
      }
      if (SelfValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SelfValue);
      }
      if (SelfValue2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SelfValue2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CRankListResponse other) {
      if (other == null) {
        return;
      }
      if (other.RankListType != 0) {
        RankListType = other.RankListType;
      }
      rankItems_.Add(other.rankItems_);
      if (other.SelfHistoryTopRank != 0) {
        SelfHistoryTopRank = other.SelfHistoryTopRank;
      }
      if (other.SelfRank != 0) {
        SelfRank = other.SelfRank;
      }
      if (other.SelfValue != 0) {
        SelfValue = other.SelfValue;
      }
      if (other.SelfValue2 != 0) {
        SelfValue2 = other.SelfValue2;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RankListType = input.ReadInt32();
            break;
          }
          case 18: {
            rankItems_.AddEntriesFrom(input, _repeated_rankItems_codec);
            break;
          }
          case 24: {
            SelfHistoryTopRank = input.ReadInt32();
            break;
          }
          case 32: {
            SelfRank = input.ReadInt32();
            break;
          }
          case 40: {
            SelfValue = input.ReadInt32();
            break;
          }
          case 48: {
            SelfValue2 = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CRankListResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12201,
      }

    }
    #endregion

  }

  /// <summary>
  /// ----------------------------------- 聊天 -----------------------------------
  /// 发送世界聊天消息
  /// </summary>
  public sealed partial class C2SChatRequest : pb::IMessage<C2SChatRequest> {
    private static readonly pb::MessageParser<C2SChatRequest> _parser = new pb::MessageParser<C2SChatRequest>(() => new C2SChatRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SChatRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[296]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChatRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChatRequest(C2SChatRequest other) : this() {
      channel_ = other.channel_;
      content_ = other.content_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChatRequest Clone() {
      return new C2SChatRequest(this);
    }

    /// <summary>Field number for the "Channel" field.</summary>
    public const int ChannelFieldNumber = 1;
    private int channel_;
    /// <summary>
    /// 频道  1 世界  2 公会  3 招募  4 系统公告
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Channel {
      get { return channel_; }
      set {
        channel_ = value;
      }
    }

    /// <summary>Field number for the "Content" field.</summary>
    public const int ContentFieldNumber = 2;
    private pb::ByteString content_ = pb::ByteString.Empty;
    /// <summary>
    /// 内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SChatRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SChatRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Channel != other.Channel) return false;
      if (Content != other.Content) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Channel != 0) hash ^= Channel.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Channel != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Channel);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Channel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Channel);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SChatRequest other) {
      if (other == null) {
        return;
      }
      if (other.Channel != 0) {
        Channel = other.Channel;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Channel = input.ReadInt32();
            break;
          }
          case 18: {
            Content = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SChatRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12300,
      }

    }
    #endregion

  }

  public sealed partial class S2CChatResponse : pb::IMessage<S2CChatResponse> {
    private static readonly pb::MessageParser<S2CChatResponse> _parser = new pb::MessageParser<S2CChatResponse>(() => new S2CChatResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CChatResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[297]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChatResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChatResponse(S2CChatResponse other) : this() {
      channel_ = other.channel_;
      content_ = other.content_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChatResponse Clone() {
      return new S2CChatResponse(this);
    }

    /// <summary>Field number for the "Channel" field.</summary>
    public const int ChannelFieldNumber = 1;
    private int channel_;
    /// <summary>
    /// 频道  1 世界  2 公会  3 招募  4 系统公告
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Channel {
      get { return channel_; }
      set {
        channel_ = value;
      }
    }

    /// <summary>Field number for the "Content" field.</summary>
    public const int ContentFieldNumber = 2;
    private pb::ByteString content_ = pb::ByteString.Empty;
    /// <summary>
    /// 内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CChatResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CChatResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Channel != other.Channel) return false;
      if (Content != other.Content) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Channel != 0) hash ^= Channel.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Channel != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Channel);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Channel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Channel);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CChatResponse other) {
      if (other == null) {
        return;
      }
      if (other.Channel != 0) {
        Channel = other.Channel;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Channel = input.ReadInt32();
            break;
          }
          case 18: {
            Content = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CChatResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12301,
      }

    }
    #endregion

  }

  /// <summary>
  /// 拉取聊天消息
  /// </summary>
  public sealed partial class C2SChatMsgPullRequest : pb::IMessage<C2SChatMsgPullRequest> {
    private static readonly pb::MessageParser<C2SChatMsgPullRequest> _parser = new pb::MessageParser<C2SChatMsgPullRequest>(() => new C2SChatMsgPullRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SChatMsgPullRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[298]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChatMsgPullRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChatMsgPullRequest(C2SChatMsgPullRequest other) : this() {
      channel_ = other.channel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChatMsgPullRequest Clone() {
      return new C2SChatMsgPullRequest(this);
    }

    /// <summary>Field number for the "Channel" field.</summary>
    public const int ChannelFieldNumber = 1;
    private int channel_;
    /// <summary>
    /// 频道
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Channel {
      get { return channel_; }
      set {
        channel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SChatMsgPullRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SChatMsgPullRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Channel != other.Channel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Channel != 0) hash ^= Channel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Channel != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Channel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Channel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Channel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SChatMsgPullRequest other) {
      if (other == null) {
        return;
      }
      if (other.Channel != 0) {
        Channel = other.Channel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Channel = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SChatMsgPullRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12302,
      }

    }
    #endregion

  }

  public sealed partial class ChatItem : pb::IMessage<ChatItem> {
    private static readonly pb::MessageParser<ChatItem> _parser = new pb::MessageParser<ChatItem>(() => new ChatItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[299]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatItem(ChatItem other) : this() {
      content_ = other.content_;
      playerId_ = other.playerId_;
      playerName_ = other.playerName_;
      playerHead_ = other.playerHead_;
      playerLevel_ = other.playerLevel_;
      isFriend_ = other.isFriend_;
      sendTime_ = other.sendTime_;
      extraValue_ = other.extraValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatItem Clone() {
      return new ChatItem(this);
    }

    /// <summary>Field number for the "Content" field.</summary>
    public const int ContentFieldNumber = 1;
    private pb::ByteString content_ = pb::ByteString.Empty;
    /// <summary>
    /// 内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private int playerId_;
    /// <summary>
    /// 玩家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "PlayerName" field.</summary>
    public const int PlayerNameFieldNumber = 3;
    private string playerName_ = "";
    /// <summary>
    /// 玩家名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PlayerHead" field.</summary>
    public const int PlayerHeadFieldNumber = 4;
    private int playerHead_;
    /// <summary>
    /// 玩家头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerHead {
      get { return playerHead_; }
      set {
        playerHead_ = value;
      }
    }

    /// <summary>Field number for the "PlayerLevel" field.</summary>
    public const int PlayerLevelFieldNumber = 5;
    private int playerLevel_;
    /// <summary>
    /// 玩家等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerLevel {
      get { return playerLevel_; }
      set {
        playerLevel_ = value;
      }
    }

    /// <summary>Field number for the "IsFriend" field.</summary>
    public const int IsFriendFieldNumber = 6;
    private int isFriend_;
    /// <summary>
    /// 是否好友
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IsFriend {
      get { return isFriend_; }
      set {
        isFriend_ = value;
      }
    }

    /// <summary>Field number for the "SendTime" field.</summary>
    public const int SendTimeFieldNumber = 7;
    private int sendTime_;
    /// <summary>
    /// 发送时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SendTime {
      get { return sendTime_; }
      set {
        sendTime_ = value;
      }
    }

    /// <summary>Field number for the "ExtraValue" field.</summary>
    public const int ExtraValueFieldNumber = 8;
    private int extraValue_;
    /// <summary>
    /// 额外数据   招聘频道时为公会ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExtraValue {
      get { return extraValue_; }
      set {
        extraValue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Content != other.Content) return false;
      if (PlayerId != other.PlayerId) return false;
      if (PlayerName != other.PlayerName) return false;
      if (PlayerHead != other.PlayerHead) return false;
      if (PlayerLevel != other.PlayerLevel) return false;
      if (IsFriend != other.IsFriend) return false;
      if (SendTime != other.SendTime) return false;
      if (ExtraValue != other.ExtraValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (PlayerHead != 0) hash ^= PlayerHead.GetHashCode();
      if (PlayerLevel != 0) hash ^= PlayerLevel.GetHashCode();
      if (IsFriend != 0) hash ^= IsFriend.GetHashCode();
      if (SendTime != 0) hash ^= SendTime.GetHashCode();
      if (ExtraValue != 0) hash ^= ExtraValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Content.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Content);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PlayerName);
      }
      if (PlayerHead != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PlayerHead);
      }
      if (PlayerLevel != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PlayerLevel);
      }
      if (IsFriend != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(IsFriend);
      }
      if (SendTime != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SendTime);
      }
      if (ExtraValue != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ExtraValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
      }
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (PlayerHead != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerHead);
      }
      if (PlayerLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerLevel);
      }
      if (IsFriend != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsFriend);
      }
      if (SendTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SendTime);
      }
      if (ExtraValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExtraValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatItem other) {
      if (other == null) {
        return;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      if (other.PlayerHead != 0) {
        PlayerHead = other.PlayerHead;
      }
      if (other.PlayerLevel != 0) {
        PlayerLevel = other.PlayerLevel;
      }
      if (other.IsFriend != 0) {
        IsFriend = other.IsFriend;
      }
      if (other.SendTime != 0) {
        SendTime = other.SendTime;
      }
      if (other.ExtraValue != 0) {
        ExtraValue = other.ExtraValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Content = input.ReadBytes();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 26: {
            PlayerName = input.ReadString();
            break;
          }
          case 32: {
            PlayerHead = input.ReadInt32();
            break;
          }
          case 40: {
            PlayerLevel = input.ReadInt32();
            break;
          }
          case 48: {
            IsFriend = input.ReadInt32();
            break;
          }
          case 56: {
            SendTime = input.ReadInt32();
            break;
          }
          case 64: {
            ExtraValue = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CChatMsgPullResponse : pb::IMessage<S2CChatMsgPullResponse> {
    private static readonly pb::MessageParser<S2CChatMsgPullResponse> _parser = new pb::MessageParser<S2CChatMsgPullResponse>(() => new S2CChatMsgPullResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CChatMsgPullResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[300]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChatMsgPullResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChatMsgPullResponse(S2CChatMsgPullResponse other) : this() {
      channel_ = other.channel_;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChatMsgPullResponse Clone() {
      return new S2CChatMsgPullResponse(this);
    }

    /// <summary>Field number for the "Channel" field.</summary>
    public const int ChannelFieldNumber = 1;
    private int channel_;
    /// <summary>
    /// 频道
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Channel {
      get { return channel_; }
      set {
        channel_ = value;
      }
    }

    /// <summary>Field number for the "Items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ChatItem> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Msg.ClientMessage.ChatItem.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ChatItem> items_ = new pbc::RepeatedField<global::Msg.ClientMessage.ChatItem>();
    /// <summary>
    /// 拉取的聊天队列
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ChatItem> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CChatMsgPullResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CChatMsgPullResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Channel != other.Channel) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Channel != 0) hash ^= Channel.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Channel != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Channel);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Channel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Channel);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CChatMsgPullResponse other) {
      if (other == null) {
        return;
      }
      if (other.Channel != 0) {
        Channel = other.Channel;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Channel = input.ReadInt32();
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CChatMsgPullResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12303,
      }

    }
    #endregion

  }

  /// <summary>
  /// ----------------------------------- 拜访 -----------------------------------
  /// 拜访玩家
  /// </summary>
  public sealed partial class C2SVisitPlayer : pb::IMessage<C2SVisitPlayer> {
    private static readonly pb::MessageParser<C2SVisitPlayer> _parser = new pb::MessageParser<C2SVisitPlayer>(() => new C2SVisitPlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SVisitPlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[301]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SVisitPlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SVisitPlayer(C2SVisitPlayer other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SVisitPlayer Clone() {
      return new C2SVisitPlayer(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    /// <summary>
    /// 玩家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SVisitPlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SVisitPlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SVisitPlayer other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SVisitPlayer message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12400,
      }

    }
    #endregion

  }

  public sealed partial class ViewBuildingInfo : pb::IMessage<ViewBuildingInfo> {
    private static readonly pb::MessageParser<ViewBuildingInfo> _parser = new pb::MessageParser<ViewBuildingInfo>(() => new ViewBuildingInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ViewBuildingInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[302]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewBuildingInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewBuildingInfo(ViewBuildingInfo other) : this() {
      baseData_ = other.baseData_ != null ? other.baseData_.Clone() : null;
      cropData_ = other.cropData_ != null ? other.cropData_.Clone() : null;
      catHouseData_ = other.catHouseData_ != null ? other.catHouseData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewBuildingInfo Clone() {
      return new ViewBuildingInfo(this);
    }

    /// <summary>Field number for the "BaseData" field.</summary>
    public const int BaseDataFieldNumber = 1;
    private global::Msg.ClientMessage.BuildingInfo baseData_;
    /// <summary>
    /// 建筑基础数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ClientMessage.BuildingInfo BaseData {
      get { return baseData_; }
      set {
        baseData_ = value;
      }
    }

    /// <summary>Field number for the "CropData" field.</summary>
    public const int CropDataFieldNumber = 2;
    private global::Msg.ClientMessage.CropInfo cropData_;
    /// <summary>
    /// 农田数据，非农田为空
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ClientMessage.CropInfo CropData {
      get { return cropData_; }
      set {
        cropData_ = value;
      }
    }

    /// <summary>Field number for the "CatHouseData" field.</summary>
    public const int CatHouseDataFieldNumber = 3;
    private global::Msg.ClientMessage.CatHouseInfo catHouseData_;
    /// <summary>
    /// 猫舍数据，非猫舍为空
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ClientMessage.CatHouseInfo CatHouseData {
      get { return catHouseData_; }
      set {
        catHouseData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ViewBuildingInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ViewBuildingInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BaseData, other.BaseData)) return false;
      if (!object.Equals(CropData, other.CropData)) return false;
      if (!object.Equals(CatHouseData, other.CatHouseData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (baseData_ != null) hash ^= BaseData.GetHashCode();
      if (cropData_ != null) hash ^= CropData.GetHashCode();
      if (catHouseData_ != null) hash ^= CatHouseData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (baseData_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BaseData);
      }
      if (cropData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CropData);
      }
      if (catHouseData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CatHouseData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (baseData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseData);
      }
      if (cropData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CropData);
      }
      if (catHouseData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CatHouseData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ViewBuildingInfo other) {
      if (other == null) {
        return;
      }
      if (other.baseData_ != null) {
        if (baseData_ == null) {
          BaseData = new global::Msg.ClientMessage.BuildingInfo();
        }
        BaseData.MergeFrom(other.BaseData);
      }
      if (other.cropData_ != null) {
        if (cropData_ == null) {
          CropData = new global::Msg.ClientMessage.CropInfo();
        }
        CropData.MergeFrom(other.CropData);
      }
      if (other.catHouseData_ != null) {
        if (catHouseData_ == null) {
          CatHouseData = new global::Msg.ClientMessage.CatHouseInfo();
        }
        CatHouseData.MergeFrom(other.CatHouseData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (baseData_ == null) {
              BaseData = new global::Msg.ClientMessage.BuildingInfo();
            }
            input.ReadMessage(BaseData);
            break;
          }
          case 18: {
            if (cropData_ == null) {
              CropData = new global::Msg.ClientMessage.CropInfo();
            }
            input.ReadMessage(CropData);
            break;
          }
          case 26: {
            if (catHouseData_ == null) {
              CatHouseData = new global::Msg.ClientMessage.CatHouseInfo();
            }
            input.ReadMessage(CatHouseData);
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CVisitPlayerResult : pb::IMessage<S2CVisitPlayerResult> {
    private static readonly pb::MessageParser<S2CVisitPlayerResult> _parser = new pb::MessageParser<S2CVisitPlayerResult>(() => new S2CVisitPlayerResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CVisitPlayerResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[303]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CVisitPlayerResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CVisitPlayerResult(S2CVisitPlayerResult other) : this() {
      playerId_ = other.playerId_;
      playerName_ = other.playerName_;
      playerLevel_ = other.playerLevel_;
      playerVipLevel_ = other.playerVipLevel_;
      playerGold_ = other.playerGold_;
      playerDiamond_ = other.playerDiamond_;
      playerCharm_ = other.playerCharm_;
      playerHead_ = other.playerHead_;
      buildings_ = other.buildings_.Clone();
      areas_ = other.areas_.Clone();
      surfaces_ = other.surfaces_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CVisitPlayerResult Clone() {
      return new S2CVisitPlayerResult(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    /// <summary>
    /// 玩家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "PlayerName" field.</summary>
    public const int PlayerNameFieldNumber = 2;
    private string playerName_ = "";
    /// <summary>
    /// 玩家昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PlayerLevel" field.</summary>
    public const int PlayerLevelFieldNumber = 3;
    private int playerLevel_;
    /// <summary>
    /// 玩家等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerLevel {
      get { return playerLevel_; }
      set {
        playerLevel_ = value;
      }
    }

    /// <summary>Field number for the "PlayerVipLevel" field.</summary>
    public const int PlayerVipLevelFieldNumber = 4;
    private int playerVipLevel_;
    /// <summary>
    /// 玩家VIP等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerVipLevel {
      get { return playerVipLevel_; }
      set {
        playerVipLevel_ = value;
      }
    }

    /// <summary>Field number for the "PlayerGold" field.</summary>
    public const int PlayerGoldFieldNumber = 5;
    private int playerGold_;
    /// <summary>
    /// 玩家金币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerGold {
      get { return playerGold_; }
      set {
        playerGold_ = value;
      }
    }

    /// <summary>Field number for the "PlayerDiamond" field.</summary>
    public const int PlayerDiamondFieldNumber = 6;
    private int playerDiamond_;
    /// <summary>
    /// 玩家钻石
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerDiamond {
      get { return playerDiamond_; }
      set {
        playerDiamond_ = value;
      }
    }

    /// <summary>Field number for the "PlayerCharm" field.</summary>
    public const int PlayerCharmFieldNumber = 7;
    private int playerCharm_;
    /// <summary>
    /// 玩家魅力值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerCharm {
      get { return playerCharm_; }
      set {
        playerCharm_ = value;
      }
    }

    /// <summary>Field number for the "PlayerHead" field.</summary>
    public const int PlayerHeadFieldNumber = 8;
    private int playerHead_;
    /// <summary>
    /// 玩家头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerHead {
      get { return playerHead_; }
      set {
        playerHead_ = value;
      }
    }

    /// <summary>Field number for the "Buildings" field.</summary>
    public const int BuildingsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ViewBuildingInfo> _repeated_buildings_codec
        = pb::FieldCodec.ForMessage(74, global::Msg.ClientMessage.ViewBuildingInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ViewBuildingInfo> buildings_ = new pbc::RepeatedField<global::Msg.ClientMessage.ViewBuildingInfo>();
    /// <summary>
    /// 建筑物数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ViewBuildingInfo> Buildings {
      get { return buildings_; }
    }

    /// <summary>Field number for the "Areas" field.</summary>
    public const int AreasFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.AreaInfo> _repeated_areas_codec
        = pb::FieldCodec.ForMessage(82, global::Msg.ClientMessage.AreaInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.AreaInfo> areas_ = new pbc::RepeatedField<global::Msg.ClientMessage.AreaInfo>();
    /// <summary>
    /// 区域信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.AreaInfo> Areas {
      get { return areas_; }
    }

    /// <summary>Field number for the "Surfaces" field.</summary>
    public const int SurfacesFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.BuildingInfo> _repeated_surfaces_codec
        = pb::FieldCodec.ForMessage(90, global::Msg.ClientMessage.BuildingInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.BuildingInfo> surfaces_ = new pbc::RepeatedField<global::Msg.ClientMessage.BuildingInfo>();
    /// <summary>
    /// 地板
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.BuildingInfo> Surfaces {
      get { return surfaces_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CVisitPlayerResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CVisitPlayerResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PlayerName != other.PlayerName) return false;
      if (PlayerLevel != other.PlayerLevel) return false;
      if (PlayerVipLevel != other.PlayerVipLevel) return false;
      if (PlayerGold != other.PlayerGold) return false;
      if (PlayerDiamond != other.PlayerDiamond) return false;
      if (PlayerCharm != other.PlayerCharm) return false;
      if (PlayerHead != other.PlayerHead) return false;
      if(!buildings_.Equals(other.buildings_)) return false;
      if(!areas_.Equals(other.areas_)) return false;
      if(!surfaces_.Equals(other.surfaces_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (PlayerLevel != 0) hash ^= PlayerLevel.GetHashCode();
      if (PlayerVipLevel != 0) hash ^= PlayerVipLevel.GetHashCode();
      if (PlayerGold != 0) hash ^= PlayerGold.GetHashCode();
      if (PlayerDiamond != 0) hash ^= PlayerDiamond.GetHashCode();
      if (PlayerCharm != 0) hash ^= PlayerCharm.GetHashCode();
      if (PlayerHead != 0) hash ^= PlayerHead.GetHashCode();
      hash ^= buildings_.GetHashCode();
      hash ^= areas_.GetHashCode();
      hash ^= surfaces_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerName);
      }
      if (PlayerLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PlayerLevel);
      }
      if (PlayerVipLevel != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PlayerVipLevel);
      }
      if (PlayerGold != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PlayerGold);
      }
      if (PlayerDiamond != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PlayerDiamond);
      }
      if (PlayerCharm != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(PlayerCharm);
      }
      if (PlayerHead != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(PlayerHead);
      }
      buildings_.WriteTo(output, _repeated_buildings_codec);
      areas_.WriteTo(output, _repeated_areas_codec);
      surfaces_.WriteTo(output, _repeated_surfaces_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (PlayerLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerLevel);
      }
      if (PlayerVipLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerVipLevel);
      }
      if (PlayerGold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerGold);
      }
      if (PlayerDiamond != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerDiamond);
      }
      if (PlayerCharm != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerCharm);
      }
      if (PlayerHead != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerHead);
      }
      size += buildings_.CalculateSize(_repeated_buildings_codec);
      size += areas_.CalculateSize(_repeated_areas_codec);
      size += surfaces_.CalculateSize(_repeated_surfaces_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CVisitPlayerResult other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      if (other.PlayerLevel != 0) {
        PlayerLevel = other.PlayerLevel;
      }
      if (other.PlayerVipLevel != 0) {
        PlayerVipLevel = other.PlayerVipLevel;
      }
      if (other.PlayerGold != 0) {
        PlayerGold = other.PlayerGold;
      }
      if (other.PlayerDiamond != 0) {
        PlayerDiamond = other.PlayerDiamond;
      }
      if (other.PlayerCharm != 0) {
        PlayerCharm = other.PlayerCharm;
      }
      if (other.PlayerHead != 0) {
        PlayerHead = other.PlayerHead;
      }
      buildings_.Add(other.buildings_);
      areas_.Add(other.areas_);
      surfaces_.Add(other.surfaces_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            PlayerName = input.ReadString();
            break;
          }
          case 24: {
            PlayerLevel = input.ReadInt32();
            break;
          }
          case 32: {
            PlayerVipLevel = input.ReadInt32();
            break;
          }
          case 40: {
            PlayerGold = input.ReadInt32();
            break;
          }
          case 48: {
            PlayerDiamond = input.ReadInt32();
            break;
          }
          case 56: {
            PlayerCharm = input.ReadInt32();
            break;
          }
          case 64: {
            PlayerHead = input.ReadInt32();
            break;
          }
          case 74: {
            buildings_.AddEntriesFrom(input, _repeated_buildings_codec);
            break;
          }
          case 82: {
            areas_.AddEntriesFrom(input, _repeated_areas_codec);
            break;
          }
          case 90: {
            surfaces_.AddEntriesFrom(input, _repeated_surfaces_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CVisitPlayerResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12401,
      }

    }
    #endregion

  }

  /// <summary>
  /// 开好友宝箱
  /// </summary>
  public sealed partial class C2SOpenFriendChest : pb::IMessage<C2SOpenFriendChest> {
    private static readonly pb::MessageParser<C2SOpenFriendChest> _parser = new pb::MessageParser<C2SOpenFriendChest>(() => new C2SOpenFriendChest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SOpenFriendChest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[304]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SOpenFriendChest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SOpenFriendChest(C2SOpenFriendChest other) : this() {
      friendid_ = other.friendid_;
      buildingId_ = other.buildingId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SOpenFriendChest Clone() {
      return new C2SOpenFriendChest(this);
    }

    /// <summary>Field number for the "Friendid" field.</summary>
    public const int FriendidFieldNumber = 1;
    private int friendid_;
    /// <summary>
    /// 好友ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Friendid {
      get { return friendid_; }
      set {
        friendid_ = value;
      }
    }

    /// <summary>Field number for the "BuildingId" field.</summary>
    public const int BuildingIdFieldNumber = 2;
    private int buildingId_;
    /// <summary>
    /// 宝箱ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildingId {
      get { return buildingId_; }
      set {
        buildingId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SOpenFriendChest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SOpenFriendChest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Friendid != other.Friendid) return false;
      if (BuildingId != other.BuildingId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Friendid != 0) hash ^= Friendid.GetHashCode();
      if (BuildingId != 0) hash ^= BuildingId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Friendid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Friendid);
      }
      if (BuildingId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BuildingId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Friendid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Friendid);
      }
      if (BuildingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SOpenFriendChest other) {
      if (other == null) {
        return;
      }
      if (other.Friendid != 0) {
        Friendid = other.Friendid;
      }
      if (other.BuildingId != 0) {
        BuildingId = other.BuildingId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Friendid = input.ReadInt32();
            break;
          }
          case 16: {
            BuildingId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SOpenFriendChest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12402,
      }

    }
    #endregion

  }

  public sealed partial class S2COpenFriendChestResult : pb::IMessage<S2COpenFriendChestResult> {
    private static readonly pb::MessageParser<S2COpenFriendChestResult> _parser = new pb::MessageParser<S2COpenFriendChestResult>(() => new S2COpenFriendChestResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2COpenFriendChestResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[305]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2COpenFriendChestResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2COpenFriendChestResult(S2COpenFriendChestResult other) : this() {
      friendId_ = other.friendId_;
      buildingId_ = other.buildingId_;
      openResult_ = other.openResult_ != null ? other.openResult_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2COpenFriendChestResult Clone() {
      return new S2COpenFriendChestResult(this);
    }

    /// <summary>Field number for the "FriendId" field.</summary>
    public const int FriendIdFieldNumber = 1;
    private int friendId_;
    /// <summary>
    /// 好友ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendId {
      get { return friendId_; }
      set {
        friendId_ = value;
      }
    }

    /// <summary>Field number for the "BuildingId" field.</summary>
    public const int BuildingIdFieldNumber = 2;
    private int buildingId_;
    /// <summary>
    /// 宝箱ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildingId {
      get { return buildingId_; }
      set {
        buildingId_ = value;
      }
    }

    /// <summary>Field number for the "OpenResult" field.</summary>
    public const int OpenResultFieldNumber = 3;
    private global::Msg.ClientMessage.S2COpenMapChest openResult_;
    /// <summary>
    /// 打开宝箱结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ClientMessage.S2COpenMapChest OpenResult {
      get { return openResult_; }
      set {
        openResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2COpenFriendChestResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2COpenFriendChestResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FriendId != other.FriendId) return false;
      if (BuildingId != other.BuildingId) return false;
      if (!object.Equals(OpenResult, other.OpenResult)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FriendId != 0) hash ^= FriendId.GetHashCode();
      if (BuildingId != 0) hash ^= BuildingId.GetHashCode();
      if (openResult_ != null) hash ^= OpenResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FriendId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FriendId);
      }
      if (BuildingId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BuildingId);
      }
      if (openResult_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OpenResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FriendId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendId);
      }
      if (BuildingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingId);
      }
      if (openResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OpenResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2COpenFriendChestResult other) {
      if (other == null) {
        return;
      }
      if (other.FriendId != 0) {
        FriendId = other.FriendId;
      }
      if (other.BuildingId != 0) {
        BuildingId = other.BuildingId;
      }
      if (other.openResult_ != null) {
        if (openResult_ == null) {
          OpenResult = new global::Msg.ClientMessage.S2COpenMapChest();
        }
        OpenResult.MergeFrom(other.OpenResult);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FriendId = input.ReadInt32();
            break;
          }
          case 16: {
            BuildingId = input.ReadInt32();
            break;
          }
          case 26: {
            if (openResult_ == null) {
              OpenResult = new global::Msg.ClientMessage.S2COpenMapChest();
            }
            input.ReadMessage(OpenResult);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2COpenFriendChestResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12403,
      }

    }
    #endregion

  }

  /// <summary>
  /// 请求玩家的猫数据
  /// </summary>
  public sealed partial class C2SPlayerCatInfo : pb::IMessage<C2SPlayerCatInfo> {
    private static readonly pb::MessageParser<C2SPlayerCatInfo> _parser = new pb::MessageParser<C2SPlayerCatInfo>(() => new C2SPlayerCatInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SPlayerCatInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[306]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPlayerCatInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPlayerCatInfo(C2SPlayerCatInfo other) : this() {
      playerId_ = other.playerId_;
      catId_ = other.catId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPlayerCatInfo Clone() {
      return new C2SPlayerCatInfo(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 2;
    private int catId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SPlayerCatInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SPlayerCatInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (CatId != other.CatId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (CatId != 0) hash ^= CatId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (CatId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CatId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SPlayerCatInfo other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            CatId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SPlayerCatInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12404,
      }

    }
    #endregion

  }

  public sealed partial class S2CPlayerCatInfoResult : pb::IMessage<S2CPlayerCatInfoResult> {
    private static readonly pb::MessageParser<S2CPlayerCatInfoResult> _parser = new pb::MessageParser<S2CPlayerCatInfoResult>(() => new S2CPlayerCatInfoResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CPlayerCatInfoResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[307]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPlayerCatInfoResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPlayerCatInfoResult(S2CPlayerCatInfoResult other) : this() {
      playerId_ = other.playerId_;
      catId_ = other.catId_;
      catLevel_ = other.catLevel_;
      catExp_ = other.catExp_;
      catStar_ = other.catStar_;
      catSkillLevel_ = other.catSkillLevel_;
      catAddCoin_ = other.catAddCoin_;
      catAddMatch_ = other.catAddMatch_;
      catAddExplore_ = other.catAddExplore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPlayerCatInfoResult Clone() {
      return new S2CPlayerCatInfoResult(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    /// <summary>
    /// 玩家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 2;
    private int catId_;
    /// <summary>
    /// 猫ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    /// <summary>Field number for the "CatLevel" field.</summary>
    public const int CatLevelFieldNumber = 3;
    private int catLevel_;
    /// <summary>
    /// 等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatLevel {
      get { return catLevel_; }
      set {
        catLevel_ = value;
      }
    }

    /// <summary>Field number for the "CatExp" field.</summary>
    public const int CatExpFieldNumber = 4;
    private int catExp_;
    /// <summary>
    /// 经验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatExp {
      get { return catExp_; }
      set {
        catExp_ = value;
      }
    }

    /// <summary>Field number for the "CatStar" field.</summary>
    public const int CatStarFieldNumber = 5;
    private int catStar_;
    /// <summary>
    /// 星级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatStar {
      get { return catStar_; }
      set {
        catStar_ = value;
      }
    }

    /// <summary>Field number for the "CatSkillLevel" field.</summary>
    public const int CatSkillLevelFieldNumber = 6;
    private int catSkillLevel_;
    /// <summary>
    /// 技能等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatSkillLevel {
      get { return catSkillLevel_; }
      set {
        catSkillLevel_ = value;
      }
    }

    /// <summary>Field number for the "CatAddCoin" field.</summary>
    public const int CatAddCoinFieldNumber = 7;
    private int catAddCoin_;
    /// <summary>
    /// 产金能力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatAddCoin {
      get { return catAddCoin_; }
      set {
        catAddCoin_ = value;
      }
    }

    /// <summary>Field number for the "CatAddMatch" field.</summary>
    public const int CatAddMatchFieldNumber = 8;
    private int catAddMatch_;
    /// <summary>
    /// 消除能力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatAddMatch {
      get { return catAddMatch_; }
      set {
        catAddMatch_ = value;
      }
    }

    /// <summary>Field number for the "CatAddExplore" field.</summary>
    public const int CatAddExploreFieldNumber = 9;
    private int catAddExplore_;
    /// <summary>
    /// 探索能力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatAddExplore {
      get { return catAddExplore_; }
      set {
        catAddExplore_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CPlayerCatInfoResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CPlayerCatInfoResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (CatId != other.CatId) return false;
      if (CatLevel != other.CatLevel) return false;
      if (CatExp != other.CatExp) return false;
      if (CatStar != other.CatStar) return false;
      if (CatSkillLevel != other.CatSkillLevel) return false;
      if (CatAddCoin != other.CatAddCoin) return false;
      if (CatAddMatch != other.CatAddMatch) return false;
      if (CatAddExplore != other.CatAddExplore) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (CatId != 0) hash ^= CatId.GetHashCode();
      if (CatLevel != 0) hash ^= CatLevel.GetHashCode();
      if (CatExp != 0) hash ^= CatExp.GetHashCode();
      if (CatStar != 0) hash ^= CatStar.GetHashCode();
      if (CatSkillLevel != 0) hash ^= CatSkillLevel.GetHashCode();
      if (CatAddCoin != 0) hash ^= CatAddCoin.GetHashCode();
      if (CatAddMatch != 0) hash ^= CatAddMatch.GetHashCode();
      if (CatAddExplore != 0) hash ^= CatAddExplore.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (CatId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CatId);
      }
      if (CatLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CatLevel);
      }
      if (CatExp != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CatExp);
      }
      if (CatStar != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CatStar);
      }
      if (CatSkillLevel != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(CatSkillLevel);
      }
      if (CatAddCoin != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(CatAddCoin);
      }
      if (CatAddMatch != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(CatAddMatch);
      }
      if (CatAddExplore != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CatAddExplore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      if (CatLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatLevel);
      }
      if (CatExp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatExp);
      }
      if (CatStar != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatStar);
      }
      if (CatSkillLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatSkillLevel);
      }
      if (CatAddCoin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatAddCoin);
      }
      if (CatAddMatch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatAddMatch);
      }
      if (CatAddExplore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatAddExplore);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CPlayerCatInfoResult other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      if (other.CatLevel != 0) {
        CatLevel = other.CatLevel;
      }
      if (other.CatExp != 0) {
        CatExp = other.CatExp;
      }
      if (other.CatStar != 0) {
        CatStar = other.CatStar;
      }
      if (other.CatSkillLevel != 0) {
        CatSkillLevel = other.CatSkillLevel;
      }
      if (other.CatAddCoin != 0) {
        CatAddCoin = other.CatAddCoin;
      }
      if (other.CatAddMatch != 0) {
        CatAddMatch = other.CatAddMatch;
      }
      if (other.CatAddExplore != 0) {
        CatAddExplore = other.CatAddExplore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            CatId = input.ReadInt32();
            break;
          }
          case 24: {
            CatLevel = input.ReadInt32();
            break;
          }
          case 32: {
            CatExp = input.ReadInt32();
            break;
          }
          case 40: {
            CatStar = input.ReadInt32();
            break;
          }
          case 48: {
            CatSkillLevel = input.ReadInt32();
            break;
          }
          case 56: {
            CatAddCoin = input.ReadInt32();
            break;
          }
          case 64: {
            CatAddMatch = input.ReadInt32();
            break;
          }
          case 72: {
            CatAddExplore = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CPlayerCatInfoResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12405,
      }

    }
    #endregion

  }

  /// <summary>
  /// ---------------------------------- 系统公告 --------------------------------
  /// 系统公告项
  /// </summary>
  public sealed partial class AnouncementItem : pb::IMessage<AnouncementItem> {
    private static readonly pb::MessageParser<AnouncementItem> _parser = new pb::MessageParser<AnouncementItem>(() => new AnouncementItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnouncementItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[308]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnouncementItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnouncementItem(AnouncementItem other) : this() {
      msgType_ = other.msgType_;
      playerId_ = other.playerId_;
      playerName_ = other.playerName_;
      playerLevel_ = other.playerLevel_;
      sendTime_ = other.sendTime_;
      fosterCardTableId_ = other.fosterCardTableId_;
      formulaTableId_ = other.formulaTableId_;
      buildingTableId_ = other.buildingTableId_;
      sSRCatTableId_ = other.sSRCatTableId_;
      rankType_ = other.rankType_;
      stageId_ = other.stageId_;
      catFullLevelTableId_ = other.catFullLevelTableId_;
      content_ = other.content_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnouncementItem Clone() {
      return new AnouncementItem(this);
    }

    /// <summary>Field number for the "MsgType" field.</summary>
    public const int MsgTypeFieldNumber = 1;
    private int msgType_;
    /// <summary>
    /// 公告类型（1 获得4/5星寄养卡  2 获得4阶装饰物  3 获得4阶装饰物配方  4 获得SSR猫  5 排行榜首位  6 猫满级  7 纯文本）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgType {
      get { return msgType_; }
      set {
        msgType_ = value;
      }
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private int playerId_;
    /// <summary>
    /// 玩家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "PlayerName" field.</summary>
    public const int PlayerNameFieldNumber = 3;
    private string playerName_ = "";
    /// <summary>
    /// 玩家昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PlayerLevel" field.</summary>
    public const int PlayerLevelFieldNumber = 4;
    private int playerLevel_;
    /// <summary>
    /// 玩家等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerLevel {
      get { return playerLevel_; }
      set {
        playerLevel_ = value;
      }
    }

    /// <summary>Field number for the "SendTime" field.</summary>
    public const int SendTimeFieldNumber = 5;
    private int sendTime_;
    /// <summary>
    /// 发送时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SendTime {
      get { return sendTime_; }
      set {
        sendTime_ = value;
      }
    }

    /// <summary>Field number for the "FosterCardTableId" field.</summary>
    public const int FosterCardTableIdFieldNumber = 6;
    private int fosterCardTableId_;
    /// <summary>
    /// 获得寄养卡配置ID，对应获取寄养卡公告
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FosterCardTableId {
      get { return fosterCardTableId_; }
      set {
        fosterCardTableId_ = value;
      }
    }

    /// <summary>Field number for the "FormulaTableId" field.</summary>
    public const int FormulaTableIdFieldNumber = 7;
    private int formulaTableId_;
    /// <summary>
    /// 配方ID获得，对应获取装饰物配方公告
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FormulaTableId {
      get { return formulaTableId_; }
      set {
        formulaTableId_ = value;
      }
    }

    /// <summary>Field number for the "BuildingTableId" field.</summary>
    public const int BuildingTableIdFieldNumber = 8;
    private int buildingTableId_;
    /// <summary>
    /// 获得装饰物配置ID，对应获得装饰物公告
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildingTableId {
      get { return buildingTableId_; }
      set {
        buildingTableId_ = value;
      }
    }

    /// <summary>Field number for the "SSRCatTableId" field.</summary>
    public const int SSRCatTableIdFieldNumber = 9;
    private int sSRCatTableId_;
    /// <summary>
    /// 获得SSR猫配置ID，对应获取SSR猫公告
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SSRCatTableId {
      get { return sSRCatTableId_; }
      set {
        sSRCatTableId_ = value;
      }
    }

    /// <summary>Field number for the "RankType" field.</summary>
    public const int RankTypeFieldNumber = 10;
    private int rankType_;
    /// <summary>
    /// 排行榜首位类型，对应排行榜公告
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RankType {
      get { return rankType_; }
      set {
        rankType_ = value;
      }
    }

    /// <summary>Field number for the "StageId" field.</summary>
    public const int StageIdFieldNumber = 11;
    private int stageId_;
    /// <summary>
    /// 关卡ID，对应积分排行榜公告
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StageId {
      get { return stageId_; }
      set {
        stageId_ = value;
      }
    }

    /// <summary>Field number for the "CatFullLevelTableId" field.</summary>
    public const int CatFullLevelTableIdFieldNumber = 12;
    private int catFullLevelTableId_;
    /// <summary>
    /// 猫满级的配置ID，对应猫满级公告
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatFullLevelTableId {
      get { return catFullLevelTableId_; }
      set {
        catFullLevelTableId_ = value;
      }
    }

    /// <summary>Field number for the "Content" field.</summary>
    public const int ContentFieldNumber = 13;
    private string content_ = "";
    /// <summary>
    /// 文本内容，对应纯文本公告
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnouncementItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnouncementItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgType != other.MsgType) return false;
      if (PlayerId != other.PlayerId) return false;
      if (PlayerName != other.PlayerName) return false;
      if (PlayerLevel != other.PlayerLevel) return false;
      if (SendTime != other.SendTime) return false;
      if (FosterCardTableId != other.FosterCardTableId) return false;
      if (FormulaTableId != other.FormulaTableId) return false;
      if (BuildingTableId != other.BuildingTableId) return false;
      if (SSRCatTableId != other.SSRCatTableId) return false;
      if (RankType != other.RankType) return false;
      if (StageId != other.StageId) return false;
      if (CatFullLevelTableId != other.CatFullLevelTableId) return false;
      if (Content != other.Content) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgType != 0) hash ^= MsgType.GetHashCode();
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (PlayerLevel != 0) hash ^= PlayerLevel.GetHashCode();
      if (SendTime != 0) hash ^= SendTime.GetHashCode();
      if (FosterCardTableId != 0) hash ^= FosterCardTableId.GetHashCode();
      if (FormulaTableId != 0) hash ^= FormulaTableId.GetHashCode();
      if (BuildingTableId != 0) hash ^= BuildingTableId.GetHashCode();
      if (SSRCatTableId != 0) hash ^= SSRCatTableId.GetHashCode();
      if (RankType != 0) hash ^= RankType.GetHashCode();
      if (StageId != 0) hash ^= StageId.GetHashCode();
      if (CatFullLevelTableId != 0) hash ^= CatFullLevelTableId.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MsgType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MsgType);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PlayerName);
      }
      if (PlayerLevel != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PlayerLevel);
      }
      if (SendTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(SendTime);
      }
      if (FosterCardTableId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(FosterCardTableId);
      }
      if (FormulaTableId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(FormulaTableId);
      }
      if (BuildingTableId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(BuildingTableId);
      }
      if (SSRCatTableId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(SSRCatTableId);
      }
      if (RankType != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(RankType);
      }
      if (StageId != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(StageId);
      }
      if (CatFullLevelTableId != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(CatFullLevelTableId);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgType);
      }
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (PlayerLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerLevel);
      }
      if (SendTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SendTime);
      }
      if (FosterCardTableId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FosterCardTableId);
      }
      if (FormulaTableId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FormulaTableId);
      }
      if (BuildingTableId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingTableId);
      }
      if (SSRCatTableId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SSRCatTableId);
      }
      if (RankType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RankType);
      }
      if (StageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StageId);
      }
      if (CatFullLevelTableId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatFullLevelTableId);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnouncementItem other) {
      if (other == null) {
        return;
      }
      if (other.MsgType != 0) {
        MsgType = other.MsgType;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      if (other.PlayerLevel != 0) {
        PlayerLevel = other.PlayerLevel;
      }
      if (other.SendTime != 0) {
        SendTime = other.SendTime;
      }
      if (other.FosterCardTableId != 0) {
        FosterCardTableId = other.FosterCardTableId;
      }
      if (other.FormulaTableId != 0) {
        FormulaTableId = other.FormulaTableId;
      }
      if (other.BuildingTableId != 0) {
        BuildingTableId = other.BuildingTableId;
      }
      if (other.SSRCatTableId != 0) {
        SSRCatTableId = other.SSRCatTableId;
      }
      if (other.RankType != 0) {
        RankType = other.RankType;
      }
      if (other.StageId != 0) {
        StageId = other.StageId;
      }
      if (other.CatFullLevelTableId != 0) {
        CatFullLevelTableId = other.CatFullLevelTableId;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MsgType = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 26: {
            PlayerName = input.ReadString();
            break;
          }
          case 32: {
            PlayerLevel = input.ReadInt32();
            break;
          }
          case 40: {
            SendTime = input.ReadInt32();
            break;
          }
          case 48: {
            FosterCardTableId = input.ReadInt32();
            break;
          }
          case 56: {
            FormulaTableId = input.ReadInt32();
            break;
          }
          case 64: {
            BuildingTableId = input.ReadInt32();
            break;
          }
          case 72: {
            SSRCatTableId = input.ReadInt32();
            break;
          }
          case 80: {
            RankType = input.ReadInt32();
            break;
          }
          case 88: {
            StageId = input.ReadInt32();
            break;
          }
          case 96: {
            CatFullLevelTableId = input.ReadInt32();
            break;
          }
          case 106: {
            Content = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 系统公告通知
  /// </summary>
  public sealed partial class S2CAnouncementNotify : pb::IMessage<S2CAnouncementNotify> {
    private static readonly pb::MessageParser<S2CAnouncementNotify> _parser = new pb::MessageParser<S2CAnouncementNotify>(() => new S2CAnouncementNotify());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CAnouncementNotify> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[309]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CAnouncementNotify() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CAnouncementNotify(S2CAnouncementNotify other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CAnouncementNotify Clone() {
      return new S2CAnouncementNotify(this);
    }

    /// <summary>Field number for the "Items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.AnouncementItem> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.AnouncementItem.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.AnouncementItem> items_ = new pbc::RepeatedField<global::Msg.ClientMessage.AnouncementItem>();
    /// <summary>
    /// 公告数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.AnouncementItem> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CAnouncementNotify);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CAnouncementNotify other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CAnouncementNotify other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CAnouncementNotify message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12500,
      }

    }
    #endregion

  }

  /// <summary>
  /// ----------------------------------------------------------------------------
  /// 评论
  /// </summary>
  public sealed partial class PSLeaveMsgComment : pb::IMessage<PSLeaveMsgComment> {
    private static readonly pb::MessageParser<PSLeaveMsgComment> _parser = new pb::MessageParser<PSLeaveMsgComment>(() => new PSLeaveMsgComment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PSLeaveMsgComment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[310]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PSLeaveMsgComment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PSLeaveMsgComment(PSLeaveMsgComment other) : this() {
      commentId_ = other.commentId_;
      content_ = other.content_;
      sendTime_ = other.sendTime_;
      sendPlayerId_ = other.sendPlayerId_;
      replyPlayerId_ = other.replyPlayerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PSLeaveMsgComment Clone() {
      return new PSLeaveMsgComment(this);
    }

    /// <summary>Field number for the "CommentId" field.</summary>
    public const int CommentIdFieldNumber = 1;
    private int commentId_;
    /// <summary>
    /// 评论ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CommentId {
      get { return commentId_; }
      set {
        commentId_ = value;
      }
    }

    /// <summary>Field number for the "Content" field.</summary>
    public const int ContentFieldNumber = 2;
    private pb::ByteString content_ = pb::ByteString.Empty;
    /// <summary>
    /// 内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SendTime" field.</summary>
    public const int SendTimeFieldNumber = 3;
    private int sendTime_;
    /// <summary>
    /// 发送时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SendTime {
      get { return sendTime_; }
      set {
        sendTime_ = value;
      }
    }

    /// <summary>Field number for the "SendPlayerId" field.</summary>
    public const int SendPlayerIdFieldNumber = 4;
    private int sendPlayerId_;
    /// <summary>
    /// 发送玩家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SendPlayerId {
      get { return sendPlayerId_; }
      set {
        sendPlayerId_ = value;
      }
    }

    /// <summary>Field number for the "ReplyPlayerId" field.</summary>
    public const int ReplyPlayerIdFieldNumber = 5;
    private int replyPlayerId_;
    /// <summary>
    /// 被回复玩家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReplyPlayerId {
      get { return replyPlayerId_; }
      set {
        replyPlayerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PSLeaveMsgComment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PSLeaveMsgComment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CommentId != other.CommentId) return false;
      if (Content != other.Content) return false;
      if (SendTime != other.SendTime) return false;
      if (SendPlayerId != other.SendPlayerId) return false;
      if (ReplyPlayerId != other.ReplyPlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CommentId != 0) hash ^= CommentId.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (SendTime != 0) hash ^= SendTime.GetHashCode();
      if (SendPlayerId != 0) hash ^= SendPlayerId.GetHashCode();
      if (ReplyPlayerId != 0) hash ^= ReplyPlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CommentId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CommentId);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Content);
      }
      if (SendTime != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SendTime);
      }
      if (SendPlayerId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SendPlayerId);
      }
      if (ReplyPlayerId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ReplyPlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CommentId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CommentId);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
      }
      if (SendTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SendTime);
      }
      if (SendPlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SendPlayerId);
      }
      if (ReplyPlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReplyPlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PSLeaveMsgComment other) {
      if (other == null) {
        return;
      }
      if (other.CommentId != 0) {
        CommentId = other.CommentId;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.SendTime != 0) {
        SendTime = other.SendTime;
      }
      if (other.SendPlayerId != 0) {
        SendPlayerId = other.SendPlayerId;
      }
      if (other.ReplyPlayerId != 0) {
        ReplyPlayerId = other.ReplyPlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CommentId = input.ReadInt32();
            break;
          }
          case 18: {
            Content = input.ReadBytes();
            break;
          }
          case 24: {
            SendTime = input.ReadInt32();
            break;
          }
          case 32: {
            SendPlayerId = input.ReadInt32();
            break;
          }
          case 40: {
            ReplyPlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 留言
  /// </summary>
  public sealed partial class PSLeaveMsg : pb::IMessage<PSLeaveMsg> {
    private static readonly pb::MessageParser<PSLeaveMsg> _parser = new pb::MessageParser<PSLeaveMsg>(() => new PSLeaveMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PSLeaveMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[311]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PSLeaveMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PSLeaveMsg(PSLeaveMsg other) : this() {
      msgId_ = other.msgId_;
      content_ = other.content_;
      sendTime_ = other.sendTime_;
      sendPlayerId_ = other.sendPlayerId_;
      comments_ = other.comments_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PSLeaveMsg Clone() {
      return new PSLeaveMsg(this);
    }

    /// <summary>Field number for the "MsgId" field.</summary>
    public const int MsgIdFieldNumber = 1;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "Content" field.</summary>
    public const int ContentFieldNumber = 2;
    private pb::ByteString content_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SendTime" field.</summary>
    public const int SendTimeFieldNumber = 3;
    private int sendTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SendTime {
      get { return sendTime_; }
      set {
        sendTime_ = value;
      }
    }

    /// <summary>Field number for the "SendPlayerId" field.</summary>
    public const int SendPlayerIdFieldNumber = 4;
    private int sendPlayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SendPlayerId {
      get { return sendPlayerId_; }
      set {
        sendPlayerId_ = value;
      }
    }

    /// <summary>Field number for the "Comments" field.</summary>
    public const int CommentsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.PSLeaveMsgComment> _repeated_comments_codec
        = pb::FieldCodec.ForMessage(42, global::Msg.ClientMessage.PSLeaveMsgComment.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.PSLeaveMsgComment> comments_ = new pbc::RepeatedField<global::Msg.ClientMessage.PSLeaveMsgComment>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.PSLeaveMsgComment> Comments {
      get { return comments_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PSLeaveMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PSLeaveMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if (Content != other.Content) return false;
      if (SendTime != other.SendTime) return false;
      if (SendPlayerId != other.SendPlayerId) return false;
      if(!comments_.Equals(other.comments_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (SendTime != 0) hash ^= SendTime.GetHashCode();
      if (SendPlayerId != 0) hash ^= SendPlayerId.GetHashCode();
      hash ^= comments_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MsgId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MsgId);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Content);
      }
      if (SendTime != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SendTime);
      }
      if (SendPlayerId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SendPlayerId);
      }
      comments_.WriteTo(output, _repeated_comments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
      }
      if (SendTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SendTime);
      }
      if (SendPlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SendPlayerId);
      }
      size += comments_.CalculateSize(_repeated_comments_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PSLeaveMsg other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.SendTime != 0) {
        SendTime = other.SendTime;
      }
      if (other.SendPlayerId != 0) {
        SendPlayerId = other.SendPlayerId;
      }
      comments_.Add(other.comments_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MsgId = input.ReadInt32();
            break;
          }
          case 18: {
            Content = input.ReadBytes();
            break;
          }
          case 24: {
            SendTime = input.ReadInt32();
            break;
          }
          case 32: {
            SendPlayerId = input.ReadInt32();
            break;
          }
          case 42: {
            comments_.AddEntriesFrom(input, _repeated_comments_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 个人空间照片基础信息
  /// </summary>
  public sealed partial class PSPicData : pb::IMessage<PSPicData> {
    private static readonly pb::MessageParser<PSPicData> _parser = new pb::MessageParser<PSPicData>(() => new PSPicData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PSPicData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[312]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PSPicData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PSPicData(PSPicData other) : this() {
      picId_ = other.picId_;
      thumbNailUrl_ = other.thumbNailUrl_;
      zaned_ = other.zaned_;
      msgNum_ = other.msgNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PSPicData Clone() {
      return new PSPicData(this);
    }

    /// <summary>Field number for the "PicId" field.</summary>
    public const int PicIdFieldNumber = 1;
    private int picId_;
    /// <summary>
    /// 图片ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PicId {
      get { return picId_; }
      set {
        picId_ = value;
      }
    }

    /// <summary>Field number for the "ThumbNailUrl" field.</summary>
    public const int ThumbNailUrlFieldNumber = 2;
    private string thumbNailUrl_ = "";
    /// <summary>
    /// 缩略图地址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ThumbNailUrl {
      get { return thumbNailUrl_; }
      set {
        thumbNailUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Zaned" field.</summary>
    public const int ZanedFieldNumber = 3;
    private int zaned_;
    /// <summary>
    /// 被赞数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Zaned {
      get { return zaned_; }
      set {
        zaned_ = value;
      }
    }

    /// <summary>Field number for the "MsgNum" field.</summary>
    public const int MsgNumFieldNumber = 4;
    private int msgNum_;
    /// <summary>
    /// 留言数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgNum {
      get { return msgNum_; }
      set {
        msgNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PSPicData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PSPicData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PicId != other.PicId) return false;
      if (ThumbNailUrl != other.ThumbNailUrl) return false;
      if (Zaned != other.Zaned) return false;
      if (MsgNum != other.MsgNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PicId != 0) hash ^= PicId.GetHashCode();
      if (ThumbNailUrl.Length != 0) hash ^= ThumbNailUrl.GetHashCode();
      if (Zaned != 0) hash ^= Zaned.GetHashCode();
      if (MsgNum != 0) hash ^= MsgNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PicId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PicId);
      }
      if (ThumbNailUrl.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ThumbNailUrl);
      }
      if (Zaned != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Zaned);
      }
      if (MsgNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MsgNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PicId);
      }
      if (ThumbNailUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ThumbNailUrl);
      }
      if (Zaned != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Zaned);
      }
      if (MsgNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PSPicData other) {
      if (other == null) {
        return;
      }
      if (other.PicId != 0) {
        PicId = other.PicId;
      }
      if (other.ThumbNailUrl.Length != 0) {
        ThumbNailUrl = other.ThumbNailUrl;
      }
      if (other.Zaned != 0) {
        Zaned = other.Zaned;
      }
      if (other.MsgNum != 0) {
        MsgNum = other.MsgNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PicId = input.ReadInt32();
            break;
          }
          case 18: {
            ThumbNailUrl = input.ReadString();
            break;
          }
          case 24: {
            Zaned = input.ReadInt32();
            break;
          }
          case 32: {
            MsgNum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 获取个人空间
  /// </summary>
  public sealed partial class C2SGetPersonalSpace : pb::IMessage<C2SGetPersonalSpace> {
    private static readonly pb::MessageParser<C2SGetPersonalSpace> _parser = new pb::MessageParser<C2SGetPersonalSpace>(() => new C2SGetPersonalSpace());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetPersonalSpace> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[313]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetPersonalSpace() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetPersonalSpace(C2SGetPersonalSpace other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetPersonalSpace Clone() {
      return new C2SGetPersonalSpace(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    /// <summary>
    /// 玩家ID 0表示自己
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetPersonalSpace);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetPersonalSpace other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetPersonalSpace other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetPersonalSpace message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12600,
      }

    }
    #endregion

  }

  /// <summary>
  /// 返回个人空间
  /// </summary>
  public sealed partial class S2CGetPersonalSpaceResult : pb::IMessage<S2CGetPersonalSpaceResult> {
    private static readonly pb::MessageParser<S2CGetPersonalSpaceResult> _parser = new pb::MessageParser<S2CGetPersonalSpaceResult>(() => new S2CGetPersonalSpaceResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGetPersonalSpaceResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[314]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetPersonalSpaceResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetPersonalSpaceResult(S2CGetPersonalSpaceResult other) : this() {
      playerId_ = other.playerId_;
      signature_ = other.signature_;
      pics_ = other.pics_.Clone();
      leaveMsgs_ = other.leaveMsgs_.Clone();
      isMoreMsg_ = other.isMoreMsg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGetPersonalSpaceResult Clone() {
      return new S2CGetPersonalSpaceResult(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    /// <summary>
    /// 玩家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "Signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    private string signature_ = "";
    /// <summary>
    /// 签名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Pics" field.</summary>
    public const int PicsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.PSPicData> _repeated_pics_codec
        = pb::FieldCodec.ForMessage(26, global::Msg.ClientMessage.PSPicData.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.PSPicData> pics_ = new pbc::RepeatedField<global::Msg.ClientMessage.PSPicData>();
    /// <summary>
    /// 图片
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.PSPicData> Pics {
      get { return pics_; }
    }

    /// <summary>Field number for the "LeaveMsgs" field.</summary>
    public const int LeaveMsgsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.PSLeaveMsg> _repeated_leaveMsgs_codec
        = pb::FieldCodec.ForMessage(34, global::Msg.ClientMessage.PSLeaveMsg.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.PSLeaveMsg> leaveMsgs_ = new pbc::RepeatedField<global::Msg.ClientMessage.PSLeaveMsg>();
    /// <summary>
    /// 留言
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.PSLeaveMsg> LeaveMsgs {
      get { return leaveMsgs_; }
    }

    /// <summary>Field number for the "IsMoreMsg" field.</summary>
    public const int IsMoreMsgFieldNumber = 5;
    private int isMoreMsg_;
    /// <summary>
    /// 是否有更多留言
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IsMoreMsg {
      get { return isMoreMsg_; }
      set {
        isMoreMsg_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGetPersonalSpaceResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGetPersonalSpaceResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (Signature != other.Signature) return false;
      if(!pics_.Equals(other.pics_)) return false;
      if(!leaveMsgs_.Equals(other.leaveMsgs_)) return false;
      if (IsMoreMsg != other.IsMoreMsg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      hash ^= pics_.GetHashCode();
      hash ^= leaveMsgs_.GetHashCode();
      if (IsMoreMsg != 0) hash ^= IsMoreMsg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (Signature.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Signature);
      }
      pics_.WriteTo(output, _repeated_pics_codec);
      leaveMsgs_.WriteTo(output, _repeated_leaveMsgs_codec);
      if (IsMoreMsg != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(IsMoreMsg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (Signature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Signature);
      }
      size += pics_.CalculateSize(_repeated_pics_codec);
      size += leaveMsgs_.CalculateSize(_repeated_leaveMsgs_codec);
      if (IsMoreMsg != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsMoreMsg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGetPersonalSpaceResult other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
      pics_.Add(other.pics_);
      leaveMsgs_.Add(other.leaveMsgs_);
      if (other.IsMoreMsg != 0) {
        IsMoreMsg = other.IsMoreMsg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            Signature = input.ReadString();
            break;
          }
          case 26: {
            pics_.AddEntriesFrom(input, _repeated_pics_codec);
            break;
          }
          case 34: {
            leaveMsgs_.AddEntriesFrom(input, _repeated_leaveMsgs_codec);
            break;
          }
          case 40: {
            IsMoreMsg = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGetPersonalSpaceResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12601,
      }

    }
    #endregion

  }

  /// <summary>
  /// 修改空间签名
  /// </summary>
  public sealed partial class C2SPersonalSpaceModifySignature : pb::IMessage<C2SPersonalSpaceModifySignature> {
    private static readonly pb::MessageParser<C2SPersonalSpaceModifySignature> _parser = new pb::MessageParser<C2SPersonalSpaceModifySignature>(() => new C2SPersonalSpaceModifySignature());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SPersonalSpaceModifySignature> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[315]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpaceModifySignature() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpaceModifySignature(C2SPersonalSpaceModifySignature other) : this() {
      signature_ = other.signature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpaceModifySignature Clone() {
      return new C2SPersonalSpaceModifySignature(this);
    }

    /// <summary>Field number for the "Signature" field.</summary>
    public const int SignatureFieldNumber = 1;
    private string signature_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SPersonalSpaceModifySignature);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SPersonalSpaceModifySignature other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Signature != other.Signature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Signature.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Signature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Signature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SPersonalSpaceModifySignature other) {
      if (other == null) {
        return;
      }
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Signature = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SPersonalSpaceModifySignature message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12602,
      }

    }
    #endregion

  }

  public sealed partial class S2CPersonalSpaceModifySignatureResult : pb::IMessage<S2CPersonalSpaceModifySignatureResult> {
    private static readonly pb::MessageParser<S2CPersonalSpaceModifySignatureResult> _parser = new pb::MessageParser<S2CPersonalSpaceModifySignatureResult>(() => new S2CPersonalSpaceModifySignatureResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CPersonalSpaceModifySignatureResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[316]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPersonalSpaceModifySignatureResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPersonalSpaceModifySignatureResult(S2CPersonalSpaceModifySignatureResult other) : this() {
      signature_ = other.signature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPersonalSpaceModifySignatureResult Clone() {
      return new S2CPersonalSpaceModifySignatureResult(this);
    }

    /// <summary>Field number for the "Signature" field.</summary>
    public const int SignatureFieldNumber = 1;
    private string signature_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CPersonalSpaceModifySignatureResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CPersonalSpaceModifySignatureResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Signature != other.Signature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Signature.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Signature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Signature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CPersonalSpaceModifySignatureResult other) {
      if (other == null) {
        return;
      }
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Signature = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CPersonalSpaceModifySignatureResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12603,
      }

    }
    #endregion

  }

  /// <summary>
  /// 空间点赞
  /// </summary>
  public sealed partial class C2SPersonalSpaceZan : pb::IMessage<C2SPersonalSpaceZan> {
    private static readonly pb::MessageParser<C2SPersonalSpaceZan> _parser = new pb::MessageParser<C2SPersonalSpaceZan>(() => new C2SPersonalSpaceZan());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SPersonalSpaceZan> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[317]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpaceZan() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpaceZan(C2SPersonalSpaceZan other) : this() {
      playerId_ = other.playerId_;
      picId_ = other.picId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpaceZan Clone() {
      return new C2SPersonalSpaceZan(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    /// <summary>
    /// 玩家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "PicId" field.</summary>
    public const int PicIdFieldNumber = 2;
    private int picId_;
    /// <summary>
    /// 图片ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PicId {
      get { return picId_; }
      set {
        picId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SPersonalSpaceZan);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SPersonalSpaceZan other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PicId != other.PicId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (PicId != 0) hash ^= PicId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (PicId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PicId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (PicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PicId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SPersonalSpaceZan other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PicId != 0) {
        PicId = other.PicId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            PicId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SPersonalSpaceZan message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12604,
      }

    }
    #endregion

  }

  public sealed partial class S2CPersonalSpaceZanResult : pb::IMessage<S2CPersonalSpaceZanResult> {
    private static readonly pb::MessageParser<S2CPersonalSpaceZanResult> _parser = new pb::MessageParser<S2CPersonalSpaceZanResult>(() => new S2CPersonalSpaceZanResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CPersonalSpaceZanResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[318]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPersonalSpaceZanResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPersonalSpaceZanResult(S2CPersonalSpaceZanResult other) : this() {
      playerId_ = other.playerId_;
      picId_ = other.picId_;
      zaned_ = other.zaned_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPersonalSpaceZanResult Clone() {
      return new S2CPersonalSpaceZanResult(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    /// <summary>
    /// 玩家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "PicId" field.</summary>
    public const int PicIdFieldNumber = 2;
    private int picId_;
    /// <summary>
    /// 图片ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PicId {
      get { return picId_; }
      set {
        picId_ = value;
      }
    }

    /// <summary>Field number for the "Zaned" field.</summary>
    public const int ZanedFieldNumber = 3;
    private int zaned_;
    /// <summary>
    /// 点赞数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Zaned {
      get { return zaned_; }
      set {
        zaned_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CPersonalSpaceZanResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CPersonalSpaceZanResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PicId != other.PicId) return false;
      if (Zaned != other.Zaned) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (PicId != 0) hash ^= PicId.GetHashCode();
      if (Zaned != 0) hash ^= Zaned.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (PicId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PicId);
      }
      if (Zaned != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Zaned);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (PicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PicId);
      }
      if (Zaned != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Zaned);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CPersonalSpaceZanResult other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PicId != 0) {
        PicId = other.PicId;
      }
      if (other.Zaned != 0) {
        Zaned = other.Zaned;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            PicId = input.ReadInt32();
            break;
          }
          case 24: {
            Zaned = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CPersonalSpaceZanResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12605,
      }

    }
    #endregion

  }

  /// <summary>
  /// 获取空间单个照片具体数据
  /// </summary>
  public sealed partial class C2SPersonalSpaceGetPicture : pb::IMessage<C2SPersonalSpaceGetPicture> {
    private static readonly pb::MessageParser<C2SPersonalSpaceGetPicture> _parser = new pb::MessageParser<C2SPersonalSpaceGetPicture>(() => new C2SPersonalSpaceGetPicture());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SPersonalSpaceGetPicture> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[319]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpaceGetPicture() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpaceGetPicture(C2SPersonalSpaceGetPicture other) : this() {
      playerId_ = other.playerId_;
      picId_ = other.picId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpaceGetPicture Clone() {
      return new C2SPersonalSpaceGetPicture(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    /// <summary>
    /// 玩家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "PicId" field.</summary>
    public const int PicIdFieldNumber = 2;
    private int picId_;
    /// <summary>
    /// 图片ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PicId {
      get { return picId_; }
      set {
        picId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SPersonalSpaceGetPicture);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SPersonalSpaceGetPicture other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PicId != other.PicId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (PicId != 0) hash ^= PicId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (PicId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PicId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (PicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PicId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SPersonalSpaceGetPicture other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PicId != 0) {
        PicId = other.PicId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            PicId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SPersonalSpaceGetPicture message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12606,
      }

    }
    #endregion

  }

  public sealed partial class S2CPersonalSpaceGetPictureResult : pb::IMessage<S2CPersonalSpaceGetPictureResult> {
    private static readonly pb::MessageParser<S2CPersonalSpaceGetPictureResult> _parser = new pb::MessageParser<S2CPersonalSpaceGetPictureResult>(() => new S2CPersonalSpaceGetPictureResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CPersonalSpaceGetPictureResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[320]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPersonalSpaceGetPictureResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPersonalSpaceGetPictureResult(S2CPersonalSpaceGetPictureResult other) : this() {
      playerId_ = other.playerId_;
      picId_ = other.picId_;
      url_ = other.url_;
      leaveMsgs_ = other.leaveMsgs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPersonalSpaceGetPictureResult Clone() {
      return new S2CPersonalSpaceGetPictureResult(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    /// <summary>
    /// 玩家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "PicId" field.</summary>
    public const int PicIdFieldNumber = 2;
    private int picId_;
    /// <summary>
    /// 图片ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PicId {
      get { return picId_; }
      set {
        picId_ = value;
      }
    }

    /// <summary>Field number for the "Url" field.</summary>
    public const int UrlFieldNumber = 3;
    private string url_ = "";
    /// <summary>
    /// 图片地址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LeaveMsgs" field.</summary>
    public const int LeaveMsgsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.PSLeaveMsg> _repeated_leaveMsgs_codec
        = pb::FieldCodec.ForMessage(34, global::Msg.ClientMessage.PSLeaveMsg.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.PSLeaveMsg> leaveMsgs_ = new pbc::RepeatedField<global::Msg.ClientMessage.PSLeaveMsg>();
    /// <summary>
    /// 留言
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.PSLeaveMsg> LeaveMsgs {
      get { return leaveMsgs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CPersonalSpaceGetPictureResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CPersonalSpaceGetPictureResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PicId != other.PicId) return false;
      if (Url != other.Url) return false;
      if(!leaveMsgs_.Equals(other.leaveMsgs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (PicId != 0) hash ^= PicId.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      hash ^= leaveMsgs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (PicId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PicId);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Url);
      }
      leaveMsgs_.WriteTo(output, _repeated_leaveMsgs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (PicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PicId);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      size += leaveMsgs_.CalculateSize(_repeated_leaveMsgs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CPersonalSpaceGetPictureResult other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PicId != 0) {
        PicId = other.PicId;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      leaveMsgs_.Add(other.leaveMsgs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            PicId = input.ReadInt32();
            break;
          }
          case 26: {
            Url = input.ReadString();
            break;
          }
          case 34: {
            leaveMsgs_.AddEntriesFrom(input, _repeated_leaveMsgs_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CPersonalSpaceGetPictureResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12607,
      }

    }
    #endregion

  }

  /// <summary>
  /// 删除空间照片
  /// </summary>
  public sealed partial class C2SPersonalSpaceDeletePic : pb::IMessage<C2SPersonalSpaceDeletePic> {
    private static readonly pb::MessageParser<C2SPersonalSpaceDeletePic> _parser = new pb::MessageParser<C2SPersonalSpaceDeletePic>(() => new C2SPersonalSpaceDeletePic());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SPersonalSpaceDeletePic> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[321]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpaceDeletePic() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpaceDeletePic(C2SPersonalSpaceDeletePic other) : this() {
      picId_ = other.picId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpaceDeletePic Clone() {
      return new C2SPersonalSpaceDeletePic(this);
    }

    /// <summary>Field number for the "PicId" field.</summary>
    public const int PicIdFieldNumber = 1;
    private int picId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PicId {
      get { return picId_; }
      set {
        picId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SPersonalSpaceDeletePic);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SPersonalSpaceDeletePic other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PicId != other.PicId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PicId != 0) hash ^= PicId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PicId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PicId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PicId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SPersonalSpaceDeletePic other) {
      if (other == null) {
        return;
      }
      if (other.PicId != 0) {
        PicId = other.PicId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PicId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SPersonalSpaceDeletePic message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12608,
      }

    }
    #endregion

  }

  public sealed partial class S2SPersonalSpaceDeletePicResult : pb::IMessage<S2SPersonalSpaceDeletePicResult> {
    private static readonly pb::MessageParser<S2SPersonalSpaceDeletePicResult> _parser = new pb::MessageParser<S2SPersonalSpaceDeletePicResult>(() => new S2SPersonalSpaceDeletePicResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2SPersonalSpaceDeletePicResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[322]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2SPersonalSpaceDeletePicResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2SPersonalSpaceDeletePicResult(S2SPersonalSpaceDeletePicResult other) : this() {
      picId_ = other.picId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2SPersonalSpaceDeletePicResult Clone() {
      return new S2SPersonalSpaceDeletePicResult(this);
    }

    /// <summary>Field number for the "PicId" field.</summary>
    public const int PicIdFieldNumber = 1;
    private int picId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PicId {
      get { return picId_; }
      set {
        picId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2SPersonalSpaceDeletePicResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2SPersonalSpaceDeletePicResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PicId != other.PicId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PicId != 0) hash ^= PicId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PicId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PicId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PicId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2SPersonalSpaceDeletePicResult other) {
      if (other == null) {
        return;
      }
      if (other.PicId != 0) {
        PicId = other.PicId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PicId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2SPersonalSpaceDeletePicResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12609,
      }

    }
    #endregion

  }

  /// <summary>
  /// 拉取空间留言
  /// </summary>
  public sealed partial class C2SPersonalSpacePullLeaveMsg : pb::IMessage<C2SPersonalSpacePullLeaveMsg> {
    private static readonly pb::MessageParser<C2SPersonalSpacePullLeaveMsg> _parser = new pb::MessageParser<C2SPersonalSpacePullLeaveMsg>(() => new C2SPersonalSpacePullLeaveMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SPersonalSpacePullLeaveMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[323]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpacePullLeaveMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpacePullLeaveMsg(C2SPersonalSpacePullLeaveMsg other) : this() {
      playerId_ = other.playerId_;
      picId_ = other.picId_;
      startIndex_ = other.startIndex_;
      msgNum_ = other.msgNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpacePullLeaveMsg Clone() {
      return new C2SPersonalSpacePullLeaveMsg(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "PicId" field.</summary>
    public const int PicIdFieldNumber = 2;
    private int picId_;
    /// <summary>
    /// 图片ID  空间留言时为0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PicId {
      get { return picId_; }
      set {
        picId_ = value;
      }
    }

    /// <summary>Field number for the "StartIndex" field.</summary>
    public const int StartIndexFieldNumber = 3;
    private int startIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartIndex {
      get { return startIndex_; }
      set {
        startIndex_ = value;
      }
    }

    /// <summary>Field number for the "MsgNum" field.</summary>
    public const int MsgNumFieldNumber = 4;
    private int msgNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgNum {
      get { return msgNum_; }
      set {
        msgNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SPersonalSpacePullLeaveMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SPersonalSpacePullLeaveMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PicId != other.PicId) return false;
      if (StartIndex != other.StartIndex) return false;
      if (MsgNum != other.MsgNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (PicId != 0) hash ^= PicId.GetHashCode();
      if (StartIndex != 0) hash ^= StartIndex.GetHashCode();
      if (MsgNum != 0) hash ^= MsgNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (PicId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PicId);
      }
      if (StartIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(StartIndex);
      }
      if (MsgNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MsgNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (PicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PicId);
      }
      if (StartIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
      }
      if (MsgNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SPersonalSpacePullLeaveMsg other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PicId != 0) {
        PicId = other.PicId;
      }
      if (other.StartIndex != 0) {
        StartIndex = other.StartIndex;
      }
      if (other.MsgNum != 0) {
        MsgNum = other.MsgNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            PicId = input.ReadInt32();
            break;
          }
          case 24: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 32: {
            MsgNum = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SPersonalSpacePullLeaveMsg message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12610,
      }

    }
    #endregion

  }

  public sealed partial class S2CPersonalSpacePullLeaveMsgResult : pb::IMessage<S2CPersonalSpacePullLeaveMsgResult> {
    private static readonly pb::MessageParser<S2CPersonalSpacePullLeaveMsgResult> _parser = new pb::MessageParser<S2CPersonalSpacePullLeaveMsgResult>(() => new S2CPersonalSpacePullLeaveMsgResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CPersonalSpacePullLeaveMsgResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[324]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPersonalSpacePullLeaveMsgResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPersonalSpacePullLeaveMsgResult(S2CPersonalSpacePullLeaveMsgResult other) : this() {
      playerId_ = other.playerId_;
      picId_ = other.picId_;
      startIndex_ = other.startIndex_;
      msgNum_ = other.msgNum_;
      leaveMsgs_ = other.leaveMsgs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPersonalSpacePullLeaveMsgResult Clone() {
      return new S2CPersonalSpacePullLeaveMsgResult(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "PicId" field.</summary>
    public const int PicIdFieldNumber = 2;
    private int picId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PicId {
      get { return picId_; }
      set {
        picId_ = value;
      }
    }

    /// <summary>Field number for the "StartIndex" field.</summary>
    public const int StartIndexFieldNumber = 3;
    private int startIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartIndex {
      get { return startIndex_; }
      set {
        startIndex_ = value;
      }
    }

    /// <summary>Field number for the "MsgNum" field.</summary>
    public const int MsgNumFieldNumber = 4;
    private int msgNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgNum {
      get { return msgNum_; }
      set {
        msgNum_ = value;
      }
    }

    /// <summary>Field number for the "LeaveMsgs" field.</summary>
    public const int LeaveMsgsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.PSLeaveMsg> _repeated_leaveMsgs_codec
        = pb::FieldCodec.ForMessage(42, global::Msg.ClientMessage.PSLeaveMsg.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.PSLeaveMsg> leaveMsgs_ = new pbc::RepeatedField<global::Msg.ClientMessage.PSLeaveMsg>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.PSLeaveMsg> LeaveMsgs {
      get { return leaveMsgs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CPersonalSpacePullLeaveMsgResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CPersonalSpacePullLeaveMsgResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PicId != other.PicId) return false;
      if (StartIndex != other.StartIndex) return false;
      if (MsgNum != other.MsgNum) return false;
      if(!leaveMsgs_.Equals(other.leaveMsgs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (PicId != 0) hash ^= PicId.GetHashCode();
      if (StartIndex != 0) hash ^= StartIndex.GetHashCode();
      if (MsgNum != 0) hash ^= MsgNum.GetHashCode();
      hash ^= leaveMsgs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (PicId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PicId);
      }
      if (StartIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(StartIndex);
      }
      if (MsgNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MsgNum);
      }
      leaveMsgs_.WriteTo(output, _repeated_leaveMsgs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (PicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PicId);
      }
      if (StartIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
      }
      if (MsgNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgNum);
      }
      size += leaveMsgs_.CalculateSize(_repeated_leaveMsgs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CPersonalSpacePullLeaveMsgResult other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PicId != 0) {
        PicId = other.PicId;
      }
      if (other.StartIndex != 0) {
        StartIndex = other.StartIndex;
      }
      if (other.MsgNum != 0) {
        MsgNum = other.MsgNum;
      }
      leaveMsgs_.Add(other.leaveMsgs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            PicId = input.ReadInt32();
            break;
          }
          case 24: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 32: {
            MsgNum = input.ReadInt32();
            break;
          }
          case 42: {
            leaveMsgs_.AddEntriesFrom(input, _repeated_leaveMsgs_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CPersonalSpacePullLeaveMsgResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12611,
      }

    }
    #endregion

  }

  /// <summary>
  /// 发送空间留言
  /// </summary>
  public sealed partial class C2SPersonalSpaceSendLeaveMsg : pb::IMessage<C2SPersonalSpaceSendLeaveMsg> {
    private static readonly pb::MessageParser<C2SPersonalSpaceSendLeaveMsg> _parser = new pb::MessageParser<C2SPersonalSpaceSendLeaveMsg>(() => new C2SPersonalSpaceSendLeaveMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SPersonalSpaceSendLeaveMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[325]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpaceSendLeaveMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpaceSendLeaveMsg(C2SPersonalSpaceSendLeaveMsg other) : this() {
      playerId_ = other.playerId_;
      picId_ = other.picId_;
      leaveMsg_ = other.leaveMsg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpaceSendLeaveMsg Clone() {
      return new C2SPersonalSpaceSendLeaveMsg(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "PicId" field.</summary>
    public const int PicIdFieldNumber = 2;
    private int picId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PicId {
      get { return picId_; }
      set {
        picId_ = value;
      }
    }

    /// <summary>Field number for the "LeaveMsg" field.</summary>
    public const int LeaveMsgFieldNumber = 3;
    private pb::ByteString leaveMsg_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString LeaveMsg {
      get { return leaveMsg_; }
      set {
        leaveMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SPersonalSpaceSendLeaveMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SPersonalSpaceSendLeaveMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PicId != other.PicId) return false;
      if (LeaveMsg != other.LeaveMsg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (PicId != 0) hash ^= PicId.GetHashCode();
      if (LeaveMsg.Length != 0) hash ^= LeaveMsg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (PicId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PicId);
      }
      if (LeaveMsg.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(LeaveMsg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (PicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PicId);
      }
      if (LeaveMsg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(LeaveMsg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SPersonalSpaceSendLeaveMsg other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PicId != 0) {
        PicId = other.PicId;
      }
      if (other.LeaveMsg.Length != 0) {
        LeaveMsg = other.LeaveMsg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            PicId = input.ReadInt32();
            break;
          }
          case 26: {
            LeaveMsg = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SPersonalSpaceSendLeaveMsg message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12612,
      }

    }
    #endregion

  }

  public sealed partial class S2CPersonalSpaceSendLeaveMsgResult : pb::IMessage<S2CPersonalSpaceSendLeaveMsgResult> {
    private static readonly pb::MessageParser<S2CPersonalSpaceSendLeaveMsgResult> _parser = new pb::MessageParser<S2CPersonalSpaceSendLeaveMsgResult>(() => new S2CPersonalSpaceSendLeaveMsgResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CPersonalSpaceSendLeaveMsgResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[326]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPersonalSpaceSendLeaveMsgResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPersonalSpaceSendLeaveMsgResult(S2CPersonalSpaceSendLeaveMsgResult other) : this() {
      playerId_ = other.playerId_;
      picId_ = other.picId_;
      leaveMsg_ = other.leaveMsg_;
      msgId_ = other.msgId_;
      sendTime_ = other.sendTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPersonalSpaceSendLeaveMsgResult Clone() {
      return new S2CPersonalSpaceSendLeaveMsgResult(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "PicId" field.</summary>
    public const int PicIdFieldNumber = 2;
    private int picId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PicId {
      get { return picId_; }
      set {
        picId_ = value;
      }
    }

    /// <summary>Field number for the "LeaveMsg" field.</summary>
    public const int LeaveMsgFieldNumber = 3;
    private pb::ByteString leaveMsg_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString LeaveMsg {
      get { return leaveMsg_; }
      set {
        leaveMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MsgId" field.</summary>
    public const int MsgIdFieldNumber = 4;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "SendTime" field.</summary>
    public const int SendTimeFieldNumber = 5;
    private int sendTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SendTime {
      get { return sendTime_; }
      set {
        sendTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CPersonalSpaceSendLeaveMsgResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CPersonalSpaceSendLeaveMsgResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PicId != other.PicId) return false;
      if (LeaveMsg != other.LeaveMsg) return false;
      if (MsgId != other.MsgId) return false;
      if (SendTime != other.SendTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (PicId != 0) hash ^= PicId.GetHashCode();
      if (LeaveMsg.Length != 0) hash ^= LeaveMsg.GetHashCode();
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (SendTime != 0) hash ^= SendTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (PicId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PicId);
      }
      if (LeaveMsg.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(LeaveMsg);
      }
      if (MsgId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MsgId);
      }
      if (SendTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(SendTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (PicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PicId);
      }
      if (LeaveMsg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(LeaveMsg);
      }
      if (MsgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (SendTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SendTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CPersonalSpaceSendLeaveMsgResult other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PicId != 0) {
        PicId = other.PicId;
      }
      if (other.LeaveMsg.Length != 0) {
        LeaveMsg = other.LeaveMsg;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.SendTime != 0) {
        SendTime = other.SendTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            PicId = input.ReadInt32();
            break;
          }
          case 26: {
            LeaveMsg = input.ReadBytes();
            break;
          }
          case 32: {
            MsgId = input.ReadInt32();
            break;
          }
          case 40: {
            SendTime = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CPersonalSpaceSendLeaveMsgResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12613,
      }

    }
    #endregion

  }

  /// <summary>
  /// 删除空间留言
  /// </summary>
  public sealed partial class C2SPersonalSpaceDelLeaveMsg : pb::IMessage<C2SPersonalSpaceDelLeaveMsg> {
    private static readonly pb::MessageParser<C2SPersonalSpaceDelLeaveMsg> _parser = new pb::MessageParser<C2SPersonalSpaceDelLeaveMsg>(() => new C2SPersonalSpaceDelLeaveMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SPersonalSpaceDelLeaveMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[327]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpaceDelLeaveMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpaceDelLeaveMsg(C2SPersonalSpaceDelLeaveMsg other) : this() {
      playerId_ = other.playerId_;
      picId_ = other.picId_;
      msgId_ = other.msgId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpaceDelLeaveMsg Clone() {
      return new C2SPersonalSpaceDelLeaveMsg(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "PicId" field.</summary>
    public const int PicIdFieldNumber = 2;
    private int picId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PicId {
      get { return picId_; }
      set {
        picId_ = value;
      }
    }

    /// <summary>Field number for the "MsgId" field.</summary>
    public const int MsgIdFieldNumber = 3;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SPersonalSpaceDelLeaveMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SPersonalSpaceDelLeaveMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PicId != other.PicId) return false;
      if (MsgId != other.MsgId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (PicId != 0) hash ^= PicId.GetHashCode();
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (PicId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PicId);
      }
      if (MsgId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (PicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PicId);
      }
      if (MsgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SPersonalSpaceDelLeaveMsg other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PicId != 0) {
        PicId = other.PicId;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            PicId = input.ReadInt32();
            break;
          }
          case 24: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SPersonalSpaceDelLeaveMsg message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12614,
      }

    }
    #endregion

  }

  public sealed partial class S2CPersonalSpaceDelLeaveMsgResult : pb::IMessage<S2CPersonalSpaceDelLeaveMsgResult> {
    private static readonly pb::MessageParser<S2CPersonalSpaceDelLeaveMsgResult> _parser = new pb::MessageParser<S2CPersonalSpaceDelLeaveMsgResult>(() => new S2CPersonalSpaceDelLeaveMsgResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CPersonalSpaceDelLeaveMsgResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[328]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPersonalSpaceDelLeaveMsgResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPersonalSpaceDelLeaveMsgResult(S2CPersonalSpaceDelLeaveMsgResult other) : this() {
      playerId_ = other.playerId_;
      picId_ = other.picId_;
      msgId_ = other.msgId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPersonalSpaceDelLeaveMsgResult Clone() {
      return new S2CPersonalSpaceDelLeaveMsgResult(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "PicId" field.</summary>
    public const int PicIdFieldNumber = 2;
    private int picId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PicId {
      get { return picId_; }
      set {
        picId_ = value;
      }
    }

    /// <summary>Field number for the "MsgId" field.</summary>
    public const int MsgIdFieldNumber = 3;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CPersonalSpaceDelLeaveMsgResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CPersonalSpaceDelLeaveMsgResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PicId != other.PicId) return false;
      if (MsgId != other.MsgId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (PicId != 0) hash ^= PicId.GetHashCode();
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (PicId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PicId);
      }
      if (MsgId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (PicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PicId);
      }
      if (MsgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CPersonalSpaceDelLeaveMsgResult other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PicId != 0) {
        PicId = other.PicId;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            PicId = input.ReadInt32();
            break;
          }
          case 24: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CPersonalSpaceDelLeaveMsgResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12615,
      }

    }
    #endregion

  }

  /// <summary>
  /// 发送空间留言评论
  /// </summary>
  public sealed partial class C2SPersonalSpaceSendLeaveMsgComment : pb::IMessage<C2SPersonalSpaceSendLeaveMsgComment> {
    private static readonly pb::MessageParser<C2SPersonalSpaceSendLeaveMsgComment> _parser = new pb::MessageParser<C2SPersonalSpaceSendLeaveMsgComment>(() => new C2SPersonalSpaceSendLeaveMsgComment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SPersonalSpaceSendLeaveMsgComment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[329]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpaceSendLeaveMsgComment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpaceSendLeaveMsgComment(C2SPersonalSpaceSendLeaveMsgComment other) : this() {
      playerId_ = other.playerId_;
      picId_ = other.picId_;
      msgId_ = other.msgId_;
      comment_ = other.comment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpaceSendLeaveMsgComment Clone() {
      return new C2SPersonalSpaceSendLeaveMsgComment(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    /// <summary>
    /// 玩家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "PicId" field.</summary>
    public const int PicIdFieldNumber = 2;
    private int picId_;
    /// <summary>
    /// 图片ID  空间留言时为0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PicId {
      get { return picId_; }
      set {
        picId_ = value;
      }
    }

    /// <summary>Field number for the "MsgId" field.</summary>
    public const int MsgIdFieldNumber = 3;
    private int msgId_;
    /// <summary>
    /// 留言ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "Comment" field.</summary>
    public const int CommentFieldNumber = 4;
    private pb::ByteString comment_ = pb::ByteString.Empty;
    /// <summary>
    /// 评论内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SPersonalSpaceSendLeaveMsgComment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SPersonalSpaceSendLeaveMsgComment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PicId != other.PicId) return false;
      if (MsgId != other.MsgId) return false;
      if (Comment != other.Comment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (PicId != 0) hash ^= PicId.GetHashCode();
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (PicId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PicId);
      }
      if (MsgId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MsgId);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (PicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PicId);
      }
      if (MsgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (Comment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Comment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SPersonalSpaceSendLeaveMsgComment other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PicId != 0) {
        PicId = other.PicId;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            PicId = input.ReadInt32();
            break;
          }
          case 24: {
            MsgId = input.ReadInt32();
            break;
          }
          case 34: {
            Comment = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SPersonalSpaceSendLeaveMsgComment message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12616,
      }

    }
    #endregion

  }

  public sealed partial class S2CPersonalSpaceSendLeaveMsgCommentResult : pb::IMessage<S2CPersonalSpaceSendLeaveMsgCommentResult> {
    private static readonly pb::MessageParser<S2CPersonalSpaceSendLeaveMsgCommentResult> _parser = new pb::MessageParser<S2CPersonalSpaceSendLeaveMsgCommentResult>(() => new S2CPersonalSpaceSendLeaveMsgCommentResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CPersonalSpaceSendLeaveMsgCommentResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[330]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPersonalSpaceSendLeaveMsgCommentResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPersonalSpaceSendLeaveMsgCommentResult(S2CPersonalSpaceSendLeaveMsgCommentResult other) : this() {
      playerId_ = other.playerId_;
      picId_ = other.picId_;
      msgId_ = other.msgId_;
      comment_ = other.comment_;
      commentId_ = other.commentId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPersonalSpaceSendLeaveMsgCommentResult Clone() {
      return new S2CPersonalSpaceSendLeaveMsgCommentResult(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "PicId" field.</summary>
    public const int PicIdFieldNumber = 2;
    private int picId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PicId {
      get { return picId_; }
      set {
        picId_ = value;
      }
    }

    /// <summary>Field number for the "MsgId" field.</summary>
    public const int MsgIdFieldNumber = 3;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "Comment" field.</summary>
    public const int CommentFieldNumber = 4;
    private pb::ByteString comment_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CommentId" field.</summary>
    public const int CommentIdFieldNumber = 5;
    private int commentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CommentId {
      get { return commentId_; }
      set {
        commentId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CPersonalSpaceSendLeaveMsgCommentResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CPersonalSpaceSendLeaveMsgCommentResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PicId != other.PicId) return false;
      if (MsgId != other.MsgId) return false;
      if (Comment != other.Comment) return false;
      if (CommentId != other.CommentId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (PicId != 0) hash ^= PicId.GetHashCode();
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (CommentId != 0) hash ^= CommentId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (PicId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PicId);
      }
      if (MsgId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MsgId);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Comment);
      }
      if (CommentId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CommentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (PicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PicId);
      }
      if (MsgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (Comment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Comment);
      }
      if (CommentId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CommentId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CPersonalSpaceSendLeaveMsgCommentResult other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PicId != 0) {
        PicId = other.PicId;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      if (other.CommentId != 0) {
        CommentId = other.CommentId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            PicId = input.ReadInt32();
            break;
          }
          case 24: {
            MsgId = input.ReadInt32();
            break;
          }
          case 34: {
            Comment = input.ReadBytes();
            break;
          }
          case 40: {
            CommentId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CPersonalSpaceSendLeaveMsgCommentResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12617,
      }

    }
    #endregion

  }

  /// <summary>
  /// 删除空间留言评论
  /// </summary>
  public sealed partial class C2SPersonalSpaceDelLeaveMsgComment : pb::IMessage<C2SPersonalSpaceDelLeaveMsgComment> {
    private static readonly pb::MessageParser<C2SPersonalSpaceDelLeaveMsgComment> _parser = new pb::MessageParser<C2SPersonalSpaceDelLeaveMsgComment>(() => new C2SPersonalSpaceDelLeaveMsgComment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SPersonalSpaceDelLeaveMsgComment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[331]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpaceDelLeaveMsgComment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpaceDelLeaveMsgComment(C2SPersonalSpaceDelLeaveMsgComment other) : this() {
      playerId_ = other.playerId_;
      picId_ = other.picId_;
      msgId_ = other.msgId_;
      commentId_ = other.commentId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpaceDelLeaveMsgComment Clone() {
      return new C2SPersonalSpaceDelLeaveMsgComment(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "PicId" field.</summary>
    public const int PicIdFieldNumber = 2;
    private int picId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PicId {
      get { return picId_; }
      set {
        picId_ = value;
      }
    }

    /// <summary>Field number for the "MsgId" field.</summary>
    public const int MsgIdFieldNumber = 3;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "CommentId" field.</summary>
    public const int CommentIdFieldNumber = 4;
    private int commentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CommentId {
      get { return commentId_; }
      set {
        commentId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SPersonalSpaceDelLeaveMsgComment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SPersonalSpaceDelLeaveMsgComment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PicId != other.PicId) return false;
      if (MsgId != other.MsgId) return false;
      if (CommentId != other.CommentId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (PicId != 0) hash ^= PicId.GetHashCode();
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (CommentId != 0) hash ^= CommentId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (PicId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PicId);
      }
      if (MsgId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MsgId);
      }
      if (CommentId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CommentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (PicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PicId);
      }
      if (MsgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (CommentId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CommentId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SPersonalSpaceDelLeaveMsgComment other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PicId != 0) {
        PicId = other.PicId;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.CommentId != 0) {
        CommentId = other.CommentId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            PicId = input.ReadInt32();
            break;
          }
          case 24: {
            MsgId = input.ReadInt32();
            break;
          }
          case 32: {
            CommentId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SPersonalSpaceDelLeaveMsgComment message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12618,
      }

    }
    #endregion

  }

  public sealed partial class S2CPersonalSpaceDelLeaveMsgCommentResult : pb::IMessage<S2CPersonalSpaceDelLeaveMsgCommentResult> {
    private static readonly pb::MessageParser<S2CPersonalSpaceDelLeaveMsgCommentResult> _parser = new pb::MessageParser<S2CPersonalSpaceDelLeaveMsgCommentResult>(() => new S2CPersonalSpaceDelLeaveMsgCommentResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CPersonalSpaceDelLeaveMsgCommentResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[332]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPersonalSpaceDelLeaveMsgCommentResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPersonalSpaceDelLeaveMsgCommentResult(S2CPersonalSpaceDelLeaveMsgCommentResult other) : this() {
      playerId_ = other.playerId_;
      picId_ = other.picId_;
      msgId_ = other.msgId_;
      commentId_ = other.commentId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPersonalSpaceDelLeaveMsgCommentResult Clone() {
      return new S2CPersonalSpaceDelLeaveMsgCommentResult(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "PicId" field.</summary>
    public const int PicIdFieldNumber = 2;
    private int picId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PicId {
      get { return picId_; }
      set {
        picId_ = value;
      }
    }

    /// <summary>Field number for the "MsgId" field.</summary>
    public const int MsgIdFieldNumber = 3;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "CommentId" field.</summary>
    public const int CommentIdFieldNumber = 4;
    private int commentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CommentId {
      get { return commentId_; }
      set {
        commentId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CPersonalSpaceDelLeaveMsgCommentResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CPersonalSpaceDelLeaveMsgCommentResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PicId != other.PicId) return false;
      if (MsgId != other.MsgId) return false;
      if (CommentId != other.CommentId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (PicId != 0) hash ^= PicId.GetHashCode();
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (CommentId != 0) hash ^= CommentId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (PicId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PicId);
      }
      if (MsgId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MsgId);
      }
      if (CommentId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CommentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (PicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PicId);
      }
      if (MsgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (CommentId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CommentId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CPersonalSpaceDelLeaveMsgCommentResult other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PicId != 0) {
        PicId = other.PicId;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.CommentId != 0) {
        CommentId = other.CommentId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            PicId = input.ReadInt32();
            break;
          }
          case 24: {
            MsgId = input.ReadInt32();
            break;
          }
          case 32: {
            CommentId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CPersonalSpaceDelLeaveMsgCommentResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12619,
      }

    }
    #endregion

  }

  /// <summary>
  /// 拉取空间留言评论
  /// </summary>
  public sealed partial class C2SPersonalSpacePullLeaveMsgComment : pb::IMessage<C2SPersonalSpacePullLeaveMsgComment> {
    private static readonly pb::MessageParser<C2SPersonalSpacePullLeaveMsgComment> _parser = new pb::MessageParser<C2SPersonalSpacePullLeaveMsgComment>(() => new C2SPersonalSpacePullLeaveMsgComment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SPersonalSpacePullLeaveMsgComment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[333]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpacePullLeaveMsgComment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpacePullLeaveMsgComment(C2SPersonalSpacePullLeaveMsgComment other) : this() {
      playerId_ = other.playerId_;
      picId_ = other.picId_;
      msgId_ = other.msgId_;
      startIndex_ = other.startIndex_;
      commentNum_ = other.commentNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPersonalSpacePullLeaveMsgComment Clone() {
      return new C2SPersonalSpacePullLeaveMsgComment(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "PicId" field.</summary>
    public const int PicIdFieldNumber = 2;
    private int picId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PicId {
      get { return picId_; }
      set {
        picId_ = value;
      }
    }

    /// <summary>Field number for the "MsgId" field.</summary>
    public const int MsgIdFieldNumber = 3;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "StartIndex" field.</summary>
    public const int StartIndexFieldNumber = 4;
    private int startIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartIndex {
      get { return startIndex_; }
      set {
        startIndex_ = value;
      }
    }

    /// <summary>Field number for the "CommentNum" field.</summary>
    public const int CommentNumFieldNumber = 5;
    private int commentNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CommentNum {
      get { return commentNum_; }
      set {
        commentNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SPersonalSpacePullLeaveMsgComment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SPersonalSpacePullLeaveMsgComment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PicId != other.PicId) return false;
      if (MsgId != other.MsgId) return false;
      if (StartIndex != other.StartIndex) return false;
      if (CommentNum != other.CommentNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (PicId != 0) hash ^= PicId.GetHashCode();
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (StartIndex != 0) hash ^= StartIndex.GetHashCode();
      if (CommentNum != 0) hash ^= CommentNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (PicId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PicId);
      }
      if (MsgId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MsgId);
      }
      if (StartIndex != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(StartIndex);
      }
      if (CommentNum != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CommentNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (PicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PicId);
      }
      if (MsgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (StartIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
      }
      if (CommentNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CommentNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SPersonalSpacePullLeaveMsgComment other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PicId != 0) {
        PicId = other.PicId;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.StartIndex != 0) {
        StartIndex = other.StartIndex;
      }
      if (other.CommentNum != 0) {
        CommentNum = other.CommentNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            PicId = input.ReadInt32();
            break;
          }
          case 24: {
            MsgId = input.ReadInt32();
            break;
          }
          case 32: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 40: {
            CommentNum = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SPersonalSpacePullLeaveMsgComment message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12620,
      }

    }
    #endregion

  }

  public sealed partial class S2CPersonalSpacePullLeaveMsgCommentResult : pb::IMessage<S2CPersonalSpacePullLeaveMsgCommentResult> {
    private static readonly pb::MessageParser<S2CPersonalSpacePullLeaveMsgCommentResult> _parser = new pb::MessageParser<S2CPersonalSpacePullLeaveMsgCommentResult>(() => new S2CPersonalSpacePullLeaveMsgCommentResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CPersonalSpacePullLeaveMsgCommentResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[334]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPersonalSpacePullLeaveMsgCommentResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPersonalSpacePullLeaveMsgCommentResult(S2CPersonalSpacePullLeaveMsgCommentResult other) : this() {
      playerId_ = other.playerId_;
      picId_ = other.picId_;
      msgId_ = other.msgId_;
      startIndex_ = other.startIndex_;
      commentNum_ = other.commentNum_;
      comments_ = other.comments_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPersonalSpacePullLeaveMsgCommentResult Clone() {
      return new S2CPersonalSpacePullLeaveMsgCommentResult(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "PicId" field.</summary>
    public const int PicIdFieldNumber = 2;
    private int picId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PicId {
      get { return picId_; }
      set {
        picId_ = value;
      }
    }

    /// <summary>Field number for the "MsgId" field.</summary>
    public const int MsgIdFieldNumber = 3;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "StartIndex" field.</summary>
    public const int StartIndexFieldNumber = 4;
    private int startIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartIndex {
      get { return startIndex_; }
      set {
        startIndex_ = value;
      }
    }

    /// <summary>Field number for the "CommentNum" field.</summary>
    public const int CommentNumFieldNumber = 5;
    private int commentNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CommentNum {
      get { return commentNum_; }
      set {
        commentNum_ = value;
      }
    }

    /// <summary>Field number for the "Comments" field.</summary>
    public const int CommentsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.PSLeaveMsgComment> _repeated_comments_codec
        = pb::FieldCodec.ForMessage(50, global::Msg.ClientMessage.PSLeaveMsgComment.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.PSLeaveMsgComment> comments_ = new pbc::RepeatedField<global::Msg.ClientMessage.PSLeaveMsgComment>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.PSLeaveMsgComment> Comments {
      get { return comments_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CPersonalSpacePullLeaveMsgCommentResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CPersonalSpacePullLeaveMsgCommentResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PicId != other.PicId) return false;
      if (MsgId != other.MsgId) return false;
      if (StartIndex != other.StartIndex) return false;
      if (CommentNum != other.CommentNum) return false;
      if(!comments_.Equals(other.comments_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (PicId != 0) hash ^= PicId.GetHashCode();
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (StartIndex != 0) hash ^= StartIndex.GetHashCode();
      if (CommentNum != 0) hash ^= CommentNum.GetHashCode();
      hash ^= comments_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (PicId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PicId);
      }
      if (MsgId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MsgId);
      }
      if (StartIndex != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(StartIndex);
      }
      if (CommentNum != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CommentNum);
      }
      comments_.WriteTo(output, _repeated_comments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (PicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PicId);
      }
      if (MsgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (StartIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
      }
      if (CommentNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CommentNum);
      }
      size += comments_.CalculateSize(_repeated_comments_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CPersonalSpacePullLeaveMsgCommentResult other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PicId != 0) {
        PicId = other.PicId;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.StartIndex != 0) {
        StartIndex = other.StartIndex;
      }
      if (other.CommentNum != 0) {
        CommentNum = other.CommentNum;
      }
      comments_.Add(other.comments_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            PicId = input.ReadInt32();
            break;
          }
          case 24: {
            MsgId = input.ReadInt32();
            break;
          }
          case 32: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 40: {
            CommentNum = input.ReadInt32();
            break;
          }
          case 50: {
            comments_.AddEntriesFrom(input, _repeated_comments_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CPersonalSpacePullLeaveMsgCommentResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12621,
      }

    }
    #endregion

  }

  /// <summary>
  /// ---------------------------------- 充值 ------------------------------------
  /// 充值数据
  /// </summary>
  public sealed partial class C2SChargeDataRequest : pb::IMessage<C2SChargeDataRequest> {
    private static readonly pb::MessageParser<C2SChargeDataRequest> _parser = new pb::MessageParser<C2SChargeDataRequest>(() => new C2SChargeDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SChargeDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[335]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChargeDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChargeDataRequest(C2SChargeDataRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChargeDataRequest Clone() {
      return new C2SChargeDataRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SChargeDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SChargeDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SChargeDataRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SChargeDataRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12700,
      }

    }
    #endregion

  }

  public sealed partial class MonthCardData : pb::IMessage<MonthCardData> {
    private static readonly pb::MessageParser<MonthCardData> _parser = new pb::MessageParser<MonthCardData>(() => new MonthCardData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MonthCardData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[336]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonthCardData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonthCardData(MonthCardData other) : this() {
      id_ = other.id_;
      endTime_ = other.endTime_;
      sendMailNum_ = other.sendMailNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonthCardData Clone() {
      return new MonthCardData(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// BundleId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "EndTime" field.</summary>
    public const int EndTimeFieldNumber = 2;
    private int endTime_;
    /// <summary>
    /// 结束时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "SendMailNum" field.</summary>
    public const int SendMailNumFieldNumber = 3;
    private int sendMailNum_;
    /// <summary>
    /// 已发送奖励邮件数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SendMailNum {
      get { return sendMailNum_; }
      set {
        sendMailNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MonthCardData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MonthCardData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (EndTime != other.EndTime) return false;
      if (SendMailNum != other.SendMailNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (EndTime != 0) hash ^= EndTime.GetHashCode();
      if (SendMailNum != 0) hash ^= SendMailNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (EndTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EndTime);
      }
      if (SendMailNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SendMailNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (EndTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndTime);
      }
      if (SendMailNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SendMailNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MonthCardData other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.EndTime != 0) {
        EndTime = other.EndTime;
      }
      if (other.SendMailNum != 0) {
        SendMailNum = other.SendMailNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            EndTime = input.ReadInt32();
            break;
          }
          case 24: {
            SendMailNum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CChargeDataResponse : pb::IMessage<S2CChargeDataResponse> {
    private static readonly pb::MessageParser<S2CChargeDataResponse> _parser = new pb::MessageParser<S2CChargeDataResponse>(() => new S2CChargeDataResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CChargeDataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[337]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChargeDataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChargeDataResponse(S2CChargeDataResponse other) : this() {
      firstChargeState_ = other.firstChargeState_;
      datas_ = other.datas_.Clone();
      chargedIds_ = other.chargedIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChargeDataResponse Clone() {
      return new S2CChargeDataResponse(this);
    }

    /// <summary>Field number for the "FirstChargeState" field.</summary>
    public const int FirstChargeStateFieldNumber = 1;
    private int firstChargeState_;
    /// <summary>
    /// 首充状态 0 未充  1 已充可领取  2 已领取
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FirstChargeState {
      get { return firstChargeState_; }
      set {
        firstChargeState_ = value;
      }
    }

    /// <summary>Field number for the "Datas" field.</summary>
    public const int DatasFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.MonthCardData> _repeated_datas_codec
        = pb::FieldCodec.ForMessage(18, global::Msg.ClientMessage.MonthCardData.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.MonthCardData> datas_ = new pbc::RepeatedField<global::Msg.ClientMessage.MonthCardData>();
    /// <summary>
    /// 月卡数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.MonthCardData> Datas {
      get { return datas_; }
    }

    /// <summary>Field number for the "ChargedIds" field.</summary>
    public const int ChargedIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_chargedIds_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> chargedIds_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 已充过值的BundleId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ChargedIds {
      get { return chargedIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CChargeDataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CChargeDataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FirstChargeState != other.FirstChargeState) return false;
      if(!datas_.Equals(other.datas_)) return false;
      if(!chargedIds_.Equals(other.chargedIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FirstChargeState != 0) hash ^= FirstChargeState.GetHashCode();
      hash ^= datas_.GetHashCode();
      hash ^= chargedIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FirstChargeState != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FirstChargeState);
      }
      datas_.WriteTo(output, _repeated_datas_codec);
      chargedIds_.WriteTo(output, _repeated_chargedIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FirstChargeState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FirstChargeState);
      }
      size += datas_.CalculateSize(_repeated_datas_codec);
      size += chargedIds_.CalculateSize(_repeated_chargedIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CChargeDataResponse other) {
      if (other == null) {
        return;
      }
      if (other.FirstChargeState != 0) {
        FirstChargeState = other.FirstChargeState;
      }
      datas_.Add(other.datas_);
      chargedIds_.Add(other.chargedIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FirstChargeState = input.ReadInt32();
            break;
          }
          case 18: {
            datas_.AddEntriesFrom(input, _repeated_datas_codec);
            break;
          }
          case 26:
          case 24: {
            chargedIds_.AddEntriesFrom(input, _repeated_chargedIds_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CChargeDataResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12701,
      }

    }
    #endregion

  }

  /// <summary>
  /// 充值请求 
  /// </summary>
  public sealed partial class C2SChargeRequest : pb::IMessage<C2SChargeRequest> {
    private static readonly pb::MessageParser<C2SChargeRequest> _parser = new pb::MessageParser<C2SChargeRequest>(() => new C2SChargeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SChargeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[338]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChargeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChargeRequest(C2SChargeRequest other) : this() {
      itemId_ = other.itemId_;
      channel_ = other.channel_;
      bundleId_ = other.bundleId_;
      purchareData_ = other.purchareData_;
      extraData_ = other.extraData_;
      clientIndex_ = other.clientIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChargeRequest Clone() {
      return new C2SChargeRequest(this);
    }

    /// <summary>Field number for the "ItemId" field.</summary>
    public const int ItemIdFieldNumber = 6;
    private int itemId_;
    /// <summary>
    /// 商品ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "Channel" field.</summary>
    public const int ChannelFieldNumber = 1;
    private int channel_;
    /// <summary>
    /// 渠道  1 google   2 appele
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Channel {
      get { return channel_; }
      set {
        channel_ = value;
      }
    }

    /// <summary>Field number for the "BundleId" field.</summary>
    public const int BundleIdFieldNumber = 2;
    private string bundleId_ = "";
    /// <summary>
    /// BundleId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BundleId {
      get { return bundleId_; }
      set {
        bundleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PurchareData" field.</summary>
    public const int PurchareDataFieldNumber = 3;
    private pb::ByteString purchareData_ = pb::ByteString.Empty;
    /// <summary>
    /// 需要验证的支付数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PurchareData {
      get { return purchareData_; }
      set {
        purchareData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ExtraData" field.</summary>
    public const int ExtraDataFieldNumber = 4;
    private pb::ByteString extraData_ = pb::ByteString.Empty;
    /// <summary>
    /// 额外数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ExtraData {
      get { return extraData_; }
      set {
        extraData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ClientIndex" field.</summary>
    public const int ClientIndexFieldNumber = 5;
    private int clientIndex_;
    /// <summary>
    /// 客户端索引，用于标记充值记录
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ClientIndex {
      get { return clientIndex_; }
      set {
        clientIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SChargeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SChargeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (Channel != other.Channel) return false;
      if (BundleId != other.BundleId) return false;
      if (PurchareData != other.PurchareData) return false;
      if (ExtraData != other.ExtraData) return false;
      if (ClientIndex != other.ClientIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (Channel != 0) hash ^= Channel.GetHashCode();
      if (BundleId.Length != 0) hash ^= BundleId.GetHashCode();
      if (PurchareData.Length != 0) hash ^= PurchareData.GetHashCode();
      if (ExtraData.Length != 0) hash ^= ExtraData.GetHashCode();
      if (ClientIndex != 0) hash ^= ClientIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Channel != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Channel);
      }
      if (BundleId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BundleId);
      }
      if (PurchareData.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(PurchareData);
      }
      if (ExtraData.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(ExtraData);
      }
      if (ClientIndex != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ClientIndex);
      }
      if (ItemId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (Channel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Channel);
      }
      if (BundleId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BundleId);
      }
      if (PurchareData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PurchareData);
      }
      if (ExtraData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ExtraData);
      }
      if (ClientIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SChargeRequest other) {
      if (other == null) {
        return;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.Channel != 0) {
        Channel = other.Channel;
      }
      if (other.BundleId.Length != 0) {
        BundleId = other.BundleId;
      }
      if (other.PurchareData.Length != 0) {
        PurchareData = other.PurchareData;
      }
      if (other.ExtraData.Length != 0) {
        ExtraData = other.ExtraData;
      }
      if (other.ClientIndex != 0) {
        ClientIndex = other.ClientIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Channel = input.ReadInt32();
            break;
          }
          case 18: {
            BundleId = input.ReadString();
            break;
          }
          case 26: {
            PurchareData = input.ReadBytes();
            break;
          }
          case 34: {
            ExtraData = input.ReadBytes();
            break;
          }
          case 40: {
            ClientIndex = input.ReadInt32();
            break;
          }
          case 48: {
            ItemId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SChargeRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12702,
      }

    }
    #endregion

  }

  public sealed partial class S2CChargeResponse : pb::IMessage<S2CChargeResponse> {
    private static readonly pb::MessageParser<S2CChargeResponse> _parser = new pb::MessageParser<S2CChargeResponse>(() => new S2CChargeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CChargeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[339]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChargeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChargeResponse(S2CChargeResponse other) : this() {
      itemId_ = other.itemId_;
      channel_ = other.channel_;
      bundleId_ = other.bundleId_;
      isFirst_ = other.isFirst_;
      clientIndex_ = other.clientIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChargeResponse Clone() {
      return new S2CChargeResponse(this);
    }

    /// <summary>Field number for the "ItemId" field.</summary>
    public const int ItemIdFieldNumber = 5;
    private int itemId_;
    /// <summary>
    /// 商品ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "Channel" field.</summary>
    public const int ChannelFieldNumber = 1;
    private int channel_;
    /// <summary>
    /// 渠道  1 google   2 appele
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Channel {
      get { return channel_; }
      set {
        channel_ = value;
      }
    }

    /// <summary>Field number for the "BundleId" field.</summary>
    public const int BundleIdFieldNumber = 2;
    private string bundleId_ = "";
    /// <summary>
    /// BundleId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BundleId {
      get { return bundleId_; }
      set {
        bundleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsFirst" field.</summary>
    public const int IsFirstFieldNumber = 3;
    private bool isFirst_;
    /// <summary>
    /// 是否首次
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFirst {
      get { return isFirst_; }
      set {
        isFirst_ = value;
      }
    }

    /// <summary>Field number for the "ClientIndex" field.</summary>
    public const int ClientIndexFieldNumber = 4;
    private int clientIndex_;
    /// <summary>
    /// 客户端索引，用于标记充值记录
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ClientIndex {
      get { return clientIndex_; }
      set {
        clientIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CChargeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CChargeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (Channel != other.Channel) return false;
      if (BundleId != other.BundleId) return false;
      if (IsFirst != other.IsFirst) return false;
      if (ClientIndex != other.ClientIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (Channel != 0) hash ^= Channel.GetHashCode();
      if (BundleId.Length != 0) hash ^= BundleId.GetHashCode();
      if (IsFirst != false) hash ^= IsFirst.GetHashCode();
      if (ClientIndex != 0) hash ^= ClientIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Channel != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Channel);
      }
      if (BundleId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BundleId);
      }
      if (IsFirst != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsFirst);
      }
      if (ClientIndex != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ClientIndex);
      }
      if (ItemId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (Channel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Channel);
      }
      if (BundleId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BundleId);
      }
      if (IsFirst != false) {
        size += 1 + 1;
      }
      if (ClientIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CChargeResponse other) {
      if (other == null) {
        return;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.Channel != 0) {
        Channel = other.Channel;
      }
      if (other.BundleId.Length != 0) {
        BundleId = other.BundleId;
      }
      if (other.IsFirst != false) {
        IsFirst = other.IsFirst;
      }
      if (other.ClientIndex != 0) {
        ClientIndex = other.ClientIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Channel = input.ReadInt32();
            break;
          }
          case 18: {
            BundleId = input.ReadString();
            break;
          }
          case 24: {
            IsFirst = input.ReadBool();
            break;
          }
          case 32: {
            ClientIndex = input.ReadInt32();
            break;
          }
          case 40: {
            ItemId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CChargeResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12703,
      }

    }
    #endregion

  }

  /// <summary>
  /// 首充奖励通知, 第一次充值会通知
  /// </summary>
  public sealed partial class S2CChargeFirstRewardNotify : pb::IMessage<S2CChargeFirstRewardNotify> {
    private static readonly pb::MessageParser<S2CChargeFirstRewardNotify> _parser = new pb::MessageParser<S2CChargeFirstRewardNotify>(() => new S2CChargeFirstRewardNotify());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CChargeFirstRewardNotify> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[340]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChargeFirstRewardNotify() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChargeFirstRewardNotify(S2CChargeFirstRewardNotify other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChargeFirstRewardNotify Clone() {
      return new S2CChargeFirstRewardNotify(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CChargeFirstRewardNotify);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CChargeFirstRewardNotify other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CChargeFirstRewardNotify other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CChargeFirstRewardNotify message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12704,
      }

    }
    #endregion

  }

  /// <summary>
  /// 首充领奖
  /// </summary>
  public sealed partial class C2SChargeFirstAwardRequest : pb::IMessage<C2SChargeFirstAwardRequest> {
    private static readonly pb::MessageParser<C2SChargeFirstAwardRequest> _parser = new pb::MessageParser<C2SChargeFirstAwardRequest>(() => new C2SChargeFirstAwardRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SChargeFirstAwardRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[341]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChargeFirstAwardRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChargeFirstAwardRequest(C2SChargeFirstAwardRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChargeFirstAwardRequest Clone() {
      return new C2SChargeFirstAwardRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SChargeFirstAwardRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SChargeFirstAwardRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SChargeFirstAwardRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SChargeFirstAwardRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12705,
      }

    }
    #endregion

  }

  public sealed partial class S2CChargeFirstAwardResponse : pb::IMessage<S2CChargeFirstAwardResponse> {
    private static readonly pb::MessageParser<S2CChargeFirstAwardResponse> _parser = new pb::MessageParser<S2CChargeFirstAwardResponse>(() => new S2CChargeFirstAwardResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CChargeFirstAwardResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[342]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChargeFirstAwardResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChargeFirstAwardResponse(S2CChargeFirstAwardResponse other) : this() {
      rewards_ = other.rewards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChargeFirstAwardResponse Clone() {
      return new S2CChargeFirstAwardResponse(this);
    }

    /// <summary>Field number for the "Rewards" field.</summary>
    public const int RewardsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ItemInfo> _repeated_rewards_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.ItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> rewards_ = new pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo>();
    /// <summary>
    /// 奖励物品
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> Rewards {
      get { return rewards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CChargeFirstAwardResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CChargeFirstAwardResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rewards_.Equals(other.rewards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rewards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      rewards_.WriteTo(output, _repeated_rewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += rewards_.CalculateSize(_repeated_rewards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CChargeFirstAwardResponse other) {
      if (other == null) {
        return;
      }
      rewards_.Add(other.rewards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            rewards_.AddEntriesFrom(input, _repeated_rewards_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CChargeFirstAwardResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12706,
      }

    }
    #endregion

  }

  /// <summary>
  /// 子活动数据
  /// </summary>
  public sealed partial class SubActivityData : pb::IMessage<SubActivityData> {
    private static readonly pb::MessageParser<SubActivityData> _parser = new pb::MessageParser<SubActivityData>(() => new SubActivityData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubActivityData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[343]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubActivityData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubActivityData(SubActivityData other) : this() {
      subId_ = other.subId_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubActivityData Clone() {
      return new SubActivityData(this);
    }

    /// <summary>Field number for the "SubId" field.</summary>
    public const int SubIdFieldNumber = 1;
    private int subId_;
    /// <summary>
    /// 子ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubId {
      get { return subId_; }
      set {
        subId_ = value;
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 2;
    private int value_;
    /// <summary>
    /// 值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubActivityData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubActivityData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubId != other.SubId) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SubId != 0) hash ^= SubId.GetHashCode();
      if (Value != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SubId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SubId);
      }
      if (Value != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SubId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubId);
      }
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubActivityData other) {
      if (other == null) {
        return;
      }
      if (other.SubId != 0) {
        SubId = other.SubId;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SubId = input.ReadInt32();
            break;
          }
          case 16: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 活动数据
  /// </summary>
  public sealed partial class ActivityData : pb::IMessage<ActivityData> {
    private static readonly pb::MessageParser<ActivityData> _parser = new pb::MessageParser<ActivityData>(() => new ActivityData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivityData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[344]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityData(ActivityData other) : this() {
      id_ = other.id_;
      remainSeconds_ = other.remainSeconds_;
      subDatas_ = other.subDatas_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityData Clone() {
      return new ActivityData(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "RemainSeconds" field.</summary>
    public const int RemainSecondsFieldNumber = 2;
    private int remainSeconds_;
    /// <summary>
    /// 剩余时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RemainSeconds {
      get { return remainSeconds_; }
      set {
        remainSeconds_ = value;
      }
    }

    /// <summary>Field number for the "SubDatas" field.</summary>
    public const int SubDatasFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.SubActivityData> _repeated_subDatas_codec
        = pb::FieldCodec.ForMessage(26, global::Msg.ClientMessage.SubActivityData.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.SubActivityData> subDatas_ = new pbc::RepeatedField<global::Msg.ClientMessage.SubActivityData>();
    /// <summary>
    /// 子任务列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.SubActivityData> SubDatas {
      get { return subDatas_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivityData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivityData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (RemainSeconds != other.RemainSeconds) return false;
      if(!subDatas_.Equals(other.subDatas_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (RemainSeconds != 0) hash ^= RemainSeconds.GetHashCode();
      hash ^= subDatas_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RemainSeconds != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RemainSeconds);
      }
      subDatas_.WriteTo(output, _repeated_subDatas_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (RemainSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainSeconds);
      }
      size += subDatas_.CalculateSize(_repeated_subDatas_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivityData other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.RemainSeconds != 0) {
        RemainSeconds = other.RemainSeconds;
      }
      subDatas_.Add(other.subDatas_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            RemainSeconds = input.ReadInt32();
            break;
          }
          case 26: {
            subDatas_.AddEntriesFrom(input, _repeated_subDatas_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 请求活动数据
  /// </summary>
  public sealed partial class C2SActivityDataRequest : pb::IMessage<C2SActivityDataRequest> {
    private static readonly pb::MessageParser<C2SActivityDataRequest> _parser = new pb::MessageParser<C2SActivityDataRequest>(() => new C2SActivityDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SActivityDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[345]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SActivityDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SActivityDataRequest(C2SActivityDataRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SActivityDataRequest Clone() {
      return new C2SActivityDataRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SActivityDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SActivityDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SActivityDataRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SActivityDataRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12800,
      }

    }
    #endregion

  }

  public sealed partial class S2CActivityDataResponse : pb::IMessage<S2CActivityDataResponse> {
    private static readonly pb::MessageParser<S2CActivityDataResponse> _parser = new pb::MessageParser<S2CActivityDataResponse>(() => new S2CActivityDataResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CActivityDataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[346]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CActivityDataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CActivityDataResponse(S2CActivityDataResponse other) : this() {
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CActivityDataResponse Clone() {
      return new S2CActivityDataResponse(this);
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ActivityData> _repeated_data_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.ActivityData.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ActivityData> data_ = new pbc::RepeatedField<global::Msg.ClientMessage.ActivityData>();
    /// <summary>
    /// 数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ActivityData> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CActivityDataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CActivityDataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CActivityDataResponse other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CActivityDataResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12801,
      }

    }
    #endregion

  }

  /// <summary>
  /// 活动数据通知
  /// </summary>
  public sealed partial class S2CActivityDataNotify : pb::IMessage<S2CActivityDataNotify> {
    private static readonly pb::MessageParser<S2CActivityDataNotify> _parser = new pb::MessageParser<S2CActivityDataNotify>(() => new S2CActivityDataNotify());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CActivityDataNotify> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[347]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CActivityDataNotify() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CActivityDataNotify(S2CActivityDataNotify other) : this() {
      id_ = other.id_;
      subId_ = other.subId_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CActivityDataNotify Clone() {
      return new S2CActivityDataNotify(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "SubId" field.</summary>
    public const int SubIdFieldNumber = 2;
    private int subId_;
    /// <summary>
    /// 子ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubId {
      get { return subId_; }
      set {
        subId_ = value;
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 3;
    private int value_;
    /// <summary>
    /// 数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CActivityDataNotify);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CActivityDataNotify other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (SubId != other.SubId) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (SubId != 0) hash ^= SubId.GetHashCode();
      if (Value != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (SubId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SubId);
      }
      if (Value != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (SubId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubId);
      }
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CActivityDataNotify other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.SubId != 0) {
        SubId = other.SubId;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            SubId = input.ReadInt32();
            break;
          }
          case 24: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CActivityDataNotify message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12802,
      }

    }
    #endregion

  }

  /// <summary>
  /// 活动兑换
  /// </summary>
  public sealed partial class C2SActivityExchangeRequest : pb::IMessage<C2SActivityExchangeRequest> {
    private static readonly pb::MessageParser<C2SActivityExchangeRequest> _parser = new pb::MessageParser<C2SActivityExchangeRequest>(() => new C2SActivityExchangeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SActivityExchangeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[348]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SActivityExchangeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SActivityExchangeRequest(C2SActivityExchangeRequest other) : this() {
      id_ = other.id_;
      subId_ = other.subId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SActivityExchangeRequest Clone() {
      return new C2SActivityExchangeRequest(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "SubId" field.</summary>
    public const int SubIdFieldNumber = 2;
    private int subId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubId {
      get { return subId_; }
      set {
        subId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SActivityExchangeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SActivityExchangeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (SubId != other.SubId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (SubId != 0) hash ^= SubId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (SubId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SubId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (SubId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SActivityExchangeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.SubId != 0) {
        SubId = other.SubId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            SubId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SActivityExchangeRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12803,
      }

    }
    #endregion

  }

  public sealed partial class S2CActivityExchangeResponse : pb::IMessage<S2CActivityExchangeResponse> {
    private static readonly pb::MessageParser<S2CActivityExchangeResponse> _parser = new pb::MessageParser<S2CActivityExchangeResponse>(() => new S2CActivityExchangeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CActivityExchangeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[349]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CActivityExchangeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CActivityExchangeResponse(S2CActivityExchangeResponse other) : this() {
      id_ = other.id_;
      subId_ = other.subId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CActivityExchangeResponse Clone() {
      return new S2CActivityExchangeResponse(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "SubId" field.</summary>
    public const int SubIdFieldNumber = 2;
    private int subId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubId {
      get { return subId_; }
      set {
        subId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CActivityExchangeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CActivityExchangeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (SubId != other.SubId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (SubId != 0) hash ^= SubId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (SubId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SubId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (SubId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CActivityExchangeResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.SubId != 0) {
        SubId = other.SubId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            SubId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CActivityExchangeResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12804,
      }

    }
    #endregion

  }

  /// <summary>
  /// ----------------------------------- 老活动 ---------------------------------
  /// </summary>
  public sealed partial class ActivityInfo : pb::IMessage<ActivityInfo> {
    private static readonly pb::MessageParser<ActivityInfo> _parser = new pb::MessageParser<ActivityInfo>(() => new ActivityInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivityInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[350]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityInfo(ActivityInfo other) : this() {
      cfgId_ = other.cfgId_;
      states_ = other.states_.Clone();
      vals_ = other.vals_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityInfo Clone() {
      return new ActivityInfo(this);
    }

    /// <summary>Field number for the "CfgId" field.</summary>
    public const int CfgIdFieldNumber = 1;
    private int cfgId_;
    /// <summary>
    /// 活动配置Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CfgId {
      get { return cfgId_; }
      set {
        cfgId_ = value;
      }
    }

    /// <summary>Field number for the "States" field.</summary>
    public const int StatesFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_states_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> states_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 活动状态值 对于普通活动（第一个值0表示未完成1表示可以领取2已经领取, 其他的值根据具体活动来定）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> States {
      get { return states_; }
    }

    /// <summary>Field number for the "Vals" field.</summary>
    public const int ValsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_vals_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> vals_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 活动本身的值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Vals {
      get { return vals_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivityInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivityInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CfgId != other.CfgId) return false;
      if(!states_.Equals(other.states_)) return false;
      if(!vals_.Equals(other.vals_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CfgId != 0) hash ^= CfgId.GetHashCode();
      hash ^= states_.GetHashCode();
      hash ^= vals_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CfgId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CfgId);
      }
      states_.WriteTo(output, _repeated_states_codec);
      vals_.WriteTo(output, _repeated_vals_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CfgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CfgId);
      }
      size += states_.CalculateSize(_repeated_states_codec);
      size += vals_.CalculateSize(_repeated_vals_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivityInfo other) {
      if (other == null) {
        return;
      }
      if (other.CfgId != 0) {
        CfgId = other.CfgId;
      }
      states_.Add(other.states_);
      vals_.Add(other.vals_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CfgId = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            states_.AddEntriesFrom(input, _repeated_states_codec);
            break;
          }
          case 26:
          case 24: {
            vals_.AddEntriesFrom(input, _repeated_vals_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class C2SGetAllActivityInfos : pb::IMessage<C2SGetAllActivityInfos> {
    private static readonly pb::MessageParser<C2SGetAllActivityInfos> _parser = new pb::MessageParser<C2SGetAllActivityInfos>(() => new C2SGetAllActivityInfos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetAllActivityInfos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[351]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetAllActivityInfos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetAllActivityInfos(C2SGetAllActivityInfos other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetAllActivityInfos Clone() {
      return new C2SGetAllActivityInfos(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetAllActivityInfos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetAllActivityInfos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetAllActivityInfos other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetAllActivityInfos message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12850,
      }

    }
    #endregion

  }

  public sealed partial class S2CActivityInfosUpdate : pb::IMessage<S2CActivityInfosUpdate> {
    private static readonly pb::MessageParser<S2CActivityInfosUpdate> _parser = new pb::MessageParser<S2CActivityInfosUpdate>(() => new S2CActivityInfosUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CActivityInfosUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[352]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CActivityInfosUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CActivityInfosUpdate(S2CActivityInfosUpdate other) : this() {
      activityinfos_ = other.activityinfos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CActivityInfosUpdate Clone() {
      return new S2CActivityInfosUpdate(this);
    }

    /// <summary>Field number for the "Activityinfos" field.</summary>
    public const int ActivityinfosFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ActivityInfo> _repeated_activityinfos_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.ClientMessage.ActivityInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ActivityInfo> activityinfos_ = new pbc::RepeatedField<global::Msg.ClientMessage.ActivityInfo>();
    /// <summary>
    /// 活动信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ActivityInfo> Activityinfos {
      get { return activityinfos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CActivityInfosUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CActivityInfosUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!activityinfos_.Equals(other.activityinfos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= activityinfos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      activityinfos_.WriteTo(output, _repeated_activityinfos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += activityinfos_.CalculateSize(_repeated_activityinfos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CActivityInfosUpdate other) {
      if (other == null) {
        return;
      }
      activityinfos_.Add(other.activityinfos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            activityinfos_.AddEntriesFrom(input, _repeated_activityinfos_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CActivityInfosUpdate message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12851,
      }

    }
    #endregion

  }

  public sealed partial class C2SGetActivityReward : pb::IMessage<C2SGetActivityReward> {
    private static readonly pb::MessageParser<C2SGetActivityReward> _parser = new pb::MessageParser<C2SGetActivityReward>(() => new C2SGetActivityReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGetActivityReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[353]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetActivityReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetActivityReward(C2SGetActivityReward other) : this() {
      activityCfgId_ = other.activityCfgId_;
      extraParams_ = other.extraParams_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGetActivityReward Clone() {
      return new C2SGetActivityReward(this);
    }

    /// <summary>Field number for the "ActivityCfgId" field.</summary>
    public const int ActivityCfgIdFieldNumber = 1;
    private int activityCfgId_;
    /// <summary>
    /// 活动Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActivityCfgId {
      get { return activityCfgId_; }
      set {
        activityCfgId_ = value;
      }
    }

    /// <summary>Field number for the "ExtraParams" field.</summary>
    public const int ExtraParamsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_extraParams_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> extraParams_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 附加参数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ExtraParams {
      get { return extraParams_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGetActivityReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGetActivityReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityCfgId != other.ActivityCfgId) return false;
      if(!extraParams_.Equals(other.extraParams_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityCfgId != 0) hash ^= ActivityCfgId.GetHashCode();
      hash ^= extraParams_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActivityCfgId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ActivityCfgId);
      }
      extraParams_.WriteTo(output, _repeated_extraParams_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActivityCfgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActivityCfgId);
      }
      size += extraParams_.CalculateSize(_repeated_extraParams_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGetActivityReward other) {
      if (other == null) {
        return;
      }
      if (other.ActivityCfgId != 0) {
        ActivityCfgId = other.ActivityCfgId;
      }
      extraParams_.Add(other.extraParams_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ActivityCfgId = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            extraParams_.AddEntriesFrom(input, _repeated_extraParams_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGetActivityReward message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12852,
      }

    }
    #endregion

  }

  public sealed partial class S2CRetActivityReward : pb::IMessage<S2CRetActivityReward> {
    private static readonly pb::MessageParser<S2CRetActivityReward> _parser = new pb::MessageParser<S2CRetActivityReward>(() => new S2CRetActivityReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CRetActivityReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[354]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRetActivityReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRetActivityReward(S2CRetActivityReward other) : this() {
      activityCfgId_ = other.activityCfgId_;
      rewards_ = other.rewards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRetActivityReward Clone() {
      return new S2CRetActivityReward(this);
    }

    /// <summary>Field number for the "ActivityCfgId" field.</summary>
    public const int ActivityCfgIdFieldNumber = 1;
    private int activityCfgId_;
    /// <summary>
    /// 活动Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActivityCfgId {
      get { return activityCfgId_; }
      set {
        activityCfgId_ = value;
      }
    }

    /// <summary>Field number for the "Rewards" field.</summary>
    public const int RewardsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.IdNum> _repeated_rewards_codec
        = pb::FieldCodec.ForMessage(18, global::Msg.ClientMessage.IdNum.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.IdNum> rewards_ = new pbc::RepeatedField<global::Msg.ClientMessage.IdNum>();
    /// <summary>
    /// 奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.IdNum> Rewards {
      get { return rewards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CRetActivityReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CRetActivityReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityCfgId != other.ActivityCfgId) return false;
      if(!rewards_.Equals(other.rewards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityCfgId != 0) hash ^= ActivityCfgId.GetHashCode();
      hash ^= rewards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActivityCfgId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ActivityCfgId);
      }
      rewards_.WriteTo(output, _repeated_rewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActivityCfgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActivityCfgId);
      }
      size += rewards_.CalculateSize(_repeated_rewards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CRetActivityReward other) {
      if (other == null) {
        return;
      }
      if (other.ActivityCfgId != 0) {
        ActivityCfgId = other.ActivityCfgId;
      }
      rewards_.Add(other.rewards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ActivityCfgId = input.ReadInt32();
            break;
          }
          case 18: {
            rewards_.AddEntriesFrom(input, _repeated_rewards_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CRetActivityReward message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12853,
      }

    }
    #endregion

  }

  /// <summary>
  /// 红点通知
  /// </summary>
  public sealed partial class C2SRedPointStatesRequest : pb::IMessage<C2SRedPointStatesRequest> {
    private static readonly pb::MessageParser<C2SRedPointStatesRequest> _parser = new pb::MessageParser<C2SRedPointStatesRequest>(() => new C2SRedPointStatesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SRedPointStatesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[355]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SRedPointStatesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SRedPointStatesRequest(C2SRedPointStatesRequest other) : this() {
      modules_ = other.modules_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SRedPointStatesRequest Clone() {
      return new C2SRedPointStatesRequest(this);
    }

    /// <summary>Field number for the "Modules" field.</summary>
    public const int ModulesFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_modules_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> modules_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 需要功能序列  索引为红点功能定义，空序列为都需要
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Modules {
      get { return modules_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SRedPointStatesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SRedPointStatesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!modules_.Equals(other.modules_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= modules_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      modules_.WriteTo(output, _repeated_modules_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += modules_.CalculateSize(_repeated_modules_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SRedPointStatesRequest other) {
      if (other == null) {
        return;
      }
      modules_.Add(other.modules_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            modules_.AddEntriesFrom(input, _repeated_modules_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SRedPointStatesRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12900,
      }

    }
    #endregion

  }

  public sealed partial class S2CRedPointStatesResponse : pb::IMessage<S2CRedPointStatesResponse> {
    private static readonly pb::MessageParser<S2CRedPointStatesResponse> _parser = new pb::MessageParser<S2CRedPointStatesResponse>(() => new S2CRedPointStatesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CRedPointStatesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[356]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRedPointStatesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRedPointStatesResponse(S2CRedPointStatesResponse other) : this() {
      modules_ = other.modules_.Clone();
      states_ = other.states_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRedPointStatesResponse Clone() {
      return new S2CRedPointStatesResponse(this);
    }

    /// <summary>Field number for the "Modules" field.</summary>
    public const int ModulesFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_modules_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> modules_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 需要功能序列
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Modules {
      get { return modules_; }
    }

    /// <summary>Field number for the "States" field.</summary>
    public const int StatesFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_states_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> states_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 状态序列  0 不提示  大于0 提示  索引为红点功能
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> States {
      get { return states_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CRedPointStatesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CRedPointStatesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!modules_.Equals(other.modules_)) return false;
      if(!states_.Equals(other.states_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= modules_.GetHashCode();
      hash ^= states_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      modules_.WriteTo(output, _repeated_modules_codec);
      states_.WriteTo(output, _repeated_states_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += modules_.CalculateSize(_repeated_modules_codec);
      size += states_.CalculateSize(_repeated_states_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CRedPointStatesResponse other) {
      if (other == null) {
        return;
      }
      modules_.Add(other.modules_);
      states_.Add(other.states_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            modules_.AddEntriesFrom(input, _repeated_modules_codec);
            break;
          }
          case 18:
          case 16: {
            states_.AddEntriesFrom(input, _repeated_states_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CRedPointStatesResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12901,
      }

    }
    #endregion

  }

  /// <summary>
  /// ----------------------------------- 引导 -----------------------------------
  /// 引导数据保存
  /// </summary>
  public sealed partial class C2SGuideDataSaveRequest : pb::IMessage<C2SGuideDataSaveRequest> {
    private static readonly pb::MessageParser<C2SGuideDataSaveRequest> _parser = new pb::MessageParser<C2SGuideDataSaveRequest>(() => new C2SGuideDataSaveRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGuideDataSaveRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[357]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGuideDataSaveRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGuideDataSaveRequest(C2SGuideDataSaveRequest other) : this() {
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGuideDataSaveRequest Clone() {
      return new C2SGuideDataSaveRequest(this);
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 1;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGuideDataSaveRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGuideDataSaveRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGuideDataSaveRequest other) {
      if (other == null) {
        return;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SGuideDataSaveRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12902,
      }

    }
    #endregion

  }

  public sealed partial class S2CGuideDataSaveResponse : pb::IMessage<S2CGuideDataSaveResponse> {
    private static readonly pb::MessageParser<S2CGuideDataSaveResponse> _parser = new pb::MessageParser<S2CGuideDataSaveResponse>(() => new S2CGuideDataSaveResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGuideDataSaveResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[358]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGuideDataSaveResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGuideDataSaveResponse(S2CGuideDataSaveResponse other) : this() {
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGuideDataSaveResponse Clone() {
      return new S2CGuideDataSaveResponse(this);
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 1;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGuideDataSaveResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGuideDataSaveResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGuideDataSaveResponse other) {
      if (other == null) {
        return;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGuideDataSaveResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12903,
      }

    }
    #endregion

  }

  /// <summary>
  /// 引导数据  进入游戏后主动通知
  /// </summary>
  public sealed partial class S2CGuideDataResponse : pb::IMessage<S2CGuideDataResponse> {
    private static readonly pb::MessageParser<S2CGuideDataResponse> _parser = new pb::MessageParser<S2CGuideDataResponse>(() => new S2CGuideDataResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGuideDataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[359]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGuideDataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGuideDataResponse(S2CGuideDataResponse other) : this() {
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGuideDataResponse Clone() {
      return new S2CGuideDataResponse(this);
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 1;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGuideDataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGuideDataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGuideDataResponse other) {
      if (other == null) {
        return;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CGuideDataResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 12904,
      }

    }
    #endregion

  }

  public sealed partial class GuideDM : pb::IMessage<GuideDM> {
    private static readonly pb::MessageParser<GuideDM> _parser = new pb::MessageParser<GuideDM>(() => new GuideDM());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GuideDM> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[360]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuideDM() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuideDM(GuideDM other) : this() {
      guideID_ = other.guideID_;
      stepID_ = other.stepID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuideDM Clone() {
      return new GuideDM(this);
    }

    /// <summary>Field number for the "GuideID" field.</summary>
    public const int GuideIDFieldNumber = 1;
    private int guideID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GuideID {
      get { return guideID_; }
      set {
        guideID_ = value;
      }
    }

    /// <summary>Field number for the "StepID" field.</summary>
    public const int StepIDFieldNumber = 2;
    private int stepID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StepID {
      get { return stepID_; }
      set {
        stepID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GuideDM);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GuideDM other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GuideID != other.GuideID) return false;
      if (StepID != other.StepID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GuideID != 0) hash ^= GuideID.GetHashCode();
      if (StepID != 0) hash ^= StepID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GuideID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GuideID);
      }
      if (StepID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(StepID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GuideID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuideID);
      }
      if (StepID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StepID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GuideDM other) {
      if (other == null) {
        return;
      }
      if (other.GuideID != 0) {
        GuideID = other.GuideID;
      }
      if (other.StepID != 0) {
        StepID = other.StepID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GuideID = input.ReadInt32();
            break;
          }
          case 16: {
            StepID = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ----------------------------------- 空间 -----------------------------------
  /// 请求关注数据
  /// </summary>
  public sealed partial class C2SFocusDataRequest : pb::IMessage<C2SFocusDataRequest> {
    private static readonly pb::MessageParser<C2SFocusDataRequest> _parser = new pb::MessageParser<C2SFocusDataRequest>(() => new C2SFocusDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SFocusDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[361]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFocusDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFocusDataRequest(C2SFocusDataRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFocusDataRequest Clone() {
      return new C2SFocusDataRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SFocusDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SFocusDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SFocusDataRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SFocusDataRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 13000,
      }

    }
    #endregion

  }

  public sealed partial class FocusPlayer : pb::IMessage<FocusPlayer> {
    private static readonly pb::MessageParser<FocusPlayer> _parser = new pb::MessageParser<FocusPlayer>(() => new FocusPlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FocusPlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[362]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FocusPlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FocusPlayer(FocusPlayer other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      level_ = other.level_;
      head_ = other.head_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FocusPlayer Clone() {
      return new FocusPlayer(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Level" field.</summary>
    public const int LevelFieldNumber = 3;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "Head" field.</summary>
    public const int HeadFieldNumber = 4;
    private int head_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Head {
      get { return head_; }
      set {
        head_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FocusPlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FocusPlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Level != other.Level) return false;
      if (Head != other.Head) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Head != 0) hash ^= Head.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      if (Head != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Head);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (Head != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Head);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FocusPlayer other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Head != 0) {
        Head = other.Head;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 32: {
            Head = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CFocusDataResponse : pb::IMessage<S2CFocusDataResponse> {
    private static readonly pb::MessageParser<S2CFocusDataResponse> _parser = new pb::MessageParser<S2CFocusDataResponse>(() => new S2CFocusDataResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CFocusDataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[363]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFocusDataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFocusDataResponse(S2CFocusDataResponse other) : this() {
      beFocusNum_ = other.beFocusNum_;
      players_ = other.players_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFocusDataResponse Clone() {
      return new S2CFocusDataResponse(this);
    }

    /// <summary>Field number for the "BeFocusNum" field.</summary>
    public const int BeFocusNumFieldNumber = 1;
    private int beFocusNum_;
    /// <summary>
    /// 被关注数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BeFocusNum {
      get { return beFocusNum_; }
      set {
        beFocusNum_ = value;
      }
    }

    /// <summary>Field number for the "Players" field.</summary>
    public const int PlayersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.FocusPlayer> _repeated_players_codec
        = pb::FieldCodec.ForMessage(18, global::Msg.ClientMessage.FocusPlayer.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.FocusPlayer> players_ = new pbc::RepeatedField<global::Msg.ClientMessage.FocusPlayer>();
    /// <summary>
    /// 关注的玩家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.FocusPlayer> Players {
      get { return players_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CFocusDataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CFocusDataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BeFocusNum != other.BeFocusNum) return false;
      if(!players_.Equals(other.players_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BeFocusNum != 0) hash ^= BeFocusNum.GetHashCode();
      hash ^= players_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BeFocusNum != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BeFocusNum);
      }
      players_.WriteTo(output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BeFocusNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BeFocusNum);
      }
      size += players_.CalculateSize(_repeated_players_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CFocusDataResponse other) {
      if (other == null) {
        return;
      }
      if (other.BeFocusNum != 0) {
        BeFocusNum = other.BeFocusNum;
      }
      players_.Add(other.players_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BeFocusNum = input.ReadInt32();
            break;
          }
          case 18: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CFocusDataResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 13001,
      }

    }
    #endregion

  }

  /// <summary>
  /// 关注玩家
  /// </summary>
  public sealed partial class C2SFocusPlayerRequest : pb::IMessage<C2SFocusPlayerRequest> {
    private static readonly pb::MessageParser<C2SFocusPlayerRequest> _parser = new pb::MessageParser<C2SFocusPlayerRequest>(() => new C2SFocusPlayerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SFocusPlayerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[364]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFocusPlayerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFocusPlayerRequest(C2SFocusPlayerRequest other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFocusPlayerRequest Clone() {
      return new C2SFocusPlayerRequest(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SFocusPlayerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SFocusPlayerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SFocusPlayerRequest other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SFocusPlayerRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 13002,
      }

    }
    #endregion

  }

  public sealed partial class S2CFocusPlayerResponse : pb::IMessage<S2CFocusPlayerResponse> {
    private static readonly pb::MessageParser<S2CFocusPlayerResponse> _parser = new pb::MessageParser<S2CFocusPlayerResponse>(() => new S2CFocusPlayerResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CFocusPlayerResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[365]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFocusPlayerResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFocusPlayerResponse(S2CFocusPlayerResponse other) : this() {
      playerInfo_ = other.playerInfo_ != null ? other.playerInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFocusPlayerResponse Clone() {
      return new S2CFocusPlayerResponse(this);
    }

    /// <summary>Field number for the "PlayerInfo" field.</summary>
    public const int PlayerInfoFieldNumber = 1;
    private global::Msg.ClientMessage.FocusPlayer playerInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ClientMessage.FocusPlayer PlayerInfo {
      get { return playerInfo_; }
      set {
        playerInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CFocusPlayerResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CFocusPlayerResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PlayerInfo, other.PlayerInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (playerInfo_ != null) hash ^= PlayerInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (playerInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayerInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (playerInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CFocusPlayerResponse other) {
      if (other == null) {
        return;
      }
      if (other.playerInfo_ != null) {
        if (playerInfo_ == null) {
          PlayerInfo = new global::Msg.ClientMessage.FocusPlayer();
        }
        PlayerInfo.MergeFrom(other.PlayerInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (playerInfo_ == null) {
              PlayerInfo = new global::Msg.ClientMessage.FocusPlayer();
            }
            input.ReadMessage(PlayerInfo);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CFocusPlayerResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 13003,
      }

    }
    #endregion

  }

  /// <summary>
  /// 取消关注
  /// </summary>
  public sealed partial class C2SFocusPlayerCancalRequest : pb::IMessage<C2SFocusPlayerCancalRequest> {
    private static readonly pb::MessageParser<C2SFocusPlayerCancalRequest> _parser = new pb::MessageParser<C2SFocusPlayerCancalRequest>(() => new C2SFocusPlayerCancalRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SFocusPlayerCancalRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[366]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFocusPlayerCancalRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFocusPlayerCancalRequest(C2SFocusPlayerCancalRequest other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFocusPlayerCancalRequest Clone() {
      return new C2SFocusPlayerCancalRequest(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SFocusPlayerCancalRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SFocusPlayerCancalRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SFocusPlayerCancalRequest other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SFocusPlayerCancalRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 13004,
      }

    }
    #endregion

  }

  public sealed partial class S2CFocusPlayerCancelResponse : pb::IMessage<S2CFocusPlayerCancelResponse> {
    private static readonly pb::MessageParser<S2CFocusPlayerCancelResponse> _parser = new pb::MessageParser<S2CFocusPlayerCancelResponse>(() => new S2CFocusPlayerCancelResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CFocusPlayerCancelResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[367]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFocusPlayerCancelResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFocusPlayerCancelResponse(S2CFocusPlayerCancelResponse other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFocusPlayerCancelResponse Clone() {
      return new S2CFocusPlayerCancelResponse(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CFocusPlayerCancelResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CFocusPlayerCancelResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CFocusPlayerCancelResponse other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CFocusPlayerCancelResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 13005,
      }

    }
    #endregion

  }

  /// <summary>
  /// 请求空间照片的状态
  /// </summary>
  public sealed partial class C2SMyPictureDataRequest : pb::IMessage<C2SMyPictureDataRequest> {
    private static readonly pb::MessageParser<C2SMyPictureDataRequest> _parser = new pb::MessageParser<C2SMyPictureDataRequest>(() => new C2SMyPictureDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SMyPictureDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[368]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMyPictureDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMyPictureDataRequest(C2SMyPictureDataRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMyPictureDataRequest Clone() {
      return new C2SMyPictureDataRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SMyPictureDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SMyPictureDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SMyPictureDataRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SMyPictureDataRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 13006,
      }

    }
    #endregion

  }

  public sealed partial class S2CMyPictureDataResponse : pb::IMessage<S2CMyPictureDataResponse> {
    private static readonly pb::MessageParser<S2CMyPictureDataResponse> _parser = new pb::MessageParser<S2CMyPictureDataResponse>(() => new S2CMyPictureDataResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CMyPictureDataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[369]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMyPictureDataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMyPictureDataResponse(S2CMyPictureDataResponse other) : this() {
      catIds_ = other.catIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMyPictureDataResponse Clone() {
      return new S2CMyPictureDataResponse(this);
    }

    /// <summary>Field number for the "CatIds" field.</summary>
    public const int CatIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_catIds_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> catIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CatIds {
      get { return catIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CMyPictureDataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CMyPictureDataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!catIds_.Equals(other.catIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= catIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      catIds_.WriteTo(output, _repeated_catIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += catIds_.CalculateSize(_repeated_catIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CMyPictureDataResponse other) {
      if (other == null) {
        return;
      }
      catIds_.Add(other.catIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            catIds_.AddEntriesFrom(input, _repeated_catIds_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CMyPictureDataResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 13007,
      }

    }
    #endregion

  }

  /// <summary>
  /// 请求设置空间照片
  /// </summary>
  public sealed partial class C2SMyPictureSetRequest : pb::IMessage<C2SMyPictureSetRequest> {
    private static readonly pb::MessageParser<C2SMyPictureSetRequest> _parser = new pb::MessageParser<C2SMyPictureSetRequest>(() => new C2SMyPictureSetRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SMyPictureSetRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[370]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMyPictureSetRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMyPictureSetRequest(C2SMyPictureSetRequest other) : this() {
      catId_ = other.catId_;
      isCancel_ = other.isCancel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMyPictureSetRequest Clone() {
      return new C2SMyPictureSetRequest(this);
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 1;
    private int catId_;
    /// <summary>
    /// 猫实例ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    /// <summary>Field number for the "IsCancel" field.</summary>
    public const int IsCancelFieldNumber = 2;
    private bool isCancel_;
    /// <summary>
    /// 是否取消
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCancel {
      get { return isCancel_; }
      set {
        isCancel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SMyPictureSetRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SMyPictureSetRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatId != other.CatId) return false;
      if (IsCancel != other.IsCancel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatId != 0) hash ^= CatId.GetHashCode();
      if (IsCancel != false) hash ^= IsCancel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatId);
      }
      if (IsCancel != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsCancel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      if (IsCancel != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SMyPictureSetRequest other) {
      if (other == null) {
        return;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      if (other.IsCancel != false) {
        IsCancel = other.IsCancel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatId = input.ReadInt32();
            break;
          }
          case 16: {
            IsCancel = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SMyPictureSetRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 13008,
      }

    }
    #endregion

  }

  public sealed partial class S2CMyPictureSetResponse : pb::IMessage<S2CMyPictureSetResponse> {
    private static readonly pb::MessageParser<S2CMyPictureSetResponse> _parser = new pb::MessageParser<S2CMyPictureSetResponse>(() => new S2CMyPictureSetResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CMyPictureSetResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[371]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMyPictureSetResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMyPictureSetResponse(S2CMyPictureSetResponse other) : this() {
      catId_ = other.catId_;
      isCancel_ = other.isCancel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMyPictureSetResponse Clone() {
      return new S2CMyPictureSetResponse(this);
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 1;
    private int catId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    /// <summary>Field number for the "IsCancel" field.</summary>
    public const int IsCancelFieldNumber = 2;
    private bool isCancel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCancel {
      get { return isCancel_; }
      set {
        isCancel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CMyPictureSetResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CMyPictureSetResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatId != other.CatId) return false;
      if (IsCancel != other.IsCancel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatId != 0) hash ^= CatId.GetHashCode();
      if (IsCancel != false) hash ^= IsCancel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CatId);
      }
      if (IsCancel != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsCancel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      if (IsCancel != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CMyPictureSetResponse other) {
      if (other == null) {
        return;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      if (other.IsCancel != false) {
        IsCancel = other.IsCancel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CatId = input.ReadInt32();
            break;
          }
          case 16: {
            IsCancel = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CMyPictureSetResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 13009,
      }

    }
    #endregion

  }

  /// <summary>
  /// 查看其他玩家个人空间
  /// </summary>
  public sealed partial class C2SSpaceDataRequest : pb::IMessage<C2SSpaceDataRequest> {
    private static readonly pb::MessageParser<C2SSpaceDataRequest> _parser = new pb::MessageParser<C2SSpaceDataRequest>(() => new C2SSpaceDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SSpaceDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[372]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSpaceDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSpaceDataRequest(C2SSpaceDataRequest other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSpaceDataRequest Clone() {
      return new C2SSpaceDataRequest(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SSpaceDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SSpaceDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SSpaceDataRequest other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SSpaceDataRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 13010,
      }

    }
    #endregion

  }

  public sealed partial class SpaceCatData : pb::IMessage<SpaceCatData> {
    private static readonly pb::MessageParser<SpaceCatData> _parser = new pb::MessageParser<SpaceCatData>(() => new SpaceCatData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpaceCatData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[373]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpaceCatData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpaceCatData(SpaceCatData other) : this() {
      catId_ = other.catId_;
      catTableId_ = other.catTableId_;
      catName_ = other.catName_;
      catOuqi_ = other.catOuqi_;
      coinAbility_ = other.coinAbility_;
      matchAbility_ = other.matchAbility_;
      exploreAbility_ = other.exploreAbility_;
      isUnlock_ = other.isUnlock_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpaceCatData Clone() {
      return new SpaceCatData(this);
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 2;
    private int catId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    /// <summary>Field number for the "CatTableId" field.</summary>
    public const int CatTableIdFieldNumber = 3;
    private int catTableId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatTableId {
      get { return catTableId_; }
      set {
        catTableId_ = value;
      }
    }

    /// <summary>Field number for the "CatName" field.</summary>
    public const int CatNameFieldNumber = 4;
    private string catName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CatName {
      get { return catName_; }
      set {
        catName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CatOuqi" field.</summary>
    public const int CatOuqiFieldNumber = 5;
    private int catOuqi_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatOuqi {
      get { return catOuqi_; }
      set {
        catOuqi_ = value;
      }
    }

    /// <summary>Field number for the "CoinAbility" field.</summary>
    public const int CoinAbilityFieldNumber = 6;
    private int coinAbility_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CoinAbility {
      get { return coinAbility_; }
      set {
        coinAbility_ = value;
      }
    }

    /// <summary>Field number for the "MatchAbility" field.</summary>
    public const int MatchAbilityFieldNumber = 7;
    private int matchAbility_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MatchAbility {
      get { return matchAbility_; }
      set {
        matchAbility_ = value;
      }
    }

    /// <summary>Field number for the "ExploreAbility" field.</summary>
    public const int ExploreAbilityFieldNumber = 8;
    private int exploreAbility_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExploreAbility {
      get { return exploreAbility_; }
      set {
        exploreAbility_ = value;
      }
    }

    /// <summary>Field number for the "IsUnlock" field.</summary>
    public const int IsUnlockFieldNumber = 9;
    private bool isUnlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsUnlock {
      get { return isUnlock_; }
      set {
        isUnlock_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpaceCatData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpaceCatData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatId != other.CatId) return false;
      if (CatTableId != other.CatTableId) return false;
      if (CatName != other.CatName) return false;
      if (CatOuqi != other.CatOuqi) return false;
      if (CoinAbility != other.CoinAbility) return false;
      if (MatchAbility != other.MatchAbility) return false;
      if (ExploreAbility != other.ExploreAbility) return false;
      if (IsUnlock != other.IsUnlock) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatId != 0) hash ^= CatId.GetHashCode();
      if (CatTableId != 0) hash ^= CatTableId.GetHashCode();
      if (CatName.Length != 0) hash ^= CatName.GetHashCode();
      if (CatOuqi != 0) hash ^= CatOuqi.GetHashCode();
      if (CoinAbility != 0) hash ^= CoinAbility.GetHashCode();
      if (MatchAbility != 0) hash ^= MatchAbility.GetHashCode();
      if (ExploreAbility != 0) hash ^= ExploreAbility.GetHashCode();
      if (IsUnlock != false) hash ^= IsUnlock.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CatId);
      }
      if (CatTableId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CatTableId);
      }
      if (CatName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CatName);
      }
      if (CatOuqi != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CatOuqi);
      }
      if (CoinAbility != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(CoinAbility);
      }
      if (MatchAbility != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MatchAbility);
      }
      if (ExploreAbility != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ExploreAbility);
      }
      if (IsUnlock != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsUnlock);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      if (CatTableId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatTableId);
      }
      if (CatName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CatName);
      }
      if (CatOuqi != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatOuqi);
      }
      if (CoinAbility != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CoinAbility);
      }
      if (MatchAbility != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MatchAbility);
      }
      if (ExploreAbility != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExploreAbility);
      }
      if (IsUnlock != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpaceCatData other) {
      if (other == null) {
        return;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      if (other.CatTableId != 0) {
        CatTableId = other.CatTableId;
      }
      if (other.CatName.Length != 0) {
        CatName = other.CatName;
      }
      if (other.CatOuqi != 0) {
        CatOuqi = other.CatOuqi;
      }
      if (other.CoinAbility != 0) {
        CoinAbility = other.CoinAbility;
      }
      if (other.MatchAbility != 0) {
        MatchAbility = other.MatchAbility;
      }
      if (other.ExploreAbility != 0) {
        ExploreAbility = other.ExploreAbility;
      }
      if (other.IsUnlock != false) {
        IsUnlock = other.IsUnlock;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            CatId = input.ReadInt32();
            break;
          }
          case 24: {
            CatTableId = input.ReadInt32();
            break;
          }
          case 34: {
            CatName = input.ReadString();
            break;
          }
          case 40: {
            CatOuqi = input.ReadInt32();
            break;
          }
          case 48: {
            CoinAbility = input.ReadInt32();
            break;
          }
          case 56: {
            MatchAbility = input.ReadInt32();
            break;
          }
          case 64: {
            ExploreAbility = input.ReadInt32();
            break;
          }
          case 72: {
            IsUnlock = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CSpaceDataResponse : pb::IMessage<S2CSpaceDataResponse> {
    private static readonly pb::MessageParser<S2CSpaceDataResponse> _parser = new pb::MessageParser<S2CSpaceDataResponse>(() => new S2CSpaceDataResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSpaceDataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[374]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSpaceDataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSpaceDataResponse(S2CSpaceDataResponse other) : this() {
      playerId_ = other.playerId_;
      playerName_ = other.playerName_;
      playerLevel_ = other.playerLevel_;
      playerHead_ = other.playerHead_;
      zaned_ = other.zaned_;
      beFocusNum_ = other.beFocusNum_;
      charm_ = other.charm_;
      cats_ = other.cats_.Clone();
      gender_ = other.gender_;
      fashionIds_ = other.fashionIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSpaceDataResponse Clone() {
      return new S2CSpaceDataResponse(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "PlayerName" field.</summary>
    public const int PlayerNameFieldNumber = 2;
    private string playerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PlayerLevel" field.</summary>
    public const int PlayerLevelFieldNumber = 3;
    private int playerLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerLevel {
      get { return playerLevel_; }
      set {
        playerLevel_ = value;
      }
    }

    /// <summary>Field number for the "PlayerHead" field.</summary>
    public const int PlayerHeadFieldNumber = 4;
    private int playerHead_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerHead {
      get { return playerHead_; }
      set {
        playerHead_ = value;
      }
    }

    /// <summary>Field number for the "Zaned" field.</summary>
    public const int ZanedFieldNumber = 5;
    private int zaned_;
    /// <summary>
    /// 赞数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Zaned {
      get { return zaned_; }
      set {
        zaned_ = value;
      }
    }

    /// <summary>Field number for the "BeFocusNum" field.</summary>
    public const int BeFocusNumFieldNumber = 6;
    private int beFocusNum_;
    /// <summary>
    /// 被关注数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BeFocusNum {
      get { return beFocusNum_; }
      set {
        beFocusNum_ = value;
      }
    }

    /// <summary>Field number for the "Charm" field.</summary>
    public const int CharmFieldNumber = 7;
    private int charm_;
    /// <summary>
    /// 魅力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Charm {
      get { return charm_; }
      set {
        charm_ = value;
      }
    }

    /// <summary>Field number for the "Cats" field.</summary>
    public const int CatsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.SpaceCatData> _repeated_cats_codec
        = pb::FieldCodec.ForMessage(66, global::Msg.ClientMessage.SpaceCatData.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.SpaceCatData> cats_ = new pbc::RepeatedField<global::Msg.ClientMessage.SpaceCatData>();
    /// <summary>
    /// 空间照片
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.SpaceCatData> Cats {
      get { return cats_; }
    }

    /// <summary>Field number for the "Gender" field.</summary>
    public const int GenderFieldNumber = 9;
    private int gender_;
    /// <summary>
    /// 性别
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gender {
      get { return gender_; }
      set {
        gender_ = value;
      }
    }

    /// <summary>Field number for the "FashionIds" field.</summary>
    public const int FashionIdsFieldNumber = 10;
    private static readonly pb::FieldCodec<int> _repeated_fashionIds_codec
        = pb::FieldCodec.ForInt32(82);
    private readonly pbc::RepeatedField<int> fashionIds_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 形象时装
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> FashionIds {
      get { return fashionIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSpaceDataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSpaceDataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PlayerName != other.PlayerName) return false;
      if (PlayerLevel != other.PlayerLevel) return false;
      if (PlayerHead != other.PlayerHead) return false;
      if (Zaned != other.Zaned) return false;
      if (BeFocusNum != other.BeFocusNum) return false;
      if (Charm != other.Charm) return false;
      if(!cats_.Equals(other.cats_)) return false;
      if (Gender != other.Gender) return false;
      if(!fashionIds_.Equals(other.fashionIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (PlayerLevel != 0) hash ^= PlayerLevel.GetHashCode();
      if (PlayerHead != 0) hash ^= PlayerHead.GetHashCode();
      if (Zaned != 0) hash ^= Zaned.GetHashCode();
      if (BeFocusNum != 0) hash ^= BeFocusNum.GetHashCode();
      if (Charm != 0) hash ^= Charm.GetHashCode();
      hash ^= cats_.GetHashCode();
      if (Gender != 0) hash ^= Gender.GetHashCode();
      hash ^= fashionIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerName);
      }
      if (PlayerLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PlayerLevel);
      }
      if (PlayerHead != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PlayerHead);
      }
      if (Zaned != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Zaned);
      }
      if (BeFocusNum != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(BeFocusNum);
      }
      if (Charm != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Charm);
      }
      cats_.WriteTo(output, _repeated_cats_codec);
      if (Gender != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Gender);
      }
      fashionIds_.WriteTo(output, _repeated_fashionIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (PlayerLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerLevel);
      }
      if (PlayerHead != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerHead);
      }
      if (Zaned != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Zaned);
      }
      if (BeFocusNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BeFocusNum);
      }
      if (Charm != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Charm);
      }
      size += cats_.CalculateSize(_repeated_cats_codec);
      if (Gender != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gender);
      }
      size += fashionIds_.CalculateSize(_repeated_fashionIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSpaceDataResponse other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      if (other.PlayerLevel != 0) {
        PlayerLevel = other.PlayerLevel;
      }
      if (other.PlayerHead != 0) {
        PlayerHead = other.PlayerHead;
      }
      if (other.Zaned != 0) {
        Zaned = other.Zaned;
      }
      if (other.BeFocusNum != 0) {
        BeFocusNum = other.BeFocusNum;
      }
      if (other.Charm != 0) {
        Charm = other.Charm;
      }
      cats_.Add(other.cats_);
      if (other.Gender != 0) {
        Gender = other.Gender;
      }
      fashionIds_.Add(other.fashionIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            PlayerName = input.ReadString();
            break;
          }
          case 24: {
            PlayerLevel = input.ReadInt32();
            break;
          }
          case 32: {
            PlayerHead = input.ReadInt32();
            break;
          }
          case 40: {
            Zaned = input.ReadInt32();
            break;
          }
          case 48: {
            BeFocusNum = input.ReadInt32();
            break;
          }
          case 56: {
            Charm = input.ReadInt32();
            break;
          }
          case 66: {
            cats_.AddEntriesFrom(input, _repeated_cats_codec);
            break;
          }
          case 72: {
            Gender = input.ReadInt32();
            break;
          }
          case 82:
          case 80: {
            fashionIds_.AddEntriesFrom(input, _repeated_fashionIds_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CSpaceDataResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 13011,
      }

    }
    #endregion

  }

  /// <summary>
  /// 空间形象设置性别
  /// </summary>
  public sealed partial class C2SSpaceSetGenderRequest : pb::IMessage<C2SSpaceSetGenderRequest> {
    private static readonly pb::MessageParser<C2SSpaceSetGenderRequest> _parser = new pb::MessageParser<C2SSpaceSetGenderRequest>(() => new C2SSpaceSetGenderRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SSpaceSetGenderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[375]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSpaceSetGenderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSpaceSetGenderRequest(C2SSpaceSetGenderRequest other) : this() {
      gender_ = other.gender_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSpaceSetGenderRequest Clone() {
      return new C2SSpaceSetGenderRequest(this);
    }

    /// <summary>Field number for the "Gender" field.</summary>
    public const int GenderFieldNumber = 1;
    private int gender_;
    /// <summary>
    /// 1 男  2 女
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gender {
      get { return gender_; }
      set {
        gender_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SSpaceSetGenderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SSpaceSetGenderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Gender != other.Gender) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Gender != 0) hash ^= Gender.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Gender != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Gender);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Gender != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gender);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SSpaceSetGenderRequest other) {
      if (other == null) {
        return;
      }
      if (other.Gender != 0) {
        Gender = other.Gender;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Gender = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SSpaceSetGenderRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 13020,
      }

    }
    #endregion

  }

  public sealed partial class S2CSpaceSetGenderResponse : pb::IMessage<S2CSpaceSetGenderResponse> {
    private static readonly pb::MessageParser<S2CSpaceSetGenderResponse> _parser = new pb::MessageParser<S2CSpaceSetGenderResponse>(() => new S2CSpaceSetGenderResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSpaceSetGenderResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[376]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSpaceSetGenderResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSpaceSetGenderResponse(S2CSpaceSetGenderResponse other) : this() {
      gender_ = other.gender_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSpaceSetGenderResponse Clone() {
      return new S2CSpaceSetGenderResponse(this);
    }

    /// <summary>Field number for the "Gender" field.</summary>
    public const int GenderFieldNumber = 1;
    private int gender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gender {
      get { return gender_; }
      set {
        gender_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSpaceSetGenderResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSpaceSetGenderResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Gender != other.Gender) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Gender != 0) hash ^= Gender.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Gender != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Gender);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Gender != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gender);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSpaceSetGenderResponse other) {
      if (other == null) {
        return;
      }
      if (other.Gender != 0) {
        Gender = other.Gender;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Gender = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CSpaceSetGenderResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 13021,
      }

    }
    #endregion

  }

  /// <summary>
  /// 空间形象保存
  /// </summary>
  public sealed partial class C2SSpaceFashionSaveRequest : pb::IMessage<C2SSpaceFashionSaveRequest> {
    private static readonly pb::MessageParser<C2SSpaceFashionSaveRequest> _parser = new pb::MessageParser<C2SSpaceFashionSaveRequest>(() => new C2SSpaceFashionSaveRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SSpaceFashionSaveRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[377]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSpaceFashionSaveRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSpaceFashionSaveRequest(C2SSpaceFashionSaveRequest other) : this() {
      fashionIds_ = other.fashionIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSpaceFashionSaveRequest Clone() {
      return new C2SSpaceFashionSaveRequest(this);
    }

    /// <summary>Field number for the "FashionIds" field.</summary>
    public const int FashionIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_fashionIds_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> fashionIds_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 空表示还原为初始状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> FashionIds {
      get { return fashionIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SSpaceFashionSaveRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SSpaceFashionSaveRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!fashionIds_.Equals(other.fashionIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= fashionIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      fashionIds_.WriteTo(output, _repeated_fashionIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fashionIds_.CalculateSize(_repeated_fashionIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SSpaceFashionSaveRequest other) {
      if (other == null) {
        return;
      }
      fashionIds_.Add(other.fashionIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            fashionIds_.AddEntriesFrom(input, _repeated_fashionIds_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SSpaceFashionSaveRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 13022,
      }

    }
    #endregion

  }

  public sealed partial class S2CSpaceFashionSaveResponse : pb::IMessage<S2CSpaceFashionSaveResponse> {
    private static readonly pb::MessageParser<S2CSpaceFashionSaveResponse> _parser = new pb::MessageParser<S2CSpaceFashionSaveResponse>(() => new S2CSpaceFashionSaveResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSpaceFashionSaveResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[378]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSpaceFashionSaveResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSpaceFashionSaveResponse(S2CSpaceFashionSaveResponse other) : this() {
      fashionIds_ = other.fashionIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSpaceFashionSaveResponse Clone() {
      return new S2CSpaceFashionSaveResponse(this);
    }

    /// <summary>Field number for the "FashionIds" field.</summary>
    public const int FashionIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_fashionIds_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> fashionIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> FashionIds {
      get { return fashionIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSpaceFashionSaveResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSpaceFashionSaveResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!fashionIds_.Equals(other.fashionIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= fashionIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      fashionIds_.WriteTo(output, _repeated_fashionIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fashionIds_.CalculateSize(_repeated_fashionIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSpaceFashionSaveResponse other) {
      if (other == null) {
        return;
      }
      fashionIds_.Add(other.fashionIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            fashionIds_.AddEntriesFrom(input, _repeated_fashionIds_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CSpaceFashionSaveResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 13023,
      }

    }
    #endregion

  }

  /// <summary>
  /// 获取形象
  /// </summary>
  public sealed partial class C2SSpaceFashionDataRequest : pb::IMessage<C2SSpaceFashionDataRequest> {
    private static readonly pb::MessageParser<C2SSpaceFashionDataRequest> _parser = new pb::MessageParser<C2SSpaceFashionDataRequest>(() => new C2SSpaceFashionDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SSpaceFashionDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[379]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSpaceFashionDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSpaceFashionDataRequest(C2SSpaceFashionDataRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSpaceFashionDataRequest Clone() {
      return new C2SSpaceFashionDataRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SSpaceFashionDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SSpaceFashionDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SSpaceFashionDataRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SSpaceFashionDataRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 13024,
      }

    }
    #endregion

  }

  public sealed partial class S2CSpaceFashionDataResponse : pb::IMessage<S2CSpaceFashionDataResponse> {
    private static readonly pb::MessageParser<S2CSpaceFashionDataResponse> _parser = new pb::MessageParser<S2CSpaceFashionDataResponse>(() => new S2CSpaceFashionDataResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSpaceFashionDataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[380]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSpaceFashionDataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSpaceFashionDataResponse(S2CSpaceFashionDataResponse other) : this() {
      gender_ = other.gender_;
      fashionIds_ = other.fashionIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSpaceFashionDataResponse Clone() {
      return new S2CSpaceFashionDataResponse(this);
    }

    /// <summary>Field number for the "Gender" field.</summary>
    public const int GenderFieldNumber = 1;
    private int gender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gender {
      get { return gender_; }
      set {
        gender_ = value;
      }
    }

    /// <summary>Field number for the "FashionIds" field.</summary>
    public const int FashionIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_fashionIds_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> fashionIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> FashionIds {
      get { return fashionIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSpaceFashionDataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSpaceFashionDataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Gender != other.Gender) return false;
      if(!fashionIds_.Equals(other.fashionIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Gender != 0) hash ^= Gender.GetHashCode();
      hash ^= fashionIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Gender != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Gender);
      }
      fashionIds_.WriteTo(output, _repeated_fashionIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Gender != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gender);
      }
      size += fashionIds_.CalculateSize(_repeated_fashionIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSpaceFashionDataResponse other) {
      if (other == null) {
        return;
      }
      if (other.Gender != 0) {
        Gender = other.Gender;
      }
      fashionIds_.Add(other.fashionIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Gender = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            fashionIds_.AddEntriesFrom(input, _repeated_fashionIds_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CSpaceFashionDataResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 13025,
      }

    }
    #endregion

  }

  /// <summary>
  /// 解锁空间照片
  /// </summary>
  public sealed partial class C2SSpaceCatUnlockRequest : pb::IMessage<C2SSpaceCatUnlockRequest> {
    private static readonly pb::MessageParser<C2SSpaceCatUnlockRequest> _parser = new pb::MessageParser<C2SSpaceCatUnlockRequest>(() => new C2SSpaceCatUnlockRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SSpaceCatUnlockRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[381]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSpaceCatUnlockRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSpaceCatUnlockRequest(C2SSpaceCatUnlockRequest other) : this() {
      playerId_ = other.playerId_;
      catId_ = other.catId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSpaceCatUnlockRequest Clone() {
      return new C2SSpaceCatUnlockRequest(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 2;
    private int catId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SSpaceCatUnlockRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SSpaceCatUnlockRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (CatId != other.CatId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (CatId != 0) hash ^= CatId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (CatId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CatId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SSpaceCatUnlockRequest other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            CatId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SSpaceCatUnlockRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 13030,
      }

    }
    #endregion

  }

  public sealed partial class S2CSpaceCatUnlockResponse : pb::IMessage<S2CSpaceCatUnlockResponse> {
    private static readonly pb::MessageParser<S2CSpaceCatUnlockResponse> _parser = new pb::MessageParser<S2CSpaceCatUnlockResponse>(() => new S2CSpaceCatUnlockResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSpaceCatUnlockResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[382]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSpaceCatUnlockResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSpaceCatUnlockResponse(S2CSpaceCatUnlockResponse other) : this() {
      playerId_ = other.playerId_;
      catId_ = other.catId_;
      isUnlock_ = other.isUnlock_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSpaceCatUnlockResponse Clone() {
      return new S2CSpaceCatUnlockResponse(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "CatId" field.</summary>
    public const int CatIdFieldNumber = 2;
    private int catId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CatId {
      get { return catId_; }
      set {
        catId_ = value;
      }
    }

    /// <summary>Field number for the "IsUnlock" field.</summary>
    public const int IsUnlockFieldNumber = 3;
    private bool isUnlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsUnlock {
      get { return isUnlock_; }
      set {
        isUnlock_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSpaceCatUnlockResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSpaceCatUnlockResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (CatId != other.CatId) return false;
      if (IsUnlock != other.IsUnlock) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (CatId != 0) hash ^= CatId.GetHashCode();
      if (IsUnlock != false) hash ^= IsUnlock.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (CatId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CatId);
      }
      if (IsUnlock != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsUnlock);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (CatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CatId);
      }
      if (IsUnlock != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSpaceCatUnlockResponse other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.CatId != 0) {
        CatId = other.CatId;
      }
      if (other.IsUnlock != false) {
        IsUnlock = other.IsUnlock;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            CatId = input.ReadInt32();
            break;
          }
          case 24: {
            IsUnlock = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CSpaceCatUnlockResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 13031,
      }

    }
    #endregion

  }

  /// <summary>
  /// ---------------------------------- 签到 ------------------------------------
  /// 签到数据
  /// </summary>
  public sealed partial class C2SSignDataRequest : pb::IMessage<C2SSignDataRequest> {
    private static readonly pb::MessageParser<C2SSignDataRequest> _parser = new pb::MessageParser<C2SSignDataRequest>(() => new C2SSignDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SSignDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[383]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSignDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSignDataRequest(C2SSignDataRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSignDataRequest Clone() {
      return new C2SSignDataRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SSignDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SSignDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SSignDataRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SSignDataRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 14000,
      }

    }
    #endregion

  }

  public sealed partial class S2CSignDataResponse : pb::IMessage<S2CSignDataResponse> {
    private static readonly pb::MessageParser<S2CSignDataResponse> _parser = new pb::MessageParser<S2CSignDataResponse>(() => new S2CSignDataResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSignDataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[384]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSignDataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSignDataResponse(S2CSignDataResponse other) : this() {
      group_ = other.group_;
      takeAwardIndex_ = other.takeAwardIndex_;
      signedIndex_ = other.signedIndex_;
      nextSignRemainSeconds_ = other.nextSignRemainSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSignDataResponse Clone() {
      return new S2CSignDataResponse(this);
    }

    /// <summary>Field number for the "Group" field.</summary>
    public const int GroupFieldNumber = 1;
    private int group_;
    /// <summary>
    /// 签到周期索引
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Group {
      get { return group_; }
      set {
        group_ = value;
      }
    }

    /// <summary>Field number for the "TakeAwardIndex" field.</summary>
    public const int TakeAwardIndexFieldNumber = 2;
    private int takeAwardIndex_;
    /// <summary>
    /// 已领奖的索引
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TakeAwardIndex {
      get { return takeAwardIndex_; }
      set {
        takeAwardIndex_ = value;
      }
    }

    /// <summary>Field number for the "SignedIndex" field.</summary>
    public const int SignedIndexFieldNumber = 3;
    private int signedIndex_;
    /// <summary>
    /// 已签到的索引
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SignedIndex {
      get { return signedIndex_; }
      set {
        signedIndex_ = value;
      }
    }

    /// <summary>Field number for the "NextSignRemainSeconds" field.</summary>
    public const int NextSignRemainSecondsFieldNumber = 4;
    private int nextSignRemainSeconds_;
    /// <summary>
    /// 下次领奖剩余秒数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NextSignRemainSeconds {
      get { return nextSignRemainSeconds_; }
      set {
        nextSignRemainSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSignDataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSignDataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Group != other.Group) return false;
      if (TakeAwardIndex != other.TakeAwardIndex) return false;
      if (SignedIndex != other.SignedIndex) return false;
      if (NextSignRemainSeconds != other.NextSignRemainSeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Group != 0) hash ^= Group.GetHashCode();
      if (TakeAwardIndex != 0) hash ^= TakeAwardIndex.GetHashCode();
      if (SignedIndex != 0) hash ^= SignedIndex.GetHashCode();
      if (NextSignRemainSeconds != 0) hash ^= NextSignRemainSeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Group != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Group);
      }
      if (TakeAwardIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TakeAwardIndex);
      }
      if (SignedIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SignedIndex);
      }
      if (NextSignRemainSeconds != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NextSignRemainSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Group != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Group);
      }
      if (TakeAwardIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TakeAwardIndex);
      }
      if (SignedIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SignedIndex);
      }
      if (NextSignRemainSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NextSignRemainSeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSignDataResponse other) {
      if (other == null) {
        return;
      }
      if (other.Group != 0) {
        Group = other.Group;
      }
      if (other.TakeAwardIndex != 0) {
        TakeAwardIndex = other.TakeAwardIndex;
      }
      if (other.SignedIndex != 0) {
        SignedIndex = other.SignedIndex;
      }
      if (other.NextSignRemainSeconds != 0) {
        NextSignRemainSeconds = other.NextSignRemainSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Group = input.ReadInt32();
            break;
          }
          case 16: {
            TakeAwardIndex = input.ReadInt32();
            break;
          }
          case 24: {
            SignedIndex = input.ReadInt32();
            break;
          }
          case 32: {
            NextSignRemainSeconds = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CSignDataResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 14001,
      }

    }
    #endregion

  }

  /// <summary>
  /// 领奖
  /// </summary>
  public sealed partial class C2SSignAwardRequest : pb::IMessage<C2SSignAwardRequest> {
    private static readonly pb::MessageParser<C2SSignAwardRequest> _parser = new pb::MessageParser<C2SSignAwardRequest>(() => new C2SSignAwardRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SSignAwardRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[385]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSignAwardRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSignAwardRequest(C2SSignAwardRequest other) : this() {
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSignAwardRequest Clone() {
      return new C2SSignAwardRequest(this);
    }

    /// <summary>Field number for the "Index" field.</summary>
    public const int IndexFieldNumber = 1;
    private int index_;
    /// <summary>
    /// 领奖的索引  0 表示领取所有
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SSignAwardRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SSignAwardRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Index != 0) hash ^= Index.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SSignAwardRequest other) {
      if (other == null) {
        return;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SSignAwardRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 14002,
      }

    }
    #endregion

  }

  public sealed partial class S2CSignAwardResponse : pb::IMessage<S2CSignAwardResponse> {
    private static readonly pb::MessageParser<S2CSignAwardResponse> _parser = new pb::MessageParser<S2CSignAwardResponse>(() => new S2CSignAwardResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSignAwardResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[386]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSignAwardResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSignAwardResponse(S2CSignAwardResponse other) : this() {
      index_ = other.index_;
      rewards_ = other.rewards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSignAwardResponse Clone() {
      return new S2CSignAwardResponse(this);
    }

    /// <summary>Field number for the "Index" field.</summary>
    public const int IndexFieldNumber = 1;
    private int index_;
    /// <summary>
    /// 领奖的索引
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "Rewards" field.</summary>
    public const int RewardsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ItemInfo> _repeated_rewards_codec
        = pb::FieldCodec.ForMessage(18, global::Msg.ClientMessage.ItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> rewards_ = new pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo>();
    /// <summary>
    /// 领到的奖
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> Rewards {
      get { return rewards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSignAwardResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSignAwardResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if(!rewards_.Equals(other.rewards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Index != 0) hash ^= Index.GetHashCode();
      hash ^= rewards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      rewards_.WriteTo(output, _repeated_rewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      size += rewards_.CalculateSize(_repeated_rewards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSignAwardResponse other) {
      if (other == null) {
        return;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      rewards_.Add(other.rewards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 18: {
            rewards_.AddEntriesFrom(input, _repeated_rewards_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CSignAwardResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 14003,
      }

    }
    #endregion

  }

  /// <summary>
  /// ---------------------------------- 七天乐 ----------------------------------
  /// 七天乐数据
  /// </summary>
  public sealed partial class C2SSevenDaysDataRequest : pb::IMessage<C2SSevenDaysDataRequest> {
    private static readonly pb::MessageParser<C2SSevenDaysDataRequest> _parser = new pb::MessageParser<C2SSevenDaysDataRequest>(() => new C2SSevenDaysDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SSevenDaysDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[387]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSevenDaysDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSevenDaysDataRequest(C2SSevenDaysDataRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSevenDaysDataRequest Clone() {
      return new C2SSevenDaysDataRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SSevenDaysDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SSevenDaysDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SSevenDaysDataRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SSevenDaysDataRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 15000,
      }

    }
    #endregion

  }

  public sealed partial class S2CSevenDaysDataResponse : pb::IMessage<S2CSevenDaysDataResponse> {
    private static readonly pb::MessageParser<S2CSevenDaysDataResponse> _parser = new pb::MessageParser<S2CSevenDaysDataResponse>(() => new S2CSevenDaysDataResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSevenDaysDataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[388]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSevenDaysDataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSevenDaysDataResponse(S2CSevenDaysDataResponse other) : this() {
      awardStates_ = other.awardStates_.Clone();
      startTime_ = other.startTime_;
      remainSeconds_ = other.remainSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSevenDaysDataResponse Clone() {
      return new S2CSevenDaysDataResponse(this);
    }

    /// <summary>Field number for the "AwardStates" field.</summary>
    public const int AwardStatesFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_awardStates_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> awardStates_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 领奖状态序列，最大长度为7，0表示未领奖，1表示已领奖
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> AwardStates {
      get { return awardStates_; }
    }

    /// <summary>Field number for the "StartTime" field.</summary>
    public const int StartTimeFieldNumber = 2;
    private int startTime_;
    /// <summary>
    /// 开始时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "RemainSeconds" field.</summary>
    public const int RemainSecondsFieldNumber = 3;
    private int remainSeconds_;
    /// <summary>
    /// 剩余时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RemainSeconds {
      get { return remainSeconds_; }
      set {
        remainSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSevenDaysDataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSevenDaysDataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!awardStates_.Equals(other.awardStates_)) return false;
      if (StartTime != other.StartTime) return false;
      if (RemainSeconds != other.RemainSeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= awardStates_.GetHashCode();
      if (StartTime != 0) hash ^= StartTime.GetHashCode();
      if (RemainSeconds != 0) hash ^= RemainSeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      awardStates_.WriteTo(output, _repeated_awardStates_codec);
      if (StartTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(StartTime);
      }
      if (RemainSeconds != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RemainSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += awardStates_.CalculateSize(_repeated_awardStates_codec);
      if (StartTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartTime);
      }
      if (RemainSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainSeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSevenDaysDataResponse other) {
      if (other == null) {
        return;
      }
      awardStates_.Add(other.awardStates_);
      if (other.StartTime != 0) {
        StartTime = other.StartTime;
      }
      if (other.RemainSeconds != 0) {
        RemainSeconds = other.RemainSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            awardStates_.AddEntriesFrom(input, _repeated_awardStates_codec);
            break;
          }
          case 16: {
            StartTime = input.ReadInt32();
            break;
          }
          case 24: {
            RemainSeconds = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CSevenDaysDataResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 15001,
      }

    }
    #endregion

  }

  /// <summary>
  /// 领奖
  /// </summary>
  public sealed partial class C2SSevenDaysAwardRequest : pb::IMessage<C2SSevenDaysAwardRequest> {
    private static readonly pb::MessageParser<C2SSevenDaysAwardRequest> _parser = new pb::MessageParser<C2SSevenDaysAwardRequest>(() => new C2SSevenDaysAwardRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SSevenDaysAwardRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[389]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSevenDaysAwardRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSevenDaysAwardRequest(C2SSevenDaysAwardRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSevenDaysAwardRequest Clone() {
      return new C2SSevenDaysAwardRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SSevenDaysAwardRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SSevenDaysAwardRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SSevenDaysAwardRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SSevenDaysAwardRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 15002,
      }

    }
    #endregion

  }

  public sealed partial class S2CSevenDaysAwardResponse : pb::IMessage<S2CSevenDaysAwardResponse> {
    private static readonly pb::MessageParser<S2CSevenDaysAwardResponse> _parser = new pb::MessageParser<S2CSevenDaysAwardResponse>(() => new S2CSevenDaysAwardResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSevenDaysAwardResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.ClientMessage.ClientMessageReflection.Descriptor.MessageTypes[390]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSevenDaysAwardResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSevenDaysAwardResponse(S2CSevenDaysAwardResponse other) : this() {
      days_ = other.days_;
      rewards_ = other.rewards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSevenDaysAwardResponse Clone() {
      return new S2CSevenDaysAwardResponse(this);
    }

    /// <summary>Field number for the "Days" field.</summary>
    public const int DaysFieldNumber = 1;
    private int days_;
    /// <summary>
    /// 对应天数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Days {
      get { return days_; }
      set {
        days_ = value;
      }
    }

    /// <summary>Field number for the "Rewards" field.</summary>
    public const int RewardsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Msg.ClientMessage.ItemInfo> _repeated_rewards_codec
        = pb::FieldCodec.ForMessage(18, global::Msg.ClientMessage.ItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> rewards_ = new pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo>();
    /// <summary>
    /// 获得的奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.ClientMessage.ItemInfo> Rewards {
      get { return rewards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSevenDaysAwardResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSevenDaysAwardResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Days != other.Days) return false;
      if(!rewards_.Equals(other.rewards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Days != 0) hash ^= Days.GetHashCode();
      hash ^= rewards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Days != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Days);
      }
      rewards_.WriteTo(output, _repeated_rewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Days != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Days);
      }
      size += rewards_.CalculateSize(_repeated_rewards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSevenDaysAwardResponse other) {
      if (other == null) {
        return;
      }
      if (other.Days != 0) {
        Days = other.Days;
      }
      rewards_.Add(other.rewards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Days = input.ReadInt32();
            break;
          }
          case 18: {
            rewards_.AddEntriesFrom(input, _repeated_rewards_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CSevenDaysAwardResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EProtocol {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ProtoID")] ProtoId = 15003,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
